	%define	___tmcNewMatrix	[iat+MY_LOAD_ADDRESS+0*4]	; @1
	%define	__tmcCreateMatrix	[iat+MY_LOAD_ADDRESS+1*4]	; @2
	%define	__tmcMat2String	[iat+MY_LOAD_ADDRESS+2*4]	; @3
	%define	__tmcNewMatrix_dbg	[iat+MY_LOAD_ADDRESS+3*4]	; @4
	%define	__tmcRaiseException	[iat+MY_LOAD_ADDRESS+4*4]	; @5
	%define	_dgeevx	[iat+MY_LOAD_ADDRESS+5*4]	; @6
	%define	_dgels	[iat+MY_LOAD_ADDRESS+6*4]	; @7
	%define	_dgeqrf	[iat+MY_LOAD_ADDRESS+7*4]	; @8
	%define	_dgesvd	[iat+MY_LOAD_ADDRESS+8*4]	; @9
	%define	_g_MemCnt	[iat+MY_LOAD_ADDRESS+9*4]	; @10
	%define	_g_MemN	[iat+MY_LOAD_ADDRESS+10*4]	; @11
	%define	_g_MemUsed	[iat+MY_LOAD_ADDRESS+11*4]	; @12
	%define	_mmy_free	[iat+MY_LOAD_ADDRESS+12*4]	; @13
	%define	_tmcAdd	[iat+MY_LOAD_ADDRESS+13*4]	; @14
	%define	_tmcAndBoolean	[iat+MY_LOAD_ADDRESS+14*4]	; @15
	%define	_tmcAndScalar	[iat+MY_LOAD_ADDRESS+15*4]	; @16
	%define	_tmcAssign	[iat+MY_LOAD_ADDRESS+16*4]	; @17
	%define	_tmcAssignBool	[iat+MY_LOAD_ADDRESS+17*4]	; @18
	%define	_tmcCalcSwitchExpVal	[iat+MY_LOAD_ADDRESS+18*4]	; @19
	%define	_tmcCollectCellColumns	[iat+MY_LOAD_ADDRESS+19*4]	; @20
	%define	_tmcCollectCellRows	[iat+MY_LOAD_ADDRESS+20*4]	; @21
	%define	_tmcCollectColumns	[iat+MY_LOAD_ADDRESS+21*4]	; @22
	%define	_tmcCollectRows	[iat+MY_LOAD_ADDRESS+22*4]	; @23
	%define	_tmcComplexScalar	[iat+MY_LOAD_ADDRESS+23*4]	; @24
	%define	_tmcCopyMat	[iat+MY_LOAD_ADDRESS+24*4]	; @25
	%define	_tmcCreateCellEmpty	[iat+MY_LOAD_ADDRESS+25*4]	; @26
	%define	_tmcCreateColonBaseIncLimit	[iat+MY_LOAD_ADDRESS+26*4]	; @27
	%define	_tmcCreateColonBaseLimit	[iat+MY_LOAD_ADDRESS+27*4]	; @28
	%define	_tmcCreateMagicColon	[iat+MY_LOAD_ADDRESS+28*4]	; @29
	%define	_tmcCreateMatrixEmpty	[iat+MY_LOAD_ADDRESS+29*4]	; @30
	%define	_tmcCreateRegFrame	[iat+MY_LOAD_ADDRESS+30*4]	; @31
	%define	_tmcCreateString	[iat+MY_LOAD_ADDRESS+31*4]	; @32
	%define	_tmcDisplayMat	[iat+MY_LOAD_ADDRESS+32*4]	; @33
	%define	_tmcDiv	[iat+MY_LOAD_ADDRESS+33*4]	; @34
	%define	_tmcDivScalar	[iat+MY_LOAD_ADDRESS+34*4]	; @35
	%define	_tmcEq	[iat+MY_LOAD_ADDRESS+35*4]	; @36
	%define	_tmcFncHandle	[iat+MY_LOAD_ADDRESS+36*4]	; @37
	%define	_tmcForIterInit	[iat+MY_LOAD_ADDRESS+37*4]	; @38
	%define	_tmcForIterNext	[iat+MY_LOAD_ADDRESS+38*4]	; @39
	%define	_tmcFreeLib	[iat+MY_LOAD_ADDRESS+39*4]	; @40
	%define	_tmcFreeLocalVar	[iat+MY_LOAD_ADDRESS+40*4]	; @41
	%define	_tmcFreeRegFrame	[iat+MY_LOAD_ADDRESS+41*4]	; @42
	%define	_tmcGe	[iat+MY_LOAD_ADDRESS+42*4]	; @43
	%define	_tmcGetByFieldHcode	[iat+MY_LOAD_ADDRESS+43*4]	; @44
	%define	_tmcGetByIndex	[iat+MY_LOAD_ADDRESS+44*4]	; @45
	%define	_tmcGetByIndexCell	[iat+MY_LOAD_ADDRESS+45*4]	; @46
	%define	_tmcGetEnd	[iat+MY_LOAD_ADDRESS+46*4]	; @47
	%define	_tmcGetRefByFieldHcode	[iat+MY_LOAD_ADDRESS+47*4]	; @48
	%define	_tmcGetRefByIndex	[iat+MY_LOAD_ADDRESS+48*4]	; @49
	%define	_tmcGetRefByIndexCell	[iat+MY_LOAD_ADDRESS+49*4]	; @50
	%define	_tmcGt	[iat+MY_LOAD_ADDRESS+50*4]	; @51
	%define	_tmcInitLib	[iat+MY_LOAD_ADDRESS+51*4]	; @52
	%define	_tmcIsCaseDouble	[iat+MY_LOAD_ADDRESS+52*4]	; @53
	%define	_tmcIsCaseString	[iat+MY_LOAD_ADDRESS+53*4]	; @54
	%define	_tmcIsFalse	[iat+MY_LOAD_ADDRESS+54*4]	; @55
	%define	_tmcIsFieldHcode	[iat+MY_LOAD_ADDRESS+55*4]	; @56
	%define	_tmcIsTrue	[iat+MY_LOAD_ADDRESS+56*4]	; @57
	%define	_tmcLe	[iat+MY_LOAD_ADDRESS+57*4]	; @58
	%define	_tmcLeftDiv	[iat+MY_LOAD_ADDRESS+58*4]	; @59
	%define	_tmcLt	[iat+MY_LOAD_ADDRESS+59*4]	; @60
	%define	_tmcMul	[iat+MY_LOAD_ADDRESS+60*4]	; @61
	%define	_tmcMulScalar	[iat+MY_LOAD_ADDRESS+61*4]	; @62
	%define	_tmcNe	[iat+MY_LOAD_ADDRESS+62*4]	; @63
	%define	_tmcNeg	[iat+MY_LOAD_ADDRESS+63*4]	; @64
	%define	_tmcNot	[iat+MY_LOAD_ADDRESS+64*4]	; @65
	%define	_tmcNotCase	[iat+MY_LOAD_ADDRESS+65*4]	; @66
	%define	_tmcOrBoolean	[iat+MY_LOAD_ADDRESS+66*4]	; @67
	%define	_tmcOrScalar	[iat+MY_LOAD_ADDRESS+67*4]	; @68
	%define	_tmcPower	[iat+MY_LOAD_ADDRESS+68*4]	; @69
	%define	_tmcPowerScalar	[iat+MY_LOAD_ADDRESS+69*4]	; @70
	%define	_tmcReallocRegister	[iat+MY_LOAD_ADDRESS+70*4]	; @71
	%define	_tmcScalar	[iat+MY_LOAD_ADDRESS+71*4]	; @72
	%define	_tmcSub	[iat+MY_LOAD_ADDRESS+72*4]	; @73
	%define	_tmcSyntaxError	[iat+MY_LOAD_ADDRESS+73*4]	; @74
	%define	_tmcTranspose	[iat+MY_LOAD_ADDRESS+74*4]	; @75
	%define	_tmcTransposeScalar	[iat+MY_LOAD_ADDRESS+75*4]	; @76
	%define	_tmcabs	[iat+MY_LOAD_ADDRESS+76*4]	; @77
	%define	_tmcacos	[iat+MY_LOAD_ADDRESS+77*4]	; @78
	%define	_tmcall	[iat+MY_LOAD_ADDRESS+78*4]	; @79
	%define	_tmcangle	[iat+MY_LOAD_ADDRESS+79*4]	; @80
	%define	_tmcany	[iat+MY_LOAD_ADDRESS+80*4]	; @81
	%define	_tmcasin	[iat+MY_LOAD_ADDRESS+81*4]	; @82
	%define	_tmcatan	[iat+MY_LOAD_ADDRESS+82*4]	; @83
	%define	_tmcatan2	[iat+MY_LOAD_ADDRESS+83*4]	; @84
	%define	_tmcaxis	[iat+MY_LOAD_ADDRESS+84*4]	; @85
	%define	_tmcbitand	[iat+MY_LOAD_ADDRESS+85*4]	; @86
	%define	_tmcbitor	[iat+MY_LOAD_ADDRESS+86*4]	; @87
	%define	_tmcbitshift	[iat+MY_LOAD_ADDRESS+87*4]	; @88
	%define	_tmcceil	[iat+MY_LOAD_ADDRESS+88*4]	; @89
	%define	_tmccell	[iat+MY_LOAD_ADDRESS+89*4]	; @90
	%define	_tmcchar	[iat+MY_LOAD_ADDRESS+90*4]	; @91
	%define	_tmcclose	[iat+MY_LOAD_ADDRESS+91*4]	; @92
	%define	_tmcconj	[iat+MY_LOAD_ADDRESS+92*4]	; @93
	%define	_tmccos	[iat+MY_LOAD_ADDRESS+93*4]	; @94
	%define	_tmccumprod	[iat+MY_LOAD_ADDRESS+94*4]	; @95
	%define	_tmcdec2hex	[iat+MY_LOAD_ADDRESS+95*4]	; @96
	%define	_tmcdeconv	[iat+MY_LOAD_ADDRESS+96*4]	; @97
	%define	_tmcdiag	[iat+MY_LOAD_ADDRESS+97*4]	; @98
	%define	_tmcdiff	[iat+MY_LOAD_ADDRESS+98*4]	; @99
	%define	_tmcdisp	[iat+MY_LOAD_ADDRESS+99*4]	; @100
	%define	_tmcdouble	[iat+MY_LOAD_ADDRESS+100*4]	; @101
	%define	_tmceig	[iat+MY_LOAD_ADDRESS+101*4]	; @102
	%define	_tmcerror	[iat+MY_LOAD_ADDRESS+102*4]	; @103
	%define	_tmceval	[iat+MY_LOAD_ADDRESS+103*4]	; @104
	%define	_tmcexp	[iat+MY_LOAD_ADDRESS+104*4]	; @105
	%define	_tmcfclose	[iat+MY_LOAD_ADDRESS+105*4]	; @106
	%define	_tmcfeof	[iat+MY_LOAD_ADDRESS+106*4]	; @107
	%define	_tmcfeval	[iat+MY_LOAD_ADDRESS+107*4]	; @108
	%define	_tmcfft	[iat+MY_LOAD_ADDRESS+108*4]	; @109
	%define	_tmcfgetl	[iat+MY_LOAD_ADDRESS+109*4]	; @110
	%define	_tmcfieldnames	[iat+MY_LOAD_ADDRESS+110*4]	; @111
	%define	_tmcfill	[iat+MY_LOAD_ADDRESS+111*4]	; @112
	%define	_tmcfind	[iat+MY_LOAD_ADDRESS+112*4]	; @113
	%define	_tmcfindstr	[iat+MY_LOAD_ADDRESS+113*4]	; @114
	%define	_tmcfix	[iat+MY_LOAD_ADDRESS+114*4]	; @115
	%define	_tmcfliplr	[iat+MY_LOAD_ADDRESS+115*4]	; @116
	%define	_tmcfloor	[iat+MY_LOAD_ADDRESS+116*4]	; @117
	%define	_tmcfopen	[iat+MY_LOAD_ADDRESS+117*4]	; @118
	%define	_tmcfprintf	[iat+MY_LOAD_ADDRESS+118*4]	; @119
	%define	_tmcgca	[iat+MY_LOAD_ADDRESS+119*4]	; @120
	%define	_tmcget	[iat+MY_LOAD_ADDRESS+120*4]	; @121
	%define	_tmcgetfield	[iat+MY_LOAD_ADDRESS+121*4]	; @122
	%define	_tmcgrid	[iat+MY_LOAD_ADDRESS+122*4]	; @123
	%define	_tmchex2dec	[iat+MY_LOAD_ADDRESS+123*4]	; @124
	%define	_tmchold	[iat+MY_LOAD_ADDRESS+124*4]	; @125
	%define	_tmcimag	[iat+MY_LOAD_ADDRESS+125*4]	; @126
	%define	_tmcinterp1	[iat+MY_LOAD_ADDRESS+126*4]	; @127
	%define	_tmcintersect	[iat+MY_LOAD_ADDRESS+127*4]	; @128
	%define	_tmcinv	[iat+MY_LOAD_ADDRESS+128*4]	; @129
	%define	_tmciscell	[iat+MY_LOAD_ADDRESS+129*4]	; @130
	%define	_tmcischar	[iat+MY_LOAD_ADDRESS+130*4]	; @131
	%define	_tmcisempty	[iat+MY_LOAD_ADDRESS+131*4]	; @132
	%define	_tmcisfield	[iat+MY_LOAD_ADDRESS+132*4]	; @133
	%define	_tmcisfinite	[iat+MY_LOAD_ADDRESS+133*4]	; @134
	%define	_tmcisnan	[iat+MY_LOAD_ADDRESS+134*4]	; @135
	%define	_tmcisnumeric	[iat+MY_LOAD_ADDRESS+135*4]	; @136
	%define	_tmcisreal	[iat+MY_LOAD_ADDRESS+136*4]	; @137
	%define	_tmcisscalar	[iat+MY_LOAD_ADDRESS+137*4]	; @138
	%define	_tmcisstruct	[iat+MY_LOAD_ADDRESS+138*4]	; @139
	%define	_tmcisvector	[iat+MY_LOAD_ADDRESS+139*4]	; @140
	%define	_tmclength	[iat+MY_LOAD_ADDRESS+140*4]	; @141
	%define	_tmclinspace	[iat+MY_LOAD_ADDRESS+141*4]	; @142
	%define	_tmcload	[iat+MY_LOAD_ADDRESS+142*4]	; @143
	%define	_tmclog	[iat+MY_LOAD_ADDRESS+143*4]	; @144
	%define	_tmclog10	[iat+MY_LOAD_ADDRESS+144*4]	; @145
	%define	_tmclogspace	[iat+MY_LOAD_ADDRESS+145*4]	; @146
	%define	_tmclower	[iat+MY_LOAD_ADDRESS+146*4]	; @147
	%define	_tmcmax	[iat+MY_LOAD_ADDRESS+147*4]	; @148
	%define	_tmcmin	[iat+MY_LOAD_ADDRESS+148*4]	; @149
	%define	_tmcmod	[iat+MY_LOAD_ADDRESS+149*4]	; @150
	%define	_tmcnargchk	[iat+MY_LOAD_ADDRESS+150*4]	; @151
	%define	_tmcnum2str	[iat+MY_LOAD_ADDRESS+151*4]	; @152
	%define	_tmcones	[iat+MY_LOAD_ADDRESS+152*4]	; @153
	%define	_tmcpause	[iat+MY_LOAD_ADDRESS+153*4]	; @154
	%define	_tmcplot	[iat+MY_LOAD_ADDRESS+154*4]	; @155
	%define	_tmcpolyval	[iat+MY_LOAD_ADDRESS+155*4]	; @156
	%define	_tmcprod	[iat+MY_LOAD_ADDRESS+156*4]	; @157
	%define	_tmcreal	[iat+MY_LOAD_ADDRESS+157*4]	; @158
	%define	_tmcrem	[iat+MY_LOAD_ADDRESS+158*4]	; @159
	%define	_tmcrmfield	[iat+MY_LOAD_ADDRESS+159*4]	; @160
	%define	_tmcroots	[iat+MY_LOAD_ADDRESS+160*4]	; @161
	%define	_tmcround	[iat+MY_LOAD_ADDRESS+161*4]	; @162
	%define	_tmcset	[iat+MY_LOAD_ADDRESS+162*4]	; @163
	%define	_tmcsetdiff	[iat+MY_LOAD_ADDRESS+163*4]	; @164
	%define	_tmcsign	[iat+MY_LOAD_ADDRESS+164*4]	; @165
	%define	_tmcsin	[iat+MY_LOAD_ADDRESS+165*4]	; @166
	%define	_tmcsize	[iat+MY_LOAD_ADDRESS+166*4]	; @167
	%define	_tmcsort	[iat+MY_LOAD_ADDRESS+167*4]	; @168
	%define	_tmcsprintf	[iat+MY_LOAD_ADDRESS+168*4]	; @169
	%define	_tmcsqrt	[iat+MY_LOAD_ADDRESS+169*4]	; @170
	%define	_tmcsqueeze	[iat+MY_LOAD_ADDRESS+170*4]	; @171
	%define	_tmcss2tf	[iat+MY_LOAD_ADDRESS+171*4]	; @172
	%define	_tmcssdata	[iat+MY_LOAD_ADDRESS+172*4]	; @173
	%define	_tmcstr2num	[iat+MY_LOAD_ADDRESS+173*4]	; @174
	%define	_tmcstrcmp	[iat+MY_LOAD_ADDRESS+174*4]	; @175
	%define	_tmcstruct	[iat+MY_LOAD_ADDRESS+175*4]	; @176
	%define	_tmcsubplot	[iat+MY_LOAD_ADDRESS+176*4]	; @177
	%define	_tmcsum	[iat+MY_LOAD_ADDRESS+177*4]	; @178
	%define	_tmcsvd	[iat+MY_LOAD_ADDRESS+178*4]	; @179
	%define	_tmctan	[iat+MY_LOAD_ADDRESS+179*4]	; @180
	%define	_tmctext	[iat+MY_LOAD_ADDRESS+180*4]	; @181
	%define	_tmctf	[iat+MY_LOAD_ADDRESS+181*4]	; @182
	%define	_tmctitle	[iat+MY_LOAD_ADDRESS+182*4]	; @183
	%define	_tmcunique	[iat+MY_LOAD_ADDRESS+183*4]	; @184
	%define	_tmcunwrap	[iat+MY_LOAD_ADDRESS+184*4]	; @185
	%define	_tmcwaitbar	[iat+MY_LOAD_ADDRESS+185*4]	; @186
	%define	_tmcxlabel	[iat+MY_LOAD_ADDRESS+186*4]	; @187
	%define	_tmcylabel	[iat+MY_LOAD_ADDRESS+187*4]	; @188
	%define	_tmczeros	[iat+MY_LOAD_ADDRESS+188*4]	; @189
	%define	_zfftf	[iat+MY_LOAD_ADDRESS+189*4]	; @190
	%define	_zffti	[iat+MY_LOAD_ADDRESS+190*4]	; @191
	%define	_zgeevx	[iat+MY_LOAD_ADDRESS+191*4]	; @192
	%define	_zgels	[iat+MY_LOAD_ADDRESS+192*4]	; @193
	%define	_zgeqrf	[iat+MY_LOAD_ADDRESS+193*4]	; @194
	%define	_zgesvd	[iat+MY_LOAD_ADDRESS+194*4]	; @195
	%define	_tmcconnectdebugger	[iat+MY_LOAD_ADDRESS+195*4]	; @196
	%define	_tmcsave	[iat+MY_LOAD_ADDRESS+196*4]	; @197
	%define	_tmcconv	[iat+MY_LOAD_ADDRESS+197*4]	; @198
	%define	_tmcnorm	[iat+MY_LOAD_ADDRESS+198*4]	; @199
	%define	_tmcisequal	[iat+MY_LOAD_ADDRESS+199*4]	; @200
	%define	_tmcqr		[iat+MY_LOAD_ADDRESS+200*4]	; @201
	%define	_tmceye	[iat+MY_LOAD_ADDRESS+201*4]	; @202
	%define	_tmcinf	[iat+MY_LOAD_ADDRESS+202*4]	; @203
	%define	_tmcNaN	[iat+MY_LOAD_ADDRESS+203*4]	; @204
	%define	_tmceps	[iat+MY_LOAD_ADDRESS+204*4]	; @205
	%define	_tmcpi	[iat+MY_LOAD_ADDRESS+205*4]	; @206
	%define	_tmcj	[iat+MY_LOAD_ADDRESS+206*4]	; @207
	%define	_tmci	[iat+MY_LOAD_ADDRESS+207*4]	; @208
	%define	_tmcsetfield	[iat+MY_LOAD_ADDRESS+208*4]	; @209
	%define	_tmclasterr	[iat+MY_LOAD_ADDRESS+209*4]	; @210
	%define	_tmcstrfind	[iat+MY_LOAD_ADDRESS+210*4]	; @211
	%define	_tmcCreateStringEmpty	[iat+MY_LOAD_ADDRESS+211*4]	; @212
	%define	__tmcGetField	[iat+MY_LOAD_ADDRESS+212*4]	; @213
	%define	__tmcCreateCellArray	[iat+MY_LOAD_ADDRESS+213*4]	; @214
	%define	__tmcGetString	[iat+MY_LOAD_ADDRESS+214*4]	; @215
	%define	__tmcGetFieldNumber	[iat+MY_LOAD_ADDRESS+215*4]	; @216
	%define	_tmcndims	[iat+MY_LOAD_ADDRESS+216*4]	; @217
	%define	_tmcdeal	[iat+MY_LOAD_ADDRESS+217*4]	; @218
	%define	_tmcdet	[iat+MY_LOAD_ADDRESS+218*4]	; @219
	%define	_tmcfigure	[iat+MY_LOAD_ADDRESS+219*4]	; @220
	%define	_tmcexist	[iat+MY_LOAD_ADDRESS+220*4]	; @221
	%define	_tmcnichols	[iat+MY_LOAD_ADDRESS+221*4]	; @222
	%define	_tmcgcf	[iat+MY_LOAD_ADDRESS+222*4]	; @223
	%define	_tmcishold	[iat+MY_LOAD_ADDRESS+223*4]	; @224
	%define	_tmcwarning	[iat+MY_LOAD_ADDRESS+224*4]	; @225
	%define	_tmcfields	[iat+MY_LOAD_ADDRESS+225*4]	; @226
	%define	_tmcismember	[iat+MY_LOAD_ADDRESS+226*4]	; @227
	%define	_tmcisa	[iat+MY_LOAD_ADDRESS+227*4]	; @228
	%define	_tmctfdata	[iat+MY_LOAD_ADDRESS+228*4]	; @229
	%define	_tmcfreqresp	[iat+MY_LOAD_ADDRESS+229*4]	; @230
	%define	_tmcfrdata	[iat+MY_LOAD_ADDRESS+230*4]	; @231
	%define	_tmcfrdqfd	[iat+MY_LOAD_ADDRESS+231*4]	; @232
	%define	_tmctf2ss	[iat+MY_LOAD_ADDRESS+232*4]	; @233
	%define	_tmcss	[iat+MY_LOAD_ADDRESS+233*4]	; @234
	%define	_tmczpkdata	[iat+MY_LOAD_ADDRESS+234*4]	; @235
	%define	_tmczpk	[iat+MY_LOAD_ADDRESS+235*4]	; @236
	%define	_tmcfrd	[iat+MY_LOAD_ADDRESS+236*4]	; @237
	%define	_tmcorderfields	[iat+MY_LOAD_ADDRESS+237*4]	; @238
	%define	_tmcnumel	[iat+MY_LOAD_ADDRESS+238*4]	; @239
	%define	_tmccell2mat	[iat+MY_LOAD_ADDRESS+239*4]	; @240
	%define	_tmccond	[iat+MY_LOAD_ADDRESS+240*4]	; @241
	%define	_tmcdbgPushStackVar		[iat+MY_LOAD_ADDRESS+241*4]	; @242
	%define	_tmcdbgPopStackVar		[iat+MY_LOAD_ADDRESS+242*4]	; @243
	%define	_tmcdbgOpenDebugger		[iat+MY_LOAD_ADDRESS+243*4]	; @244
	%define	_tmcdbgCloseDebugger		[iat+MY_LOAD_ADDRESS+244*4]	; @245
	%define	_tmcNumElem					[iat+MY_LOAD_ADDRESS+245*4]	; @246
	%define	_my_malloc_dbg				[iat+MY_LOAD_ADDRESS+246*4]	; @247
	%define	_hcode2string				[iat+MY_LOAD_ADDRESS+247*4]	; @248
	%define	__tmcClearRegister			[iat+MY_LOAD_ADDRESS+248*4]	; @249
	%define	_tmcdbgCommonMemConnect		[iat+MY_LOAD_ADDRESS+249*4]	; @250
