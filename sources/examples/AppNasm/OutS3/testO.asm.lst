     1                                  	%include "PE_head.inc"
     2                              <1> 	BITS 32
     3                              <1> 	ORG	0
     4                              <1> 	MY_LOAD_ADDRESS EQU	0x400000
     5                              <1> 
     6                              <1> 
     7                              <1> 	%define		start	_myentry
     8                              <1> 
     9                              <1> ;
    10                              <1> ; MZ header
    11                              <1> ;
    12                              <1> ; The only two fields that matter are e_magic and e_lfanew
    13                              <1> 
    14                              <1> mzhdr:
    15 00000000 4D5A                <1>     dw "MZ"                       ; e_magic
    16 00000002 0000                <1>     dw 0                          ; e_cblp UNUSED
    17 00000004 0000                <1>     dw 0                          ; e_cp UNUSED
    18 00000006 0000                <1>     dw 0                          ; e_crlc UNUSED
    19 00000008 0000                <1>     dw 0                          ; e_cparhdr UNUSED
    20 0000000A 0000                <1>     dw 0                          ; e_minalloc UNUSED
    21 0000000C 0000                <1>     dw 0                          ; e_maxalloc UNUSED
    22 0000000E 0000                <1>     dw 0                          ; e_ss UNUSED
    23 00000010 0000                <1>     dw 0                          ; e_sp UNUSED
    24 00000012 0000                <1>     dw 0                          ; e_csum UNUSED
    25 00000014 0000                <1>     dw 0                          ; e_ip UNUSED
    26 00000016 0000                <1>     dw 0                          ; e_cs UNUSED
    27 00000018 0000                <1>     dw 0                          ; e_lsarlc UNUSED
    28 0000001A 0000                <1>     dw 0                          ; e_ovno UNUSED
    29 0000001C 0000<rept>          <1>     times 4 dw 0                  ; e_res UNUSED
    30 00000024 0000                <1>     dw 0                          ; e_oemid UNUSED
    31 00000026 0000                <1>     dw 0                          ; e_oeminfo UNUSED
    32 00000028 0000<rept>          <1>     times 10 dw 0                 ; e_res2 UNUSED
    33 0000003C [40000000]          <1>     dd pesig                      ; e_lfanew
    34                              <1> 
    35                              <1> ;
    36                              <1> ; PE signature
    37                              <1> ;
    38                              <1> 
    39                              <1> pesig:
    40 00000040 50450000            <1>     dd "PE"
    41                              <1> 
    42                              <1> ;
    43                              <1> ; PE header
    44                              <1> ;
    45                              <1> 
    46                              <1> pehdr:
    47 00000044 4C01                <1>     dw 0x014C                     ; Machine (Intel 386)
    48 00000046 0100                <1>     dw 1                          ; NumberOfSections
    49 00000048 5DBE4545            <1>     dd 0x4545BE5D                 ; TimeDateStamp UNUSED
    50 0000004C 00000000            <1>     dd 0                          ; PointerToSymbolTable UNUSED
    51 00000050 00000000            <1>     dd 0                          ; NumberOfSymbols UNUSED
    52 00000054 E000                <1>     dw opthdrsize                 ; SizeOfOptionalHeader
    53 00000056 0301                <1>     dw 0x103                      ; Characteristics (no relocations, executable, 32 bit)
    54                              <1> 
    55                              <1> ;
    56                              <1> ; PE optional header
    57                              <1> ;
    58                              <1> 
    59                              <1> filealign equ 200h
    60                              <1> mysectalign equ 1000h
    61                              <1> 
    62                              <1> %define round(n, r) (((n+(r-1))/r)*r)
    63                              <1> 
    64                              <1> opthdr:
    65 00000058 0B01                <1>     dw 0x10B                      ; Magic (PE32)
    66 0000005A 08                  <1>     db 8                          ; MajorLinkerVersion UNUSED
    67 0000005B 00                  <1>     db 0                          ; MinorLinkerVersion UNUSED
    68 0000005C 00400000            <1>     dd round(codesize, filealign) ; SizeOfCode UNUSED
    69 00000060 00000000            <1>     dd 0                          ; SizeOfInitializedData UNUSED
    70 00000064 00000000            <1>     dd 0                          ; SizeOfUninitializedData UNUSED
    71 00000068 [9C180000]          <1>     dd start                      ; AddressOfEntryPoint
    72 0000006C [00100000]          <1>     dd code                       ; BaseOfCode UNUSED
    73 00000070 00500000            <1>     dd round(filesize, mysectalign) ; BaseOfData UNUSED
    74 00000074 00004000            <1>     dd MY_LOAD_ADDRESS            ; ImageBase
    75 00000078 00100000            <1>     dd mysectalign                  ; SectionAlignment
    76 0000007C 00020000            <1>     dd filealign                  ; FileAlignment
    77 00000080 0400                <1>     dw 4                          ; MajorOperatingSystemVersion UNUSED
    78 00000082 0000                <1>     dw 0                          ; MinorOperatingSystemVersion UNUSED
    79 00000084 0000                <1>     dw 0                          ; MajorImageVersion UNUSED
    80 00000086 0000                <1>     dw 0                          ; MinorImageVersion UNUSED
    81 00000088 0400                <1>     dw 4                          ; MajorSubsystemVersion
    82 0000008A 0000                <1>     dw 0                          ; MinorSubsystemVersion UNUSED
    83 0000008C 00000000            <1>     dd 0                          ; Win32VersionValue UNUSED
    84 00000090 00500000            <1>     dd filesize ;//round(filesize, mysectalign) ; SizeOfImage
    85 00000094 60010000            <1>     dd hdrsize			;round(hdrsize, filealign)  ; SizeOfHeaders
    86 00000098 00000000            <1>     dd 0                          ; CheckSum UNUSED
    87 0000009C 0300                <1>     dw 2+1                          ; Subsystem (Win32 GUI)
    88 0000009E 0000                <1>     dw 0x000                      ;IMAGE_DLLCHARACTERISTICS_NO_SEH=0x400 DllCharacteristics
    89 000000A0 00004000            <1>     dd 0x400000                   ; SizeOfStackReserve UNUSED
    90 000000A4 00400000            <1>     dd 0x4000                     ; SizeOfStackCommit
    91 000000A8 00001000            <1>     dd 0x100000                   ; SizeOfHeapReserve
    92 000000AC 00100000            <1>     dd 0x1000                     ; SizeOfHeapCommit UNUSED
    93 000000B0 00000000            <1>     dd 0                          ; LoaderFlags UNUSED
    94 000000B4 10000000            <1>     dd 16                         ; NumberOfRvaAndSizes UNUSED
    95                              <1> 
    96                              <1> 
    97                              <1> ;
    98                              <1> ; Data directories
    99                              <1> ;
   100 000000B8 00000000            <1>     dd 0                                      ; Export Table UNUSED
   101 000000BC 00000000            <1>     dd 0
   102 000000C0 [00100000]          <1>     dd idata                                  ; Import Table
   103 000000C4 28000000            <1>     dd idatasize
   104                              <1> 
   105 000000C8 0000000000000000-   <1>     times 14 dd 0, 0
   106 000000C8 <rept>              <1>
   107                              <1> 
   108                              <1> opthdrsize equ $ - opthdr
   109                              <1> 
   110                              <1> ;
   111                              <1> ; PE code section
   112                              <1> ;
   113                              <1> 
   114 00000138 2E74657874000000    <1>     db ".text", 0, 0, 0           ; Name
   115 00000140 00400000            <1>     dd codesize                   ; VirtualSize
   116 00000144 00100000            <1>     dd code_va ; //round(hdrsize, mysectalign)  ; VirtualAddress
   117 00000148 00400000            <1>     dd codesize ;//round(codesize, filealign) ; SizeOfRawData
   118 0000014C 00100000            <1>     dd code_va ; //code                       ; PointerToRawData
   119 00000150 00000000            <1>     dd 0                          ; PointerToRelocations UNUSED
   120 00000154 00000000            <1>     dd 0                          ; PointerToLinenumbers UNUSED
   121 00000158 0000                <1>     dw 0                          ; NumberOfRelocations UNUSED
   122 0000015A 0000                <1>     dw 0                          ; NumberOfLinenumbers UNUSED
   123 0000015C 200000E0            <1>     dd 0xE0000020                 ; Characteristics (code, execute, read,write)
   124                              <1> 
   125                              <1> ;NUMBEROFSECTIONS equ ($ - SectionHeader) / IMAGE_SECTION_HEADER_size
   126                              <1> hdrsize equ $ - $$
   127                              <1> 
   128                              <1> ;
   129                              <1> ; PE code section data
   130                              <1> ;
   131                              <1> 
   132 00000160 00<rept>            <1> align mysectalign, db 0
   133                              <1> code_va	equ	$-$$
   134                              <1> code:
   135                              <1> 
   136                              <1> ;;;;;;;;;;;;;;
   137                              <1> ; Import table (array of IMAGE_IMPORT_DESCRIPTOR structures)
   138                              <1> 
   139                              <1> idata:
   140 00001000 [14140000]          <1>     dd ilt                                    ; OriginalFirstThunk UNUSED
   141 00001004 00000000            <1>     dd 0                                      ; TimeDateStamp UNUSED
   142 00001008 00000000            <1>     dd 0                                      ; ForwarderChain UNUSED
   143 0000100C [10180000]          <1>     dd kernel32                               ; Name
   144 00001010 [28100000]          <1>     dd iat                                    ; FirstThunk
   145                              <1> 
   146                              <1>  ;   dd iltUser32                                    ; OriginalFirstThunk UNUSED
   147                              <1>  ;   dd 0                                      ; TimeDateStamp UNUSED
   148                              <1>  ;   dd 0                                      ; ForwarderChain UNUSED
   149                              <1>  ;   dd user32                               ; Name
   150                              <1>   ;  dd iatUser32                                    ; FirstThunk
   151                              <1> 
   152                              <1>     ; empty IMAGE_IMPORT_DESCRIPTOR structure
   153                              <1> 
   154 00001014 00000000            <1>     dd 0                                      ; OriginalFirstThunk UNUSED
   155 00001018 00000000            <1>     dd 0                                      ; TimeDateStamp UNUSED
   156 0000101C 00000000            <1>     dd 0                                      ; ForwarderChain UNUSED
   157 00001020 00000000            <1>     dd 0                                      ; Name UNUSED
   158 00001024 00000000            <1>     dd 0                                      ; FirstThunk
   159                              <1> 
   160                              <1> idatasize equ $ - idata
   161                              <1> 
   162                              <1> ; Import address table (array of IMAGE_THUNK_DATA structures)
   163                              <1> 
   164                              <1> iat:
   165                              <1> 	%include "iat.inc"
   166 00001028 01000080            <2> 	 dd (0x80000000+1) 		 ; ___tmcNewMatrix 
   167 0000102C 02000080            <2> 	 dd (0x80000000+2) 		 ; __tmcCreateMatrix 
   168 00001030 03000080            <2> 	 dd (0x80000000+3) 		 ; __tmcMat2String 
   169 00001034 04000080            <2> 	 dd (0x80000000+4) 		 ; __tmcNewMatrix_dbg 
   170 00001038 05000080            <2> 	 dd (0x80000000+5) 		 ; __tmcRaiseException 
   171 0000103C 06000080            <2> 	 dd (0x80000000+6) 		 ; _dgeevx 
   172 00001040 07000080            <2> 	 dd (0x80000000+7) 		 ; _dgels 
   173 00001044 08000080            <2> 	 dd (0x80000000+8) 		 ; _dgeqrf 
   174 00001048 09000080            <2> 	 dd (0x80000000+9) 		 ; _dgesvd 
   175 0000104C 0A000080            <2> 	 dd (0x80000000+10) 		 ; _g_MemCnt 
   176 00001050 0B000080            <2> 	 dd (0x80000000+11) 		 ; _g_MemN 
   177 00001054 0C000080            <2> 	 dd (0x80000000+12) 		 ; _g_MemUsed 
   178 00001058 0D000080            <2> 	 dd (0x80000000+13) 		 ; _mmy_free 
   179 0000105C 0E000080            <2> 	 dd (0x80000000+14) 		 ; _tmcAdd 
   180 00001060 0F000080            <2> 	 dd (0x80000000+15) 		 ; _tmcAndBoolean 
   181 00001064 10000080            <2> 	 dd (0x80000000+16) 		 ; _tmcAndScalar 
   182 00001068 11000080            <2> 	 dd (0x80000000+17) 		 ; _tmcAssign 
   183 0000106C 12000080            <2> 	 dd (0x80000000+18) 		 ; _tmcAssignBool 
   184 00001070 13000080            <2> 	 dd (0x80000000+19) 		 ; _tmcCalcSwitchExpVal 
   185 00001074 14000080            <2> 	 dd (0x80000000+20) 		 ; _tmcCollectCellColumns 
   186 00001078 15000080            <2> 	 dd (0x80000000+21) 		 ; _tmcCollectCellRows 
   187 0000107C 16000080            <2> 	 dd (0x80000000+22) 		 ; _tmcCollectColumns 
   188 00001080 17000080            <2> 	 dd (0x80000000+23) 		 ; _tmcCollectRows 
   189 00001084 18000080            <2> 	 dd (0x80000000+24) 		 ; _tmcComplexScalar 
   190 00001088 19000080            <2> 	 dd (0x80000000+25) 		 ; _tmcCopyMat 
   191 0000108C 1A000080            <2> 	 dd (0x80000000+26) 		 ; _tmcCreateCellEmpty 
   192 00001090 1B000080            <2> 	 dd (0x80000000+27) 		 ; _tmcCreateColonBaseIncLimit 
   193 00001094 1C000080            <2> 	 dd (0x80000000+28) 		 ; _tmcCreateColonBaseLimit 
   194 00001098 1D000080            <2> 	 dd (0x80000000+29) 		 ; _tmcCreateMagicColon 
   195 0000109C 1E000080            <2> 	 dd (0x80000000+30) 		 ; _tmcCreateMatrixEmpty 
   196 000010A0 1F000080            <2> 	 dd (0x80000000+31) 		 ; _tmcCreateRegFrame 
   197 000010A4 20000080            <2> 	 dd (0x80000000+32) 		 ; _tmcCreateString 
   198 000010A8 21000080            <2> 	 dd (0x80000000+33) 		 ; _tmcDisplayMat 
   199 000010AC 22000080            <2> 	 dd (0x80000000+34) 		 ; _tmcDiv 
   200 000010B0 23000080            <2> 	 dd (0x80000000+35) 		 ; _tmcDivScalar 
   201 000010B4 24000080            <2> 	 dd (0x80000000+36) 		 ; _tmcEq 
   202 000010B8 25000080            <2> 	 dd (0x80000000+37) 		 ; _tmcFncHandle 
   203 000010BC 26000080            <2> 	 dd (0x80000000+38) 		 ; _tmcForIterInit 
   204 000010C0 27000080            <2> 	 dd (0x80000000+39) 		 ; _tmcForIterNext 
   205 000010C4 28000080            <2> 	 dd (0x80000000+40) 		 ; _tmcFreeLib 
   206 000010C8 29000080            <2> 	 dd (0x80000000+41) 		 ; _tmcFreeLocalVar 
   207 000010CC 2A000080            <2> 	 dd (0x80000000+42) 		 ; _tmcFreeRegFrame 
   208 000010D0 2B000080            <2> 	 dd (0x80000000+43) 		 ; _tmcGe 
   209 000010D4 2C000080            <2> 	 dd (0x80000000+44) 		 ; _tmcGetByFieldHcode 
   210 000010D8 2D000080            <2> 	 dd (0x80000000+45) 		 ; _tmcGetByIndex 
   211 000010DC 2E000080            <2> 	 dd (0x80000000+46) 		 ; _tmcGetByIndexCell 
   212 000010E0 2F000080            <2> 	 dd (0x80000000+47) 		 ; _tmcGetEnd 
   213 000010E4 30000080            <2> 	 dd (0x80000000+48) 		 ; _tmcGetRefByFieldHcode 
   214 000010E8 31000080            <2> 	 dd (0x80000000+49) 		 ; _tmcGetRefByIndex 
   215 000010EC 32000080            <2> 	 dd (0x80000000+50) 		 ; _tmcGetRefByIndexCell 
   216 000010F0 33000080            <2> 	 dd (0x80000000+51) 		 ; _tmcGt 
   217 000010F4 34000080            <2> 	 dd (0x80000000+52) 		 ; _tmcInitLib 
   218 000010F8 35000080            <2> 	 dd (0x80000000+53) 		 ; _tmcIsCaseDouble 
   219 000010FC 36000080            <2> 	 dd (0x80000000+54) 		 ; _tmcIsCaseString 
   220 00001100 37000080            <2> 	 dd (0x80000000+55) 		 ; _tmcIsFalse 
   221 00001104 38000080            <2> 	 dd (0x80000000+56) 		 ; _tmcIsFieldHcode 
   222 00001108 39000080            <2> 	 dd (0x80000000+57) 		 ; _tmcIsTrue 
   223 0000110C 3A000080            <2> 	 dd (0x80000000+58) 		 ; _tmcLe 
   224 00001110 3B000080            <2> 	 dd (0x80000000+59) 		 ; _tmcLeftDiv 
   225 00001114 3C000080            <2> 	 dd (0x80000000+60) 		 ; _tmcLt 
   226 00001118 3D000080            <2> 	 dd (0x80000000+61) 		 ; _tmcMul 
   227 0000111C 3E000080            <2> 	 dd (0x80000000+62) 		 ; _tmcMulScalar 
   228 00001120 3F000080            <2> 	 dd (0x80000000+63) 		 ; _tmcNe 
   229 00001124 40000080            <2> 	 dd (0x80000000+64) 		 ; _tmcNeg 
   230 00001128 41000080            <2> 	 dd (0x80000000+65) 		 ; _tmcNot 
   231 0000112C 42000080            <2> 	 dd (0x80000000+66) 		 ; _tmcNotCase 
   232 00001130 43000080            <2> 	 dd (0x80000000+67) 		 ; _tmcOrBoolean 
   233 00001134 44000080            <2> 	 dd (0x80000000+68) 		 ; _tmcOrScalar 
   234 00001138 45000080            <2> 	 dd (0x80000000+69) 		 ; _tmcPower 
   235 0000113C 46000080            <2> 	 dd (0x80000000+70) 		 ; _tmcPowerScalar 
   236 00001140 47000080            <2> 	 dd (0x80000000+71) 		 ; _tmcReallocRegister 
   237 00001144 48000080            <2> 	 dd (0x80000000+72) 		 ; _tmcScalar 
   238 00001148 49000080            <2> 	 dd (0x80000000+73) 		 ; _tmcSub 
   239 0000114C 4A000080            <2> 	 dd (0x80000000+74) 		 ; _tmcSyntaxError 
   240 00001150 4B000080            <2> 	 dd (0x80000000+75) 		 ; _tmcTranspose 
   241 00001154 4C000080            <2> 	 dd (0x80000000+76) 		 ; _tmcTransposeScalar 
   242 00001158 4D000080            <2> 	 dd (0x80000000+77) 		 ; _tmcabs 
   243 0000115C 4E000080            <2> 	 dd (0x80000000+78) 		 ; _tmcacos 
   244 00001160 4F000080            <2> 	 dd (0x80000000+79) 		 ; _tmcall 
   245 00001164 50000080            <2> 	 dd (0x80000000+80) 		 ; _tmcangle 
   246 00001168 51000080            <2> 	 dd (0x80000000+81) 		 ; _tmcany 
   247 0000116C 52000080            <2> 	 dd (0x80000000+82) 		 ; _tmcasin 
   248 00001170 53000080            <2> 	 dd (0x80000000+83) 		 ; _tmcatan 
   249 00001174 54000080            <2> 	 dd (0x80000000+84) 		 ; _tmcatan2 
   250 00001178 55000080            <2> 	 dd (0x80000000+85) 		 ; _tmcaxis 
   251 0000117C 56000080            <2> 	 dd (0x80000000+86) 		 ; _tmcbitand 
   252 00001180 57000080            <2> 	 dd (0x80000000+87) 		 ; _tmcbitor 
   253 00001184 58000080            <2> 	 dd (0x80000000+88) 		 ; _tmcbitshift 
   254 00001188 59000080            <2> 	 dd (0x80000000+89) 		 ; _tmcceil 
   255 0000118C 5A000080            <2> 	 dd (0x80000000+90) 		 ; _tmccell 
   256 00001190 5B000080            <2> 	 dd (0x80000000+91) 		 ; _tmcchar 
   257 00001194 5C000080            <2> 	 dd (0x80000000+92) 		 ; _tmcclose 
   258 00001198 5D000080            <2> 	 dd (0x80000000+93) 		 ; _tmcconj 
   259 0000119C 5E000080            <2> 	 dd (0x80000000+94) 		 ; _tmccos 
   260 000011A0 5F000080            <2> 	 dd (0x80000000+95) 		 ; _tmccumprod 
   261 000011A4 60000080            <2> 	 dd (0x80000000+96) 		 ; _tmcdec2hex 
   262 000011A8 61000080            <2> 	 dd (0x80000000+97) 		 ; _tmcdeconv 
   263 000011AC 62000080            <2> 	 dd (0x80000000+98) 		 ; _tmcdiag 
   264 000011B0 63000080            <2> 	 dd (0x80000000+99) 		 ; _tmcdiff 
   265 000011B4 64000080            <2> 	 dd (0x80000000+100) 		 ; _tmcdisp 
   266 000011B8 65000080            <2> 	 dd (0x80000000+101) 		 ; _tmcdouble 
   267 000011BC 66000080            <2> 	 dd (0x80000000+102) 		 ; _tmceig 
   268 000011C0 67000080            <2> 	 dd (0x80000000+103) 		 ; _tmcerror 
   269 000011C4 68000080            <2> 	 dd (0x80000000+104) 		 ; _tmceval 
   270 000011C8 69000080            <2> 	 dd (0x80000000+105) 		 ; _tmcexp 
   271 000011CC 6A000080            <2> 	 dd (0x80000000+106) 		 ; _tmcfclose 
   272 000011D0 6B000080            <2> 	 dd (0x80000000+107) 		 ; _tmcfeof 
   273 000011D4 6C000080            <2> 	 dd (0x80000000+108) 		 ; _tmcfeval 
   274 000011D8 6D000080            <2> 	 dd (0x80000000+109) 		 ; _tmcfft 
   275 000011DC 6E000080            <2> 	 dd (0x80000000+110) 		 ; _tmcfgetl 
   276 000011E0 6F000080            <2> 	 dd (0x80000000+111) 		 ; _tmcfieldnames 
   277 000011E4 70000080            <2> 	 dd (0x80000000+112) 		 ; _tmcfill 
   278 000011E8 71000080            <2> 	 dd (0x80000000+113) 		 ; _tmcfind 
   279 000011EC 72000080            <2> 	 dd (0x80000000+114) 		 ; _tmcfindstr 
   280 000011F0 73000080            <2> 	 dd (0x80000000+115) 		 ; _tmcfix 
   281 000011F4 74000080            <2> 	 dd (0x80000000+116) 		 ; _tmcfliplr 
   282 000011F8 75000080            <2> 	 dd (0x80000000+117) 		 ; _tmcfloor 
   283 000011FC 76000080            <2> 	 dd (0x80000000+118) 		 ; _tmcfopen 
   284 00001200 77000080            <2> 	 dd (0x80000000+119) 		 ; _tmcfprintf 
   285 00001204 78000080            <2> 	 dd (0x80000000+120) 		 ; _tmcgca 
   286 00001208 79000080            <2> 	 dd (0x80000000+121) 		 ; _tmcget 
   287 0000120C 7A000080            <2> 	 dd (0x80000000+122) 		 ; _tmcgetfield 
   288 00001210 7B000080            <2> 	 dd (0x80000000+123) 		 ; _tmcgrid 
   289 00001214 7C000080            <2> 	 dd (0x80000000+124) 		 ; _tmchex2dec 
   290 00001218 7D000080            <2> 	 dd (0x80000000+125) 		 ; _tmchold 
   291 0000121C 7E000080            <2> 	 dd (0x80000000+126) 		 ; _tmcimag 
   292 00001220 7F000080            <2> 	 dd (0x80000000+127) 		 ; _tmcinterp1 
   293 00001224 80000080            <2> 	 dd (0x80000000+128) 		 ; _tmcintersect 
   294 00001228 81000080            <2> 	 dd (0x80000000+129) 		 ; _tmcinv 
   295 0000122C 82000080            <2> 	 dd (0x80000000+130) 		 ; _tmciscell 
   296 00001230 83000080            <2> 	 dd (0x80000000+131) 		 ; _tmcischar 
   297 00001234 84000080            <2> 	 dd (0x80000000+132) 		 ; _tmcisempty 
   298 00001238 85000080            <2> 	 dd (0x80000000+133) 		 ; _tmcisfield 
   299 0000123C 86000080            <2> 	 dd (0x80000000+134) 		 ; _tmcisfinite 
   300 00001240 87000080            <2> 	 dd (0x80000000+135) 		 ; _tmcisnan 
   301 00001244 88000080            <2> 	 dd (0x80000000+136) 		 ; _tmcisnumeric 
   302 00001248 89000080            <2> 	 dd (0x80000000+137) 		 ; _tmcisreal 
   303 0000124C 8A000080            <2> 	 dd (0x80000000+138) 		 ; _tmcisscalar 
   304 00001250 8B000080            <2> 	 dd (0x80000000+139) 		 ; _tmcisstruct 
   305 00001254 8C000080            <2> 	 dd (0x80000000+140) 		 ; _tmcisvector 
   306 00001258 8D000080            <2> 	 dd (0x80000000+141) 		 ; _tmclength 
   307 0000125C 8E000080            <2> 	 dd (0x80000000+142) 		 ; _tmclinspace 
   308 00001260 8F000080            <2> 	 dd (0x80000000+143) 		 ; _tmcload 
   309 00001264 90000080            <2> 	 dd (0x80000000+144) 		 ; _tmclog 
   310 00001268 91000080            <2> 	 dd (0x80000000+145) 		 ; _tmclog10 
   311 0000126C 92000080            <2> 	 dd (0x80000000+146) 		 ; _tmclogspace 
   312 00001270 93000080            <2> 	 dd (0x80000000+147) 		 ; _tmclower 
   313 00001274 94000080            <2> 	 dd (0x80000000+148) 		 ; _tmcmax 
   314 00001278 95000080            <2> 	 dd (0x80000000+149) 		 ; _tmcmin 
   315 0000127C 96000080            <2> 	 dd (0x80000000+150) 		 ; _tmcmod 
   316 00001280 97000080            <2> 	 dd (0x80000000+151) 		 ; _tmcnargchk 
   317 00001284 98000080            <2> 	 dd (0x80000000+152) 		 ; _tmcnum2str 
   318 00001288 99000080            <2> 	 dd (0x80000000+153) 		 ; _tmcones 
   319 0000128C 9A000080            <2> 	 dd (0x80000000+154) 		 ; _tmcpause 
   320 00001290 9B000080            <2> 	 dd (0x80000000+155) 		 ; _tmcplot 
   321 00001294 9C000080            <2> 	 dd (0x80000000+156) 		 ; _tmcpolyval 
   322 00001298 9D000080            <2> 	 dd (0x80000000+157) 		 ; _tmcprod 
   323 0000129C 9E000080            <2> 	 dd (0x80000000+158) 		 ; _tmcreal 
   324 000012A0 9F000080            <2> 	 dd (0x80000000+159) 		 ; _tmcrem 
   325 000012A4 A0000080            <2> 	 dd (0x80000000+160) 		 ; _tmcrmfield 
   326 000012A8 A1000080            <2> 	 dd (0x80000000+161) 		 ; _tmcroots 
   327 000012AC A2000080            <2> 	 dd (0x80000000+162) 		 ; _tmcround 
   328 000012B0 A3000080            <2> 	 dd (0x80000000+163) 		 ; _tmcset 
   329 000012B4 A4000080            <2> 	 dd (0x80000000+164) 		 ; _tmcsetdiff 
   330 000012B8 A5000080            <2> 	 dd (0x80000000+165) 		 ; _tmcsign 
   331 000012BC A6000080            <2> 	 dd (0x80000000+166) 		 ; _tmcsin 
   332 000012C0 A7000080            <2> 	 dd (0x80000000+167) 		 ; _tmcsize 
   333 000012C4 A8000080            <2> 	 dd (0x80000000+168) 		 ; _tmcsort 
   334 000012C8 A9000080            <2> 	 dd (0x80000000+169) 		 ; _tmcsprintf 
   335 000012CC AA000080            <2> 	 dd (0x80000000+170) 		 ; _tmcsqrt 
   336 000012D0 AB000080            <2> 	 dd (0x80000000+171) 		 ; _tmcsqueeze 
   337 000012D4 AC000080            <2> 	 dd (0x80000000+172) 		 ; _tmcss2tf 
   338 000012D8 AD000080            <2> 	 dd (0x80000000+173) 		 ; _tmcssdata 
   339 000012DC AE000080            <2> 	 dd (0x80000000+174) 		 ; _tmcstr2num 
   340 000012E0 AF000080            <2> 	 dd (0x80000000+175) 		 ; _tmcstrcmp 
   341 000012E4 B0000080            <2> 	 dd (0x80000000+176) 		 ; _tmcstruct 
   342 000012E8 B1000080            <2> 	 dd (0x80000000+177) 		 ; _tmcsubplot 
   343 000012EC B2000080            <2> 	 dd (0x80000000+178) 		 ; _tmcsum 
   344 000012F0 B3000080            <2> 	 dd (0x80000000+179) 		 ; _tmcsvd 
   345 000012F4 B4000080            <2> 	 dd (0x80000000+180) 		 ; _tmctan 
   346 000012F8 B5000080            <2> 	 dd (0x80000000+181) 		 ; _tmctext 
   347 000012FC B6000080            <2> 	 dd (0x80000000+182) 		 ; _tmctf 
   348 00001300 B7000080            <2> 	 dd (0x80000000+183) 		 ; _tmctitle 
   349 00001304 B8000080            <2> 	 dd (0x80000000+184) 		 ; _tmcunique 
   350 00001308 B9000080            <2> 	 dd (0x80000000+185) 		 ; _tmcunwrap 
   351 0000130C BA000080            <2> 	 dd (0x80000000+186) 		 ; _tmcwaitbar 
   352 00001310 BB000080            <2> 	 dd (0x80000000+187) 		 ; _tmcxlabel 
   353 00001314 BC000080            <2> 	 dd (0x80000000+188) 		 ; _tmcylabel 
   354 00001318 BD000080            <2> 	 dd (0x80000000+189) 		 ; _tmczeros 
   355 0000131C BE000080            <2> 	 dd (0x80000000+190) 		 ; _zfftf 
   356 00001320 BF000080            <2> 	 dd (0x80000000+191) 		 ; _zffti 
   357 00001324 C0000080            <2> 	 dd (0x80000000+192) 		 ; _zgeevx 
   358 00001328 C1000080            <2> 	 dd (0x80000000+193) 		 ; _zgels 
   359 0000132C C2000080            <2> 	 dd (0x80000000+194) 		 ; _zgeqrf 
   360 00001330 C3000080            <2> 	 dd (0x80000000+195) 		 ; _zgesvd 
   361 00001334 C4000080            <2> 	 dd (0x80000000+196) 		 ; _tmcconnectdebugger 
   362 00001338 C5000080            <2> 	 dd (0x80000000+197) 		 ; _tmcsave 
   363 0000133C C6000080            <2> 	 dd (0x80000000+198) 		 ; _tmcconv 
   364 00001340 C7000080            <2> 	 dd (0x80000000+199) 		 ; _tmcnorm 
   365 00001344 C8000080            <2> 	 dd (0x80000000+200) 		 ; _tmcisequal 
   366 00001348 C9000080            <2> 	 dd (0x80000000+201) 		 ; _tmcqr	 
   367 0000134C CA000080            <2> 	 dd (0x80000000+202) 		 ; _tmceye 
   368 00001350 CB000080            <2> 	 dd (0x80000000+203) 		 ; _tmcinf 
   369 00001354 CC000080            <2> 	 dd (0x80000000+204) 		 ; _tmcNaN 
   370 00001358 CD000080            <2> 	 dd (0x80000000+205) 		 ; _tmceps 
   371 0000135C CE000080            <2> 	 dd (0x80000000+206) 		 ; _tmcpi 
   372 00001360 CF000080            <2> 	 dd (0x80000000+207) 		 ; _tmcj 
   373 00001364 D0000080            <2> 	 dd (0x80000000+208) 		 ; _tmci 
   374 00001368 D1000080            <2> 	 dd (0x80000000+209) 		 ; _tmcsetfield 
   375 0000136C D2000080            <2> 	 dd (0x80000000+210) 		 ; _tmclasterr 
   376 00001370 D3000080            <2> 	 dd (0x80000000+211) 		 ; _tmcstrfind 
   377 00001374 D4000080            <2> 	 dd (0x80000000+212) 		 ; _tmcCreateStringEmpty 
   378 00001378 D5000080            <2> 	 dd (0x80000000+213) 		 ; __tmcGetField 
   379 0000137C D6000080            <2> 	 dd (0x80000000+214) 		 ; __tmcCreateCellArray 
   380 00001380 D7000080            <2> 	 dd (0x80000000+215) 		 ; __tmcGetString 
   381 00001384 D8000080            <2> 	 dd (0x80000000+216) 		 ; __tmcGetFieldNumber 
   382 00001388 D9000080            <2> 	 dd (0x80000000+217) 		 ; _tmcndims 
   383 0000138C DA000080            <2> 	 dd (0x80000000+218) 		 ; _tmcdeal 
   384 00001390 DB000080            <2> 	 dd (0x80000000+219) 		 ; _tmcdet 
   385 00001394 DC000080            <2> 	 dd (0x80000000+220) 		 ; _tmcfigure 
   386 00001398 DD000080            <2> 	 dd (0x80000000+221) 		 ; _tmcexist 
   387 0000139C DE000080            <2> 	 dd (0x80000000+222) 		 ; _tmcnichols 
   388 000013A0 DF000080            <2> 	 dd (0x80000000+223) 		 ; _tmcgcf 
   389 000013A4 E0000080            <2> 	 dd (0x80000000+224) 		 ; _tmcishold 
   390 000013A8 E1000080            <2> 	 dd (0x80000000+225) 		 ; _tmcwarning 
   391 000013AC E2000080            <2> 	 dd (0x80000000+226) 		 ; _tmcfields 
   392 000013B0 E3000080            <2> 	 dd (0x80000000+227) 		 ; _tmcismember 
   393 000013B4 E4000080            <2> 	 dd (0x80000000+228) 		 ; _tmcisa 
   394 000013B8 E5000080            <2> 	 dd (0x80000000+229) 		 ; _tmctfdata 
   395 000013BC E6000080            <2> 	 dd (0x80000000+230) 		 ; _tmcfreqresp 
   396 000013C0 E7000080            <2> 	 dd (0x80000000+231) 		 ; _tmcfrdata 
   397 000013C4 E8000080            <2> 	 dd (0x80000000+232) 		 ; _tmcfrdqfd 
   398 000013C8 E9000080            <2> 	 dd (0x80000000+233) 		 ; _tmctf2ss 
   399 000013CC EA000080            <2> 	 dd (0x80000000+234) 		 ; _tmcss 
   400 000013D0 EB000080            <2> 	 dd (0x80000000+235) 		 ; _tmczpkdata 
   401 000013D4 EC000080            <2> 	 dd (0x80000000+236) 		 ; _tmczpk 
   402 000013D8 ED000080            <2> 	 dd (0x80000000+237) 		 ; _tmcfrd 
   403 000013DC EE000080            <2> 	 dd (0x80000000+238) 		 ; _tmcorderfields 
   404 000013E0 EF000080            <2> 	 dd (0x80000000+239) 		 ; _tmcnumel 
   405 000013E4 F0000080            <2> 	 dd (0x80000000+240) 		 ; _tmccell2mat 
   406 000013E8 F1000080            <2> 	 dd (0x80000000+241) 		 ; _tmccond 
   407 000013EC F2000080            <2> 	 dd (0x80000000+242) 		 ; _tmcdbgPushStackVar	 
   408 000013F0 F3000080            <2> 	 dd (0x80000000+243) 		 ; _tmcdbgPopStackVar	 
   409 000013F4 F4000080            <2> 	 dd (0x80000000+244) 		 ; _tmcdbgOpenDebugger	 
   410 000013F8 F5000080            <2> 	 dd (0x80000000+245) 		 ; _tmcdbgCloseDebugger	 
   411 000013FC F6000080            <2> 	 dd (0x80000000+246) 		 ; _tmcNumElem				 
   412 00001400 F7000080            <2> 	 dd (0x80000000+247) 		 ; _my_malloc_dbg			 
   413 00001404 F8000080            <2> 	 dd (0x80000000+248) 		 ; _hcode2string			 
   414 00001408 F9000080            <2> 	 dd (0x80000000+249) 		 ; __tmcClearRegister		 
   415 0000140C FA000080            <2> 	 dd (0x80000000+250) 		 ; _tmcdbgCommonMemConnect	 
   416                              <1> 
   417 00001410 00000000            <1>     dd 0									; terminator
   418                              <1> 
   419                              <1> ; Import lookup table (array of IMAGE_THUNK_DATA structures)
   420                              <1> 
   421                              <1> ilt:
   422                              <1> 
   423                              <1> 	%include "iat.inc"
   424 00001414 01000080            <2> 	 dd (0x80000000+1) 		 ; ___tmcNewMatrix 
   425 00001418 02000080            <2> 	 dd (0x80000000+2) 		 ; __tmcCreateMatrix 
   426 0000141C 03000080            <2> 	 dd (0x80000000+3) 		 ; __tmcMat2String 
   427 00001420 04000080            <2> 	 dd (0x80000000+4) 		 ; __tmcNewMatrix_dbg 
   428 00001424 05000080            <2> 	 dd (0x80000000+5) 		 ; __tmcRaiseException 
   429 00001428 06000080            <2> 	 dd (0x80000000+6) 		 ; _dgeevx 
   430 0000142C 07000080            <2> 	 dd (0x80000000+7) 		 ; _dgels 
   431 00001430 08000080            <2> 	 dd (0x80000000+8) 		 ; _dgeqrf 
   432 00001434 09000080            <2> 	 dd (0x80000000+9) 		 ; _dgesvd 
   433 00001438 0A000080            <2> 	 dd (0x80000000+10) 		 ; _g_MemCnt 
   434 0000143C 0B000080            <2> 	 dd (0x80000000+11) 		 ; _g_MemN 
   435 00001440 0C000080            <2> 	 dd (0x80000000+12) 		 ; _g_MemUsed 
   436 00001444 0D000080            <2> 	 dd (0x80000000+13) 		 ; _mmy_free 
   437 00001448 0E000080            <2> 	 dd (0x80000000+14) 		 ; _tmcAdd 
   438 0000144C 0F000080            <2> 	 dd (0x80000000+15) 		 ; _tmcAndBoolean 
   439 00001450 10000080            <2> 	 dd (0x80000000+16) 		 ; _tmcAndScalar 
   440 00001454 11000080            <2> 	 dd (0x80000000+17) 		 ; _tmcAssign 
   441 00001458 12000080            <2> 	 dd (0x80000000+18) 		 ; _tmcAssignBool 
   442 0000145C 13000080            <2> 	 dd (0x80000000+19) 		 ; _tmcCalcSwitchExpVal 
   443 00001460 14000080            <2> 	 dd (0x80000000+20) 		 ; _tmcCollectCellColumns 
   444 00001464 15000080            <2> 	 dd (0x80000000+21) 		 ; _tmcCollectCellRows 
   445 00001468 16000080            <2> 	 dd (0x80000000+22) 		 ; _tmcCollectColumns 
   446 0000146C 17000080            <2> 	 dd (0x80000000+23) 		 ; _tmcCollectRows 
   447 00001470 18000080            <2> 	 dd (0x80000000+24) 		 ; _tmcComplexScalar 
   448 00001474 19000080            <2> 	 dd (0x80000000+25) 		 ; _tmcCopyMat 
   449 00001478 1A000080            <2> 	 dd (0x80000000+26) 		 ; _tmcCreateCellEmpty 
   450 0000147C 1B000080            <2> 	 dd (0x80000000+27) 		 ; _tmcCreateColonBaseIncLimit 
   451 00001480 1C000080            <2> 	 dd (0x80000000+28) 		 ; _tmcCreateColonBaseLimit 
   452 00001484 1D000080            <2> 	 dd (0x80000000+29) 		 ; _tmcCreateMagicColon 
   453 00001488 1E000080            <2> 	 dd (0x80000000+30) 		 ; _tmcCreateMatrixEmpty 
   454 0000148C 1F000080            <2> 	 dd (0x80000000+31) 		 ; _tmcCreateRegFrame 
   455 00001490 20000080            <2> 	 dd (0x80000000+32) 		 ; _tmcCreateString 
   456 00001494 21000080            <2> 	 dd (0x80000000+33) 		 ; _tmcDisplayMat 
   457 00001498 22000080            <2> 	 dd (0x80000000+34) 		 ; _tmcDiv 
   458 0000149C 23000080            <2> 	 dd (0x80000000+35) 		 ; _tmcDivScalar 
   459 000014A0 24000080            <2> 	 dd (0x80000000+36) 		 ; _tmcEq 
   460 000014A4 25000080            <2> 	 dd (0x80000000+37) 		 ; _tmcFncHandle 
   461 000014A8 26000080            <2> 	 dd (0x80000000+38) 		 ; _tmcForIterInit 
   462 000014AC 27000080            <2> 	 dd (0x80000000+39) 		 ; _tmcForIterNext 
   463 000014B0 28000080            <2> 	 dd (0x80000000+40) 		 ; _tmcFreeLib 
   464 000014B4 29000080            <2> 	 dd (0x80000000+41) 		 ; _tmcFreeLocalVar 
   465 000014B8 2A000080            <2> 	 dd (0x80000000+42) 		 ; _tmcFreeRegFrame 
   466 000014BC 2B000080            <2> 	 dd (0x80000000+43) 		 ; _tmcGe 
   467 000014C0 2C000080            <2> 	 dd (0x80000000+44) 		 ; _tmcGetByFieldHcode 
   468 000014C4 2D000080            <2> 	 dd (0x80000000+45) 		 ; _tmcGetByIndex 
   469 000014C8 2E000080            <2> 	 dd (0x80000000+46) 		 ; _tmcGetByIndexCell 
   470 000014CC 2F000080            <2> 	 dd (0x80000000+47) 		 ; _tmcGetEnd 
   471 000014D0 30000080            <2> 	 dd (0x80000000+48) 		 ; _tmcGetRefByFieldHcode 
   472 000014D4 31000080            <2> 	 dd (0x80000000+49) 		 ; _tmcGetRefByIndex 
   473 000014D8 32000080            <2> 	 dd (0x80000000+50) 		 ; _tmcGetRefByIndexCell 
   474 000014DC 33000080            <2> 	 dd (0x80000000+51) 		 ; _tmcGt 
   475 000014E0 34000080            <2> 	 dd (0x80000000+52) 		 ; _tmcInitLib 
   476 000014E4 35000080            <2> 	 dd (0x80000000+53) 		 ; _tmcIsCaseDouble 
   477 000014E8 36000080            <2> 	 dd (0x80000000+54) 		 ; _tmcIsCaseString 
   478 000014EC 37000080            <2> 	 dd (0x80000000+55) 		 ; _tmcIsFalse 
   479 000014F0 38000080            <2> 	 dd (0x80000000+56) 		 ; _tmcIsFieldHcode 
   480 000014F4 39000080            <2> 	 dd (0x80000000+57) 		 ; _tmcIsTrue 
   481 000014F8 3A000080            <2> 	 dd (0x80000000+58) 		 ; _tmcLe 
   482 000014FC 3B000080            <2> 	 dd (0x80000000+59) 		 ; _tmcLeftDiv 
   483 00001500 3C000080            <2> 	 dd (0x80000000+60) 		 ; _tmcLt 
   484 00001504 3D000080            <2> 	 dd (0x80000000+61) 		 ; _tmcMul 
   485 00001508 3E000080            <2> 	 dd (0x80000000+62) 		 ; _tmcMulScalar 
   486 0000150C 3F000080            <2> 	 dd (0x80000000+63) 		 ; _tmcNe 
   487 00001510 40000080            <2> 	 dd (0x80000000+64) 		 ; _tmcNeg 
   488 00001514 41000080            <2> 	 dd (0x80000000+65) 		 ; _tmcNot 
   489 00001518 42000080            <2> 	 dd (0x80000000+66) 		 ; _tmcNotCase 
   490 0000151C 43000080            <2> 	 dd (0x80000000+67) 		 ; _tmcOrBoolean 
   491 00001520 44000080            <2> 	 dd (0x80000000+68) 		 ; _tmcOrScalar 
   492 00001524 45000080            <2> 	 dd (0x80000000+69) 		 ; _tmcPower 
   493 00001528 46000080            <2> 	 dd (0x80000000+70) 		 ; _tmcPowerScalar 
   494 0000152C 47000080            <2> 	 dd (0x80000000+71) 		 ; _tmcReallocRegister 
   495 00001530 48000080            <2> 	 dd (0x80000000+72) 		 ; _tmcScalar 
   496 00001534 49000080            <2> 	 dd (0x80000000+73) 		 ; _tmcSub 
   497 00001538 4A000080            <2> 	 dd (0x80000000+74) 		 ; _tmcSyntaxError 
   498 0000153C 4B000080            <2> 	 dd (0x80000000+75) 		 ; _tmcTranspose 
   499 00001540 4C000080            <2> 	 dd (0x80000000+76) 		 ; _tmcTransposeScalar 
   500 00001544 4D000080            <2> 	 dd (0x80000000+77) 		 ; _tmcabs 
   501 00001548 4E000080            <2> 	 dd (0x80000000+78) 		 ; _tmcacos 
   502 0000154C 4F000080            <2> 	 dd (0x80000000+79) 		 ; _tmcall 
   503 00001550 50000080            <2> 	 dd (0x80000000+80) 		 ; _tmcangle 
   504 00001554 51000080            <2> 	 dd (0x80000000+81) 		 ; _tmcany 
   505 00001558 52000080            <2> 	 dd (0x80000000+82) 		 ; _tmcasin 
   506 0000155C 53000080            <2> 	 dd (0x80000000+83) 		 ; _tmcatan 
   507 00001560 54000080            <2> 	 dd (0x80000000+84) 		 ; _tmcatan2 
   508 00001564 55000080            <2> 	 dd (0x80000000+85) 		 ; _tmcaxis 
   509 00001568 56000080            <2> 	 dd (0x80000000+86) 		 ; _tmcbitand 
   510 0000156C 57000080            <2> 	 dd (0x80000000+87) 		 ; _tmcbitor 
   511 00001570 58000080            <2> 	 dd (0x80000000+88) 		 ; _tmcbitshift 
   512 00001574 59000080            <2> 	 dd (0x80000000+89) 		 ; _tmcceil 
   513 00001578 5A000080            <2> 	 dd (0x80000000+90) 		 ; _tmccell 
   514 0000157C 5B000080            <2> 	 dd (0x80000000+91) 		 ; _tmcchar 
   515 00001580 5C000080            <2> 	 dd (0x80000000+92) 		 ; _tmcclose 
   516 00001584 5D000080            <2> 	 dd (0x80000000+93) 		 ; _tmcconj 
   517 00001588 5E000080            <2> 	 dd (0x80000000+94) 		 ; _tmccos 
   518 0000158C 5F000080            <2> 	 dd (0x80000000+95) 		 ; _tmccumprod 
   519 00001590 60000080            <2> 	 dd (0x80000000+96) 		 ; _tmcdec2hex 
   520 00001594 61000080            <2> 	 dd (0x80000000+97) 		 ; _tmcdeconv 
   521 00001598 62000080            <2> 	 dd (0x80000000+98) 		 ; _tmcdiag 
   522 0000159C 63000080            <2> 	 dd (0x80000000+99) 		 ; _tmcdiff 
   523 000015A0 64000080            <2> 	 dd (0x80000000+100) 		 ; _tmcdisp 
   524 000015A4 65000080            <2> 	 dd (0x80000000+101) 		 ; _tmcdouble 
   525 000015A8 66000080            <2> 	 dd (0x80000000+102) 		 ; _tmceig 
   526 000015AC 67000080            <2> 	 dd (0x80000000+103) 		 ; _tmcerror 
   527 000015B0 68000080            <2> 	 dd (0x80000000+104) 		 ; _tmceval 
   528 000015B4 69000080            <2> 	 dd (0x80000000+105) 		 ; _tmcexp 
   529 000015B8 6A000080            <2> 	 dd (0x80000000+106) 		 ; _tmcfclose 
   530 000015BC 6B000080            <2> 	 dd (0x80000000+107) 		 ; _tmcfeof 
   531 000015C0 6C000080            <2> 	 dd (0x80000000+108) 		 ; _tmcfeval 
   532 000015C4 6D000080            <2> 	 dd (0x80000000+109) 		 ; _tmcfft 
   533 000015C8 6E000080            <2> 	 dd (0x80000000+110) 		 ; _tmcfgetl 
   534 000015CC 6F000080            <2> 	 dd (0x80000000+111) 		 ; _tmcfieldnames 
   535 000015D0 70000080            <2> 	 dd (0x80000000+112) 		 ; _tmcfill 
   536 000015D4 71000080            <2> 	 dd (0x80000000+113) 		 ; _tmcfind 
   537 000015D8 72000080            <2> 	 dd (0x80000000+114) 		 ; _tmcfindstr 
   538 000015DC 73000080            <2> 	 dd (0x80000000+115) 		 ; _tmcfix 
   539 000015E0 74000080            <2> 	 dd (0x80000000+116) 		 ; _tmcfliplr 
   540 000015E4 75000080            <2> 	 dd (0x80000000+117) 		 ; _tmcfloor 
   541 000015E8 76000080            <2> 	 dd (0x80000000+118) 		 ; _tmcfopen 
   542 000015EC 77000080            <2> 	 dd (0x80000000+119) 		 ; _tmcfprintf 
   543 000015F0 78000080            <2> 	 dd (0x80000000+120) 		 ; _tmcgca 
   544 000015F4 79000080            <2> 	 dd (0x80000000+121) 		 ; _tmcget 
   545 000015F8 7A000080            <2> 	 dd (0x80000000+122) 		 ; _tmcgetfield 
   546 000015FC 7B000080            <2> 	 dd (0x80000000+123) 		 ; _tmcgrid 
   547 00001600 7C000080            <2> 	 dd (0x80000000+124) 		 ; _tmchex2dec 
   548 00001604 7D000080            <2> 	 dd (0x80000000+125) 		 ; _tmchold 
   549 00001608 7E000080            <2> 	 dd (0x80000000+126) 		 ; _tmcimag 
   550 0000160C 7F000080            <2> 	 dd (0x80000000+127) 		 ; _tmcinterp1 
   551 00001610 80000080            <2> 	 dd (0x80000000+128) 		 ; _tmcintersect 
   552 00001614 81000080            <2> 	 dd (0x80000000+129) 		 ; _tmcinv 
   553 00001618 82000080            <2> 	 dd (0x80000000+130) 		 ; _tmciscell 
   554 0000161C 83000080            <2> 	 dd (0x80000000+131) 		 ; _tmcischar 
   555 00001620 84000080            <2> 	 dd (0x80000000+132) 		 ; _tmcisempty 
   556 00001624 85000080            <2> 	 dd (0x80000000+133) 		 ; _tmcisfield 
   557 00001628 86000080            <2> 	 dd (0x80000000+134) 		 ; _tmcisfinite 
   558 0000162C 87000080            <2> 	 dd (0x80000000+135) 		 ; _tmcisnan 
   559 00001630 88000080            <2> 	 dd (0x80000000+136) 		 ; _tmcisnumeric 
   560 00001634 89000080            <2> 	 dd (0x80000000+137) 		 ; _tmcisreal 
   561 00001638 8A000080            <2> 	 dd (0x80000000+138) 		 ; _tmcisscalar 
   562 0000163C 8B000080            <2> 	 dd (0x80000000+139) 		 ; _tmcisstruct 
   563 00001640 8C000080            <2> 	 dd (0x80000000+140) 		 ; _tmcisvector 
   564 00001644 8D000080            <2> 	 dd (0x80000000+141) 		 ; _tmclength 
   565 00001648 8E000080            <2> 	 dd (0x80000000+142) 		 ; _tmclinspace 
   566 0000164C 8F000080            <2> 	 dd (0x80000000+143) 		 ; _tmcload 
   567 00001650 90000080            <2> 	 dd (0x80000000+144) 		 ; _tmclog 
   568 00001654 91000080            <2> 	 dd (0x80000000+145) 		 ; _tmclog10 
   569 00001658 92000080            <2> 	 dd (0x80000000+146) 		 ; _tmclogspace 
   570 0000165C 93000080            <2> 	 dd (0x80000000+147) 		 ; _tmclower 
   571 00001660 94000080            <2> 	 dd (0x80000000+148) 		 ; _tmcmax 
   572 00001664 95000080            <2> 	 dd (0x80000000+149) 		 ; _tmcmin 
   573 00001668 96000080            <2> 	 dd (0x80000000+150) 		 ; _tmcmod 
   574 0000166C 97000080            <2> 	 dd (0x80000000+151) 		 ; _tmcnargchk 
   575 00001670 98000080            <2> 	 dd (0x80000000+152) 		 ; _tmcnum2str 
   576 00001674 99000080            <2> 	 dd (0x80000000+153) 		 ; _tmcones 
   577 00001678 9A000080            <2> 	 dd (0x80000000+154) 		 ; _tmcpause 
   578 0000167C 9B000080            <2> 	 dd (0x80000000+155) 		 ; _tmcplot 
   579 00001680 9C000080            <2> 	 dd (0x80000000+156) 		 ; _tmcpolyval 
   580 00001684 9D000080            <2> 	 dd (0x80000000+157) 		 ; _tmcprod 
   581 00001688 9E000080            <2> 	 dd (0x80000000+158) 		 ; _tmcreal 
   582 0000168C 9F000080            <2> 	 dd (0x80000000+159) 		 ; _tmcrem 
   583 00001690 A0000080            <2> 	 dd (0x80000000+160) 		 ; _tmcrmfield 
   584 00001694 A1000080            <2> 	 dd (0x80000000+161) 		 ; _tmcroots 
   585 00001698 A2000080            <2> 	 dd (0x80000000+162) 		 ; _tmcround 
   586 0000169C A3000080            <2> 	 dd (0x80000000+163) 		 ; _tmcset 
   587 000016A0 A4000080            <2> 	 dd (0x80000000+164) 		 ; _tmcsetdiff 
   588 000016A4 A5000080            <2> 	 dd (0x80000000+165) 		 ; _tmcsign 
   589 000016A8 A6000080            <2> 	 dd (0x80000000+166) 		 ; _tmcsin 
   590 000016AC A7000080            <2> 	 dd (0x80000000+167) 		 ; _tmcsize 
   591 000016B0 A8000080            <2> 	 dd (0x80000000+168) 		 ; _tmcsort 
   592 000016B4 A9000080            <2> 	 dd (0x80000000+169) 		 ; _tmcsprintf 
   593 000016B8 AA000080            <2> 	 dd (0x80000000+170) 		 ; _tmcsqrt 
   594 000016BC AB000080            <2> 	 dd (0x80000000+171) 		 ; _tmcsqueeze 
   595 000016C0 AC000080            <2> 	 dd (0x80000000+172) 		 ; _tmcss2tf 
   596 000016C4 AD000080            <2> 	 dd (0x80000000+173) 		 ; _tmcssdata 
   597 000016C8 AE000080            <2> 	 dd (0x80000000+174) 		 ; _tmcstr2num 
   598 000016CC AF000080            <2> 	 dd (0x80000000+175) 		 ; _tmcstrcmp 
   599 000016D0 B0000080            <2> 	 dd (0x80000000+176) 		 ; _tmcstruct 
   600 000016D4 B1000080            <2> 	 dd (0x80000000+177) 		 ; _tmcsubplot 
   601 000016D8 B2000080            <2> 	 dd (0x80000000+178) 		 ; _tmcsum 
   602 000016DC B3000080            <2> 	 dd (0x80000000+179) 		 ; _tmcsvd 
   603 000016E0 B4000080            <2> 	 dd (0x80000000+180) 		 ; _tmctan 
   604 000016E4 B5000080            <2> 	 dd (0x80000000+181) 		 ; _tmctext 
   605 000016E8 B6000080            <2> 	 dd (0x80000000+182) 		 ; _tmctf 
   606 000016EC B7000080            <2> 	 dd (0x80000000+183) 		 ; _tmctitle 
   607 000016F0 B8000080            <2> 	 dd (0x80000000+184) 		 ; _tmcunique 
   608 000016F4 B9000080            <2> 	 dd (0x80000000+185) 		 ; _tmcunwrap 
   609 000016F8 BA000080            <2> 	 dd (0x80000000+186) 		 ; _tmcwaitbar 
   610 000016FC BB000080            <2> 	 dd (0x80000000+187) 		 ; _tmcxlabel 
   611 00001700 BC000080            <2> 	 dd (0x80000000+188) 		 ; _tmcylabel 
   612 00001704 BD000080            <2> 	 dd (0x80000000+189) 		 ; _tmczeros 
   613 00001708 BE000080            <2> 	 dd (0x80000000+190) 		 ; _zfftf 
   614 0000170C BF000080            <2> 	 dd (0x80000000+191) 		 ; _zffti 
   615 00001710 C0000080            <2> 	 dd (0x80000000+192) 		 ; _zgeevx 
   616 00001714 C1000080            <2> 	 dd (0x80000000+193) 		 ; _zgels 
   617 00001718 C2000080            <2> 	 dd (0x80000000+194) 		 ; _zgeqrf 
   618 0000171C C3000080            <2> 	 dd (0x80000000+195) 		 ; _zgesvd 
   619 00001720 C4000080            <2> 	 dd (0x80000000+196) 		 ; _tmcconnectdebugger 
   620 00001724 C5000080            <2> 	 dd (0x80000000+197) 		 ; _tmcsave 
   621 00001728 C6000080            <2> 	 dd (0x80000000+198) 		 ; _tmcconv 
   622 0000172C C7000080            <2> 	 dd (0x80000000+199) 		 ; _tmcnorm 
   623 00001730 C8000080            <2> 	 dd (0x80000000+200) 		 ; _tmcisequal 
   624 00001734 C9000080            <2> 	 dd (0x80000000+201) 		 ; _tmcqr	 
   625 00001738 CA000080            <2> 	 dd (0x80000000+202) 		 ; _tmceye 
   626 0000173C CB000080            <2> 	 dd (0x80000000+203) 		 ; _tmcinf 
   627 00001740 CC000080            <2> 	 dd (0x80000000+204) 		 ; _tmcNaN 
   628 00001744 CD000080            <2> 	 dd (0x80000000+205) 		 ; _tmceps 
   629 00001748 CE000080            <2> 	 dd (0x80000000+206) 		 ; _tmcpi 
   630 0000174C CF000080            <2> 	 dd (0x80000000+207) 		 ; _tmcj 
   631 00001750 D0000080            <2> 	 dd (0x80000000+208) 		 ; _tmci 
   632 00001754 D1000080            <2> 	 dd (0x80000000+209) 		 ; _tmcsetfield 
   633 00001758 D2000080            <2> 	 dd (0x80000000+210) 		 ; _tmclasterr 
   634 0000175C D3000080            <2> 	 dd (0x80000000+211) 		 ; _tmcstrfind 
   635 00001760 D4000080            <2> 	 dd (0x80000000+212) 		 ; _tmcCreateStringEmpty 
   636 00001764 D5000080            <2> 	 dd (0x80000000+213) 		 ; __tmcGetField 
   637 00001768 D6000080            <2> 	 dd (0x80000000+214) 		 ; __tmcCreateCellArray 
   638 0000176C D7000080            <2> 	 dd (0x80000000+215) 		 ; __tmcGetString 
   639 00001770 D8000080            <2> 	 dd (0x80000000+216) 		 ; __tmcGetFieldNumber 
   640 00001774 D9000080            <2> 	 dd (0x80000000+217) 		 ; _tmcndims 
   641 00001778 DA000080            <2> 	 dd (0x80000000+218) 		 ; _tmcdeal 
   642 0000177C DB000080            <2> 	 dd (0x80000000+219) 		 ; _tmcdet 
   643 00001780 DC000080            <2> 	 dd (0x80000000+220) 		 ; _tmcfigure 
   644 00001784 DD000080            <2> 	 dd (0x80000000+221) 		 ; _tmcexist 
   645 00001788 DE000080            <2> 	 dd (0x80000000+222) 		 ; _tmcnichols 
   646 0000178C DF000080            <2> 	 dd (0x80000000+223) 		 ; _tmcgcf 
   647 00001790 E0000080            <2> 	 dd (0x80000000+224) 		 ; _tmcishold 
   648 00001794 E1000080            <2> 	 dd (0x80000000+225) 		 ; _tmcwarning 
   649 00001798 E2000080            <2> 	 dd (0x80000000+226) 		 ; _tmcfields 
   650 0000179C E3000080            <2> 	 dd (0x80000000+227) 		 ; _tmcismember 
   651 000017A0 E4000080            <2> 	 dd (0x80000000+228) 		 ; _tmcisa 
   652 000017A4 E5000080            <2> 	 dd (0x80000000+229) 		 ; _tmctfdata 
   653 000017A8 E6000080            <2> 	 dd (0x80000000+230) 		 ; _tmcfreqresp 
   654 000017AC E7000080            <2> 	 dd (0x80000000+231) 		 ; _tmcfrdata 
   655 000017B0 E8000080            <2> 	 dd (0x80000000+232) 		 ; _tmcfrdqfd 
   656 000017B4 E9000080            <2> 	 dd (0x80000000+233) 		 ; _tmctf2ss 
   657 000017B8 EA000080            <2> 	 dd (0x80000000+234) 		 ; _tmcss 
   658 000017BC EB000080            <2> 	 dd (0x80000000+235) 		 ; _tmczpkdata 
   659 000017C0 EC000080            <2> 	 dd (0x80000000+236) 		 ; _tmczpk 
   660 000017C4 ED000080            <2> 	 dd (0x80000000+237) 		 ; _tmcfrd 
   661 000017C8 EE000080            <2> 	 dd (0x80000000+238) 		 ; _tmcorderfields 
   662 000017CC EF000080            <2> 	 dd (0x80000000+239) 		 ; _tmcnumel 
   663 000017D0 F0000080            <2> 	 dd (0x80000000+240) 		 ; _tmccell2mat 
   664 000017D4 F1000080            <2> 	 dd (0x80000000+241) 		 ; _tmccond 
   665 000017D8 F2000080            <2> 	 dd (0x80000000+242) 		 ; _tmcdbgPushStackVar	 
   666 000017DC F3000080            <2> 	 dd (0x80000000+243) 		 ; _tmcdbgPopStackVar	 
   667 000017E0 F4000080            <2> 	 dd (0x80000000+244) 		 ; _tmcdbgOpenDebugger	 
   668 000017E4 F5000080            <2> 	 dd (0x80000000+245) 		 ; _tmcdbgCloseDebugger	 
   669 000017E8 F6000080            <2> 	 dd (0x80000000+246) 		 ; _tmcNumElem				 
   670 000017EC F7000080            <2> 	 dd (0x80000000+247) 		 ; _my_malloc_dbg			 
   671 000017F0 F8000080            <2> 	 dd (0x80000000+248) 		 ; _hcode2string			 
   672 000017F4 F9000080            <2> 	 dd (0x80000000+249) 		 ; __tmcClearRegister		 
   673 000017F8 FA000080            <2> 	 dd (0x80000000+250) 		 ; _tmcdbgCommonMemConnect	 
   674                              <1> 
   675 000017FC 00000000            <1>     dd 0			; terminator
   676                              <1> 
   677                              <1> 
   678                              <1> iatUser32:
   679 00001800 62000080            <1>     dd (0x80000000+98)                             ; Import function 1 by ordinal
   680 00001804 00000000            <1>     dd 0									; terminator
   681                              <1> 
   682                              <1> ; Import lookup table (array of IMAGE_THUNK_DATA structures)
   683                              <1> 
   684                              <1> iltUser32:
   685 00001808 62000080            <1>     dd (0x80000000+98)                             ; Import function 1 by ordinal
   686 0000180C 00000000            <1>     dd 0
   687                              <1> 
   688                              <1> 
   689                              <1> kernel32:
   690 00001810 746D6372747663382E- <1>     db "tmcrtvc8.dll", 0
   691 00001819 646C6C00            <1>
   692                              <1> user32:
   693 0000181D 7573657233322E646C- <1>     db "user32.dll", 0
   694 00001826 6C00                <1>
   695                              <1> 
   696                              <1> ;;;;;;;;;;;;;;
   697                              <1> 
   698                              <1> 	%include "fncc.inc"
   699                              <2> 	%define	___tmcNewMatrix	[iat+MY_LOAD_ADDRESS+0*4]	; @1
   700                              <2> 	%define	__tmcCreateMatrix	[iat+MY_LOAD_ADDRESS+1*4]	; @2
   701                              <2> 	%define	__tmcMat2String	[iat+MY_LOAD_ADDRESS+2*4]	; @3
   702                              <2> 	%define	__tmcNewMatrix_dbg	[iat+MY_LOAD_ADDRESS+3*4]	; @4
   703                              <2> 	%define	__tmcRaiseException	[iat+MY_LOAD_ADDRESS+4*4]	; @5
   704                              <2> 	%define	_dgeevx	[iat+MY_LOAD_ADDRESS+5*4]	; @6
   705                              <2> 	%define	_dgels	[iat+MY_LOAD_ADDRESS+6*4]	; @7
   706                              <2> 	%define	_dgeqrf	[iat+MY_LOAD_ADDRESS+7*4]	; @8
   707                              <2> 	%define	_dgesvd	[iat+MY_LOAD_ADDRESS+8*4]	; @9
   708                              <2> 	%define	_g_MemCnt	[iat+MY_LOAD_ADDRESS+9*4]	; @10
   709                              <2> 	%define	_g_MemN	[iat+MY_LOAD_ADDRESS+10*4]	; @11
   710                              <2> 	%define	_g_MemUsed	[iat+MY_LOAD_ADDRESS+11*4]	; @12
   711                              <2> 	%define	_mmy_free	[iat+MY_LOAD_ADDRESS+12*4]	; @13
   712                              <2> 	%define	_tmcAdd	[iat+MY_LOAD_ADDRESS+13*4]	; @14
   713                              <2> 	%define	_tmcAndBoolean	[iat+MY_LOAD_ADDRESS+14*4]	; @15
   714                              <2> 	%define	_tmcAndScalar	[iat+MY_LOAD_ADDRESS+15*4]	; @16
   715                              <2> 	%define	_tmcAssign	[iat+MY_LOAD_ADDRESS+16*4]	; @17
   716                              <2> 	%define	_tmcAssignBool	[iat+MY_LOAD_ADDRESS+17*4]	; @18
   717                              <2> 	%define	_tmcCalcSwitchExpVal	[iat+MY_LOAD_ADDRESS+18*4]	; @19
   718                              <2> 	%define	_tmcCollectCellColumns	[iat+MY_LOAD_ADDRESS+19*4]	; @20
   719                              <2> 	%define	_tmcCollectCellRows	[iat+MY_LOAD_ADDRESS+20*4]	; @21
   720                              <2> 	%define	_tmcCollectColumns	[iat+MY_LOAD_ADDRESS+21*4]	; @22
   721                              <2> 	%define	_tmcCollectRows	[iat+MY_LOAD_ADDRESS+22*4]	; @23
   722                              <2> 	%define	_tmcComplexScalar	[iat+MY_LOAD_ADDRESS+23*4]	; @24
   723                              <2> 	%define	_tmcCopyMat	[iat+MY_LOAD_ADDRESS+24*4]	; @25
   724                              <2> 	%define	_tmcCreateCellEmpty	[iat+MY_LOAD_ADDRESS+25*4]	; @26
   725                              <2> 	%define	_tmcCreateColonBaseIncLimit	[iat+MY_LOAD_ADDRESS+26*4]	; @27
   726                              <2> 	%define	_tmcCreateColonBaseLimit	[iat+MY_LOAD_ADDRESS+27*4]	; @28
   727                              <2> 	%define	_tmcCreateMagicColon	[iat+MY_LOAD_ADDRESS+28*4]	; @29
   728                              <2> 	%define	_tmcCreateMatrixEmpty	[iat+MY_LOAD_ADDRESS+29*4]	; @30
   729                              <2> 	%define	_tmcCreateRegFrame	[iat+MY_LOAD_ADDRESS+30*4]	; @31
   730                              <2> 	%define	_tmcCreateString	[iat+MY_LOAD_ADDRESS+31*4]	; @32
   731                              <2> 	%define	_tmcDisplayMat	[iat+MY_LOAD_ADDRESS+32*4]	; @33
   732                              <2> 	%define	_tmcDiv	[iat+MY_LOAD_ADDRESS+33*4]	; @34
   733                              <2> 	%define	_tmcDivScalar	[iat+MY_LOAD_ADDRESS+34*4]	; @35
   734                              <2> 	%define	_tmcEq	[iat+MY_LOAD_ADDRESS+35*4]	; @36
   735                              <2> 	%define	_tmcFncHandle	[iat+MY_LOAD_ADDRESS+36*4]	; @37
   736                              <2> 	%define	_tmcForIterInit	[iat+MY_LOAD_ADDRESS+37*4]	; @38
   737                              <2> 	%define	_tmcForIterNext	[iat+MY_LOAD_ADDRESS+38*4]	; @39
   738                              <2> 	%define	_tmcFreeLib	[iat+MY_LOAD_ADDRESS+39*4]	; @40
   739                              <2> 	%define	_tmcFreeLocalVar	[iat+MY_LOAD_ADDRESS+40*4]	; @41
   740                              <2> 	%define	_tmcFreeRegFrame	[iat+MY_LOAD_ADDRESS+41*4]	; @42
   741                              <2> 	%define	_tmcGe	[iat+MY_LOAD_ADDRESS+42*4]	; @43
   742                              <2> 	%define	_tmcGetByFieldHcode	[iat+MY_LOAD_ADDRESS+43*4]	; @44
   743                              <2> 	%define	_tmcGetByIndex	[iat+MY_LOAD_ADDRESS+44*4]	; @45
   744                              <2> 	%define	_tmcGetByIndexCell	[iat+MY_LOAD_ADDRESS+45*4]	; @46
   745                              <2> 	%define	_tmcGetEnd	[iat+MY_LOAD_ADDRESS+46*4]	; @47
   746                              <2> 	%define	_tmcGetRefByFieldHcode	[iat+MY_LOAD_ADDRESS+47*4]	; @48
   747                              <2> 	%define	_tmcGetRefByIndex	[iat+MY_LOAD_ADDRESS+48*4]	; @49
   748                              <2> 	%define	_tmcGetRefByIndexCell	[iat+MY_LOAD_ADDRESS+49*4]	; @50
   749                              <2> 	%define	_tmcGt	[iat+MY_LOAD_ADDRESS+50*4]	; @51
   750                              <2> 	%define	_tmcInitLib	[iat+MY_LOAD_ADDRESS+51*4]	; @52
   751                              <2> 	%define	_tmcIsCaseDouble	[iat+MY_LOAD_ADDRESS+52*4]	; @53
   752                              <2> 	%define	_tmcIsCaseString	[iat+MY_LOAD_ADDRESS+53*4]	; @54
   753                              <2> 	%define	_tmcIsFalse	[iat+MY_LOAD_ADDRESS+54*4]	; @55
   754                              <2> 	%define	_tmcIsFieldHcode	[iat+MY_LOAD_ADDRESS+55*4]	; @56
   755                              <2> 	%define	_tmcIsTrue	[iat+MY_LOAD_ADDRESS+56*4]	; @57
   756                              <2> 	%define	_tmcLe	[iat+MY_LOAD_ADDRESS+57*4]	; @58
   757                              <2> 	%define	_tmcLeftDiv	[iat+MY_LOAD_ADDRESS+58*4]	; @59
   758                              <2> 	%define	_tmcLt	[iat+MY_LOAD_ADDRESS+59*4]	; @60
   759                              <2> 	%define	_tmcMul	[iat+MY_LOAD_ADDRESS+60*4]	; @61
   760                              <2> 	%define	_tmcMulScalar	[iat+MY_LOAD_ADDRESS+61*4]	; @62
   761                              <2> 	%define	_tmcNe	[iat+MY_LOAD_ADDRESS+62*4]	; @63
   762                              <2> 	%define	_tmcNeg	[iat+MY_LOAD_ADDRESS+63*4]	; @64
   763                              <2> 	%define	_tmcNot	[iat+MY_LOAD_ADDRESS+64*4]	; @65
   764                              <2> 	%define	_tmcNotCase	[iat+MY_LOAD_ADDRESS+65*4]	; @66
   765                              <2> 	%define	_tmcOrBoolean	[iat+MY_LOAD_ADDRESS+66*4]	; @67
   766                              <2> 	%define	_tmcOrScalar	[iat+MY_LOAD_ADDRESS+67*4]	; @68
   767                              <2> 	%define	_tmcPower	[iat+MY_LOAD_ADDRESS+68*4]	; @69
   768                              <2> 	%define	_tmcPowerScalar	[iat+MY_LOAD_ADDRESS+69*4]	; @70
   769                              <2> 	%define	_tmcReallocRegister	[iat+MY_LOAD_ADDRESS+70*4]	; @71
   770                              <2> 	%define	_tmcScalar	[iat+MY_LOAD_ADDRESS+71*4]	; @72
   771                              <2> 	%define	_tmcSub	[iat+MY_LOAD_ADDRESS+72*4]	; @73
   772                              <2> 	%define	_tmcSyntaxError	[iat+MY_LOAD_ADDRESS+73*4]	; @74
   773                              <2> 	%define	_tmcTranspose	[iat+MY_LOAD_ADDRESS+74*4]	; @75
   774                              <2> 	%define	_tmcTransposeScalar	[iat+MY_LOAD_ADDRESS+75*4]	; @76
   775                              <2> 	%define	_tmcabs	[iat+MY_LOAD_ADDRESS+76*4]	; @77
   776                              <2> 	%define	_tmcacos	[iat+MY_LOAD_ADDRESS+77*4]	; @78
   777                              <2> 	%define	_tmcall	[iat+MY_LOAD_ADDRESS+78*4]	; @79
   778                              <2> 	%define	_tmcangle	[iat+MY_LOAD_ADDRESS+79*4]	; @80
   779                              <2> 	%define	_tmcany	[iat+MY_LOAD_ADDRESS+80*4]	; @81
   780                              <2> 	%define	_tmcasin	[iat+MY_LOAD_ADDRESS+81*4]	; @82
   781                              <2> 	%define	_tmcatan	[iat+MY_LOAD_ADDRESS+82*4]	; @83
   782                              <2> 	%define	_tmcatan2	[iat+MY_LOAD_ADDRESS+83*4]	; @84
   783                              <2> 	%define	_tmcaxis	[iat+MY_LOAD_ADDRESS+84*4]	; @85
   784                              <2> 	%define	_tmcbitand	[iat+MY_LOAD_ADDRESS+85*4]	; @86
   785                              <2> 	%define	_tmcbitor	[iat+MY_LOAD_ADDRESS+86*4]	; @87
   786                              <2> 	%define	_tmcbitshift	[iat+MY_LOAD_ADDRESS+87*4]	; @88
   787                              <2> 	%define	_tmcceil	[iat+MY_LOAD_ADDRESS+88*4]	; @89
   788                              <2> 	%define	_tmccell	[iat+MY_LOAD_ADDRESS+89*4]	; @90
   789                              <2> 	%define	_tmcchar	[iat+MY_LOAD_ADDRESS+90*4]	; @91
   790                              <2> 	%define	_tmcclose	[iat+MY_LOAD_ADDRESS+91*4]	; @92
   791                              <2> 	%define	_tmcconj	[iat+MY_LOAD_ADDRESS+92*4]	; @93
   792                              <2> 	%define	_tmccos	[iat+MY_LOAD_ADDRESS+93*4]	; @94
   793                              <2> 	%define	_tmccumprod	[iat+MY_LOAD_ADDRESS+94*4]	; @95
   794                              <2> 	%define	_tmcdec2hex	[iat+MY_LOAD_ADDRESS+95*4]	; @96
   795                              <2> 	%define	_tmcdeconv	[iat+MY_LOAD_ADDRESS+96*4]	; @97
   796                              <2> 	%define	_tmcdiag	[iat+MY_LOAD_ADDRESS+97*4]	; @98
   797                              <2> 	%define	_tmcdiff	[iat+MY_LOAD_ADDRESS+98*4]	; @99
   798                              <2> 	%define	_tmcdisp	[iat+MY_LOAD_ADDRESS+99*4]	; @100
   799                              <2> 	%define	_tmcdouble	[iat+MY_LOAD_ADDRESS+100*4]	; @101
   800                              <2> 	%define	_tmceig	[iat+MY_LOAD_ADDRESS+101*4]	; @102
   801                              <2> 	%define	_tmcerror	[iat+MY_LOAD_ADDRESS+102*4]	; @103
   802                              <2> 	%define	_tmceval	[iat+MY_LOAD_ADDRESS+103*4]	; @104
   803                              <2> 	%define	_tmcexp	[iat+MY_LOAD_ADDRESS+104*4]	; @105
   804                              <2> 	%define	_tmcfclose	[iat+MY_LOAD_ADDRESS+105*4]	; @106
   805                              <2> 	%define	_tmcfeof	[iat+MY_LOAD_ADDRESS+106*4]	; @107
   806                              <2> 	%define	_tmcfeval	[iat+MY_LOAD_ADDRESS+107*4]	; @108
   807                              <2> 	%define	_tmcfft	[iat+MY_LOAD_ADDRESS+108*4]	; @109
   808                              <2> 	%define	_tmcfgetl	[iat+MY_LOAD_ADDRESS+109*4]	; @110
   809                              <2> 	%define	_tmcfieldnames	[iat+MY_LOAD_ADDRESS+110*4]	; @111
   810                              <2> 	%define	_tmcfill	[iat+MY_LOAD_ADDRESS+111*4]	; @112
   811                              <2> 	%define	_tmcfind	[iat+MY_LOAD_ADDRESS+112*4]	; @113
   812                              <2> 	%define	_tmcfindstr	[iat+MY_LOAD_ADDRESS+113*4]	; @114
   813                              <2> 	%define	_tmcfix	[iat+MY_LOAD_ADDRESS+114*4]	; @115
   814                              <2> 	%define	_tmcfliplr	[iat+MY_LOAD_ADDRESS+115*4]	; @116
   815                              <2> 	%define	_tmcfloor	[iat+MY_LOAD_ADDRESS+116*4]	; @117
   816                              <2> 	%define	_tmcfopen	[iat+MY_LOAD_ADDRESS+117*4]	; @118
   817                              <2> 	%define	_tmcfprintf	[iat+MY_LOAD_ADDRESS+118*4]	; @119
   818                              <2> 	%define	_tmcgca	[iat+MY_LOAD_ADDRESS+119*4]	; @120
   819                              <2> 	%define	_tmcget	[iat+MY_LOAD_ADDRESS+120*4]	; @121
   820                              <2> 	%define	_tmcgetfield	[iat+MY_LOAD_ADDRESS+121*4]	; @122
   821                              <2> 	%define	_tmcgrid	[iat+MY_LOAD_ADDRESS+122*4]	; @123
   822                              <2> 	%define	_tmchex2dec	[iat+MY_LOAD_ADDRESS+123*4]	; @124
   823                              <2> 	%define	_tmchold	[iat+MY_LOAD_ADDRESS+124*4]	; @125
   824                              <2> 	%define	_tmcimag	[iat+MY_LOAD_ADDRESS+125*4]	; @126
   825                              <2> 	%define	_tmcinterp1	[iat+MY_LOAD_ADDRESS+126*4]	; @127
   826                              <2> 	%define	_tmcintersect	[iat+MY_LOAD_ADDRESS+127*4]	; @128
   827                              <2> 	%define	_tmcinv	[iat+MY_LOAD_ADDRESS+128*4]	; @129
   828                              <2> 	%define	_tmciscell	[iat+MY_LOAD_ADDRESS+129*4]	; @130
   829                              <2> 	%define	_tmcischar	[iat+MY_LOAD_ADDRESS+130*4]	; @131
   830                              <2> 	%define	_tmcisempty	[iat+MY_LOAD_ADDRESS+131*4]	; @132
   831                              <2> 	%define	_tmcisfield	[iat+MY_LOAD_ADDRESS+132*4]	; @133
   832                              <2> 	%define	_tmcisfinite	[iat+MY_LOAD_ADDRESS+133*4]	; @134
   833                              <2> 	%define	_tmcisnan	[iat+MY_LOAD_ADDRESS+134*4]	; @135
   834                              <2> 	%define	_tmcisnumeric	[iat+MY_LOAD_ADDRESS+135*4]	; @136
   835                              <2> 	%define	_tmcisreal	[iat+MY_LOAD_ADDRESS+136*4]	; @137
   836                              <2> 	%define	_tmcisscalar	[iat+MY_LOAD_ADDRESS+137*4]	; @138
   837                              <2> 	%define	_tmcisstruct	[iat+MY_LOAD_ADDRESS+138*4]	; @139
   838                              <2> 	%define	_tmcisvector	[iat+MY_LOAD_ADDRESS+139*4]	; @140
   839                              <2> 	%define	_tmclength	[iat+MY_LOAD_ADDRESS+140*4]	; @141
   840                              <2> 	%define	_tmclinspace	[iat+MY_LOAD_ADDRESS+141*4]	; @142
   841                              <2> 	%define	_tmcload	[iat+MY_LOAD_ADDRESS+142*4]	; @143
   842                              <2> 	%define	_tmclog	[iat+MY_LOAD_ADDRESS+143*4]	; @144
   843                              <2> 	%define	_tmclog10	[iat+MY_LOAD_ADDRESS+144*4]	; @145
   844                              <2> 	%define	_tmclogspace	[iat+MY_LOAD_ADDRESS+145*4]	; @146
   845                              <2> 	%define	_tmclower	[iat+MY_LOAD_ADDRESS+146*4]	; @147
   846                              <2> 	%define	_tmcmax	[iat+MY_LOAD_ADDRESS+147*4]	; @148
   847                              <2> 	%define	_tmcmin	[iat+MY_LOAD_ADDRESS+148*4]	; @149
   848                              <2> 	%define	_tmcmod	[iat+MY_LOAD_ADDRESS+149*4]	; @150
   849                              <2> 	%define	_tmcnargchk	[iat+MY_LOAD_ADDRESS+150*4]	; @151
   850                              <2> 	%define	_tmcnum2str	[iat+MY_LOAD_ADDRESS+151*4]	; @152
   851                              <2> 	%define	_tmcones	[iat+MY_LOAD_ADDRESS+152*4]	; @153
   852                              <2> 	%define	_tmcpause	[iat+MY_LOAD_ADDRESS+153*4]	; @154
   853                              <2> 	%define	_tmcplot	[iat+MY_LOAD_ADDRESS+154*4]	; @155
   854                              <2> 	%define	_tmcpolyval	[iat+MY_LOAD_ADDRESS+155*4]	; @156
   855                              <2> 	%define	_tmcprod	[iat+MY_LOAD_ADDRESS+156*4]	; @157
   856                              <2> 	%define	_tmcreal	[iat+MY_LOAD_ADDRESS+157*4]	; @158
   857                              <2> 	%define	_tmcrem	[iat+MY_LOAD_ADDRESS+158*4]	; @159
   858                              <2> 	%define	_tmcrmfield	[iat+MY_LOAD_ADDRESS+159*4]	; @160
   859                              <2> 	%define	_tmcroots	[iat+MY_LOAD_ADDRESS+160*4]	; @161
   860                              <2> 	%define	_tmcround	[iat+MY_LOAD_ADDRESS+161*4]	; @162
   861                              <2> 	%define	_tmcset	[iat+MY_LOAD_ADDRESS+162*4]	; @163
   862                              <2> 	%define	_tmcsetdiff	[iat+MY_LOAD_ADDRESS+163*4]	; @164
   863                              <2> 	%define	_tmcsign	[iat+MY_LOAD_ADDRESS+164*4]	; @165
   864                              <2> 	%define	_tmcsin	[iat+MY_LOAD_ADDRESS+165*4]	; @166
   865                              <2> 	%define	_tmcsize	[iat+MY_LOAD_ADDRESS+166*4]	; @167
   866                              <2> 	%define	_tmcsort	[iat+MY_LOAD_ADDRESS+167*4]	; @168
   867                              <2> 	%define	_tmcsprintf	[iat+MY_LOAD_ADDRESS+168*4]	; @169
   868                              <2> 	%define	_tmcsqrt	[iat+MY_LOAD_ADDRESS+169*4]	; @170
   869                              <2> 	%define	_tmcsqueeze	[iat+MY_LOAD_ADDRESS+170*4]	; @171
   870                              <2> 	%define	_tmcss2tf	[iat+MY_LOAD_ADDRESS+171*4]	; @172
   871                              <2> 	%define	_tmcssdata	[iat+MY_LOAD_ADDRESS+172*4]	; @173
   872                              <2> 	%define	_tmcstr2num	[iat+MY_LOAD_ADDRESS+173*4]	; @174
   873                              <2> 	%define	_tmcstrcmp	[iat+MY_LOAD_ADDRESS+174*4]	; @175
   874                              <2> 	%define	_tmcstruct	[iat+MY_LOAD_ADDRESS+175*4]	; @176
   875                              <2> 	%define	_tmcsubplot	[iat+MY_LOAD_ADDRESS+176*4]	; @177
   876                              <2> 	%define	_tmcsum	[iat+MY_LOAD_ADDRESS+177*4]	; @178
   877                              <2> 	%define	_tmcsvd	[iat+MY_LOAD_ADDRESS+178*4]	; @179
   878                              <2> 	%define	_tmctan	[iat+MY_LOAD_ADDRESS+179*4]	; @180
   879                              <2> 	%define	_tmctext	[iat+MY_LOAD_ADDRESS+180*4]	; @181
   880                              <2> 	%define	_tmctf	[iat+MY_LOAD_ADDRESS+181*4]	; @182
   881                              <2> 	%define	_tmctitle	[iat+MY_LOAD_ADDRESS+182*4]	; @183
   882                              <2> 	%define	_tmcunique	[iat+MY_LOAD_ADDRESS+183*4]	; @184
   883                              <2> 	%define	_tmcunwrap	[iat+MY_LOAD_ADDRESS+184*4]	; @185
   884                              <2> 	%define	_tmcwaitbar	[iat+MY_LOAD_ADDRESS+185*4]	; @186
   885                              <2> 	%define	_tmcxlabel	[iat+MY_LOAD_ADDRESS+186*4]	; @187
   886                              <2> 	%define	_tmcylabel	[iat+MY_LOAD_ADDRESS+187*4]	; @188
   887                              <2> 	%define	_tmczeros	[iat+MY_LOAD_ADDRESS+188*4]	; @189
   888                              <2> 	%define	_zfftf	[iat+MY_LOAD_ADDRESS+189*4]	; @190
   889                              <2> 	%define	_zffti	[iat+MY_LOAD_ADDRESS+190*4]	; @191
   890                              <2> 	%define	_zgeevx	[iat+MY_LOAD_ADDRESS+191*4]	; @192
   891                              <2> 	%define	_zgels	[iat+MY_LOAD_ADDRESS+192*4]	; @193
   892                              <2> 	%define	_zgeqrf	[iat+MY_LOAD_ADDRESS+193*4]	; @194
   893                              <2> 	%define	_zgesvd	[iat+MY_LOAD_ADDRESS+194*4]	; @195
   894                              <2> 	%define	_tmcconnectdebugger	[iat+MY_LOAD_ADDRESS+195*4]	; @196
   895                              <2> 	%define	_tmcsave	[iat+MY_LOAD_ADDRESS+196*4]	; @197
   896                              <2> 	%define	_tmcconv	[iat+MY_LOAD_ADDRESS+197*4]	; @198
   897                              <2> 	%define	_tmcnorm	[iat+MY_LOAD_ADDRESS+198*4]	; @199
   898                              <2> 	%define	_tmcisequal	[iat+MY_LOAD_ADDRESS+199*4]	; @200
   899                              <2> 	%define	_tmcqr		[iat+MY_LOAD_ADDRESS+200*4]	; @201
   900                              <2> 	%define	_tmceye	[iat+MY_LOAD_ADDRESS+201*4]	; @202
   901                              <2> 	%define	_tmcinf	[iat+MY_LOAD_ADDRESS+202*4]	; @203
   902                              <2> 	%define	_tmcNaN	[iat+MY_LOAD_ADDRESS+203*4]	; @204
   903                              <2> 	%define	_tmceps	[iat+MY_LOAD_ADDRESS+204*4]	; @205
   904                              <2> 	%define	_tmcpi	[iat+MY_LOAD_ADDRESS+205*4]	; @206
   905                              <2> 	%define	_tmcj	[iat+MY_LOAD_ADDRESS+206*4]	; @207
   906                              <2> 	%define	_tmci	[iat+MY_LOAD_ADDRESS+207*4]	; @208
   907                              <2> 	%define	_tmcsetfield	[iat+MY_LOAD_ADDRESS+208*4]	; @209
   908                              <2> 	%define	_tmclasterr	[iat+MY_LOAD_ADDRESS+209*4]	; @210
   909                              <2> 	%define	_tmcstrfind	[iat+MY_LOAD_ADDRESS+210*4]	; @211
   910                              <2> 	%define	_tmcCreateStringEmpty	[iat+MY_LOAD_ADDRESS+211*4]	; @212
   911                              <2> 	%define	__tmcGetField	[iat+MY_LOAD_ADDRESS+212*4]	; @213
   912                              <2> 	%define	__tmcCreateCellArray	[iat+MY_LOAD_ADDRESS+213*4]	; @214
   913                              <2> 	%define	__tmcGetString	[iat+MY_LOAD_ADDRESS+214*4]	; @215
   914                              <2> 	%define	__tmcGetFieldNumber	[iat+MY_LOAD_ADDRESS+215*4]	; @216
   915                              <2> 	%define	_tmcndims	[iat+MY_LOAD_ADDRESS+216*4]	; @217
   916                              <2> 	%define	_tmcdeal	[iat+MY_LOAD_ADDRESS+217*4]	; @218
   917                              <2> 	%define	_tmcdet	[iat+MY_LOAD_ADDRESS+218*4]	; @219
   918                              <2> 	%define	_tmcfigure	[iat+MY_LOAD_ADDRESS+219*4]	; @220
   919                              <2> 	%define	_tmcexist	[iat+MY_LOAD_ADDRESS+220*4]	; @221
   920                              <2> 	%define	_tmcnichols	[iat+MY_LOAD_ADDRESS+221*4]	; @222
   921                              <2> 	%define	_tmcgcf	[iat+MY_LOAD_ADDRESS+222*4]	; @223
   922                              <2> 	%define	_tmcishold	[iat+MY_LOAD_ADDRESS+223*4]	; @224
   923                              <2> 	%define	_tmcwarning	[iat+MY_LOAD_ADDRESS+224*4]	; @225
   924                              <2> 	%define	_tmcfields	[iat+MY_LOAD_ADDRESS+225*4]	; @226
   925                              <2> 	%define	_tmcismember	[iat+MY_LOAD_ADDRESS+226*4]	; @227
   926                              <2> 	%define	_tmcisa	[iat+MY_LOAD_ADDRESS+227*4]	; @228
   927                              <2> 	%define	_tmctfdata	[iat+MY_LOAD_ADDRESS+228*4]	; @229
   928                              <2> 	%define	_tmcfreqresp	[iat+MY_LOAD_ADDRESS+229*4]	; @230
   929                              <2> 	%define	_tmcfrdata	[iat+MY_LOAD_ADDRESS+230*4]	; @231
   930                              <2> 	%define	_tmcfrdqfd	[iat+MY_LOAD_ADDRESS+231*4]	; @232
   931                              <2> 	%define	_tmctf2ss	[iat+MY_LOAD_ADDRESS+232*4]	; @233
   932                              <2> 	%define	_tmcss	[iat+MY_LOAD_ADDRESS+233*4]	; @234
   933                              <2> 	%define	_tmczpkdata	[iat+MY_LOAD_ADDRESS+234*4]	; @235
   934                              <2> 	%define	_tmczpk	[iat+MY_LOAD_ADDRESS+235*4]	; @236
   935                              <2> 	%define	_tmcfrd	[iat+MY_LOAD_ADDRESS+236*4]	; @237
   936                              <2> 	%define	_tmcorderfields	[iat+MY_LOAD_ADDRESS+237*4]	; @238
   937                              <2> 	%define	_tmcnumel	[iat+MY_LOAD_ADDRESS+238*4]	; @239
   938                              <2> 	%define	_tmccell2mat	[iat+MY_LOAD_ADDRESS+239*4]	; @240
   939                              <2> 	%define	_tmccond	[iat+MY_LOAD_ADDRESS+240*4]	; @241
   940                              <2> 	%define	_tmcdbgPushStackVar		[iat+MY_LOAD_ADDRESS+241*4]	; @242
   941                              <2> 	%define	_tmcdbgPopStackVar		[iat+MY_LOAD_ADDRESS+242*4]	; @243
   942                              <2> 	%define	_tmcdbgOpenDebugger		[iat+MY_LOAD_ADDRESS+243*4]	; @244
   943                              <2> 	%define	_tmcdbgCloseDebugger		[iat+MY_LOAD_ADDRESS+244*4]	; @245
   944                              <2> 	%define	_tmcNumElem					[iat+MY_LOAD_ADDRESS+245*4]	; @246
   945                              <2> 	%define	_my_malloc_dbg				[iat+MY_LOAD_ADDRESS+246*4]	; @247
   946                              <2> 	%define	_hcode2string				[iat+MY_LOAD_ADDRESS+247*4]	; @248
   947                              <2> 	%define	__tmcClearRegister			[iat+MY_LOAD_ADDRESS+248*4]	; @249
   948                              <2> 	%define	_tmcdbgCommonMemConnect		[iat+MY_LOAD_ADDRESS+249*4]	; @250
   949                              <1> 
   950                              <1> ;	%define		__imp__CreateWindowExW@48	[iatUser32+MY_LOAD_ADDRESS+0*4]
   951                                  	%include "TestO.hash_init.dat.inc"
   952                              <1> _InitHashData:
   953 00001828 [40184000]          <1> 	DD	.HLC0+MY_LOAD_ADDRESS
   954 0000182C 00002921            <1> 	DD	0x21290000
   955 00001830 [47184000]          <1> 	DD	.HLC1+MY_LOAD_ADDRESS
   956 00001834 000059CF            <1> 	DD	0xcf590000
   957 00001838 [4E184000]          <1> 	DD	.HLC2+MY_LOAD_ADDRESS
   958 0000183C 0000B549            <1> 	DD	0x49b50000
   959 00001840 3F6572726F7200      <1> .HLC0	DB	'?error',0x0
   960 00001847 49715F61766500      <1> .HLC1	DB	'Iq_ave',0x0
   961 0000184E 54686574617300      <1> .HLC2	DB	'Thetas',0x0
   962                              <1> _InitHashDataLen:
   963 00001855 03000000            <1> 	DD	3
   964                                  	%include "TestO.globals.inc"
   965                              <1> _pRefHelper:
   966 00001859 00000000            <1> 	DD	0
   967                              <1> _pGetHelper:
   968 0000185D 00000000            <1> 	DD	0
   969                              <1> _VV:
   970 00001861 00000000            <1> 	DD	0
   971                              <1> _tmcInitGlobals:
   972                              <1> ;	VV=tmcNewMatrix();
   973 00001865 FF15[28104000]      <1> 	call	___tmcNewMatrix
   974 0000186B A3[61184000]        <1> 	mov [_VV+MY_LOAD_ADDRESS], eax
   975 00001870 C3                  <1> 	ret
   976                              <1> 
   977                              <1> _tmcFreeGlobals:
   978                              <1> ;	tmcFreeLocalVar(VV);
   979 00001871 A1[61184000]        <1> 	mov	eax,[_VV+MY_LOAD_ADDRESS]
   980 00001876 50                  <1> 	push	eax
   981 00001877 FF15[C8104000]      <1> 	call	_tmcFreeLocalVar
   982 0000187D 81C404000000        <1> 	add	esp, 4
   983 00001883 C3                  <1> 	ret
   984                              <1> 
   985                                  	%define MAIN_ENTRY	_tmcTestO
   986                                  	%include "myinc.inc"
   987                              <1> 	%define	FINALLY
   988                              <1> 	%define TRY
   989                              <1> 	%define PTR
   990                              <1> 	%define DWORD
   991                              <1> 	%define ENDFINALLY
   992                              <1> 
   993                              <1> 
   994                              <1> ;	%include "createwin.inc"
   995                              <1> 
   996                              <1> 
   997                              <1> _Init_funcs_table:
   998 00001884 [28184000]          <1>     DD _InitHashData+MY_LOAD_ADDRESS
   999 00001888 [55184000]          <1> 	DD	_InitHashDataLen+MY_LOAD_ADDRESS
  1000 0000188C [65184000]          <1> 	DD	_tmcInitGlobals+MY_LOAD_ADDRESS
  1001 00001890 [71184000]          <1> 	DD	_tmcFreeGlobals+MY_LOAD_ADDRESS
  1002 00001894 [59184000]          <1> 	DD	_pRefHelper+MY_LOAD_ADDRESS
  1003 00001898 [5D184000]          <1> 	DD	_pGetHelper+MY_LOAD_ADDRESS
  1004                              <1> 
  1005                              <1> 
  1006                              <1> _myentry:
  1007                              <1> 
  1008                              <1> 
  1009                              <1> 
  1010                              <1> 
  1011                              <1> 
  1012 0000189C 55                  <1> 	push ebp
  1013 0000189D 89E5                <1> 	mov ebp,esp
  1014 0000189F 81ECD0070000        <1> 	sub esp,2000
  1015 000018A5 53                  <1> 	push ebx
  1016 000018A6 56                  <1> 	push esi
  1017 000018A7 57                  <1> 	push edi
  1018 000018A8 8DBD30F8FFFF        <1> 	lea	edi,DWORD PTR [ebp-2000]
  1019                              <1> 
  1020                              <1> 	;call	_debug
  1021                              <1> 
  1022 000018AE 68[84184000]        <1> 	push    _Init_funcs_table+MY_LOAD_ADDRESS
  1023 000018B3 FF15[34134000]      <1> 	call	_tmcconnectdebugger
  1024 000018B9 81C404000000        <1> 	add	esp,4
  1025                              <1> 
  1026 000018BF 68[84184000]        <1> 	push    _Init_funcs_table+MY_LOAD_ADDRESS
  1027 000018C4 FF15[F4104000]      <1> 	call	_tmcInitLib
  1028 000018CA 81C404000000        <1> 	add	esp,4
  1029                              <1> 
  1030                              <1> 
  1031                              <1> ;//function [ztmc_,y_]=TestM(a_,b_)
  1032                              <1> 
  1033                              <1> 	;void tmcTestM(int nargout, int nargin,tmsMatrix *ztmc_,tmsMatrix *y_
  1034                              <1> 	;,tmsMatrix *a_,tmsMatrix *b_	;) {
  1035                              <1> 
  1036                              <1> 
  1037                              <1> 
  1038                              <1> 
  1039 000018D0 6800000000          <1> 	push	0
  1040 000018D5 6800000000          <1> 	push	0
  1041 000018DA 6800000000          <1> 	push	0
  1042 000018DF 6800000000          <1> 	push	0
  1043 000018E4 684D000000          <1> 	push	dword 77
  1044 000018E9 6857000000          <1> 	push	dword 87
  1045 000018EE E819000000          <1> 	call	MAIN_ENTRY
  1046 000018F3 81C418000000        <1> 	add	esp,(4*6)
  1047                              <1> 
  1048 000018F9 FF15[C4104000]      <1> 	call	_tmcFreeLib
  1049                              <1> 
  1050                              <1> 
  1051 000018FF 5F                  <1> 	pop edi
  1052 00001900 5E                  <1> 	pop esi
  1053 00001901 5B                  <1> 	pop ebx
  1054 00001902 81C4D0070000        <1> 	add esp,2000
  1055 00001908 89EC                <1> 	mov esp,ebp
  1056 0000190A 5D                  <1> 	pop ebp
  1057 0000190B C3                  <1> 	ret
  1058                              <1> 
  1059                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1060                              <1> ;_tmcfigure:
  1061                              <1> ;	ret
  1062                                  	 ;File: .\OutS3\TestO.c generated by TMC Converter(C)2009-2013,Israel
  1063                                  	;// % Lines 1--4:
  1064                                  	;//function [unusedy,unusedm]=TestO(x,n)
  1065                                  
  1066                                  	;//global VV
  1067                                  
  1068                                  	;//
  1069                                  
  1070                                  	;//p = [1 1 200 1 1 1 1 1 1 1 1 10 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ];
  1071                                  
  1072                                  
  1073                                  _tmcTestO:
  1074 0000190C 55                      	push ebp
  1075 0000190D 89E5                    	mov ebp,esp
  1076 0000190F 81EC00020000            	sub esp,512
  1077 00001915 53                      	push ebx
  1078 00001916 56                      	push esi
  1079 00001917 57                      	push edi
  1080 00001918 8DBD00FEFFFF            	lea	edi,DWORD PTR [ebp-512]
  1081                                  	;void tmcTestO(int nargout, int nargin,tmsMatrix *unusedy,tmsMatrix *unusedm
  1082                                  	;,tmsMatrix *x__input__tmc,tmsMatrix *n	;) {
  1083                                  	;tmsMatrix **reg=tmcCreateRegFrame(96);
  1084 0000191E 6860000000              	push	96
  1085 00001923 FF15[A0104000]          	call _tmcCreateRegFrame
  1086 00001929 81C404000000            	add	esp,4
  1087 0000192F 8945F8                  	mov	DWORD PTR [ebp-8],eax
  1088                                  	;tmsMatrix *x=tmcNewMatrix();
  1089 00001932 FF15[28104000]          	call ___tmcNewMatrix
  1090 00001938 8945F0                  	mov	DWORD PTR [ebp-16],eax
  1091                                  	;tmsMatrix *p=tmcNewMatrix();
  1092 0000193B FF15[28104000]          	call ___tmcNewMatrix
  1093 00001941 8945EC                  	mov	DWORD PTR [ebp-20],eax
  1094                                  	;tmsMatrix *y=tmcNewMatrix();
  1095 00001944 FF15[28104000]          	call ___tmcNewMatrix
  1096 0000194A 8945E8                  	mov	DWORD PTR [ebp-24],eax
  1097                                  	;tmsMatrix *y_a=tmcNewMatrix();
  1098 0000194D FF15[28104000]          	call ___tmcNewMatrix
  1099 00001953 8945E4                  	mov	DWORD PTR [ebp-28],eax
  1100                                  	;tmsMatrix *I=tmcNewMatrix();
  1101 00001956 FF15[28104000]          	call ___tmcNewMatrix
  1102 0000195C 8945E0                  	mov	DWORD PTR [ebp-32],eax
  1103                                  	;tmsMatrix *y_r=tmcNewMatrix();
  1104 0000195F FF15[28104000]          	call ___tmcNewMatrix
  1105 00001965 8945DC                  	mov	DWORD PTR [ebp-36],eax
  1106                                  	;tmsMatrix *y_i=tmcNewMatrix();
  1107 00001968 FF15[28104000]          	call ___tmcNewMatrix
  1108 0000196E 8945D8                  	mov	DWORD PTR [ebp-40],eax
  1109                                  	;tmsMatrix *d=tmcNewMatrix();
  1110 00001971 FF15[28104000]          	call ___tmcNewMatrix
  1111 00001977 8945D4                  	mov	DWORD PTR [ebp-44],eax
  1112                                  	;tmsMatrix *tht=tmcNewMatrix();
  1113 0000197A FF15[28104000]          	call ___tmcNewMatrix
  1114 00001980 8945D0                  	mov	DWORD PTR [ebp-48],eax
  1115                                  	;tmsMatrix *AbsOffsetCorr=tmcNewMatrix();
  1116 00001983 FF15[28104000]          	call ___tmcNewMatrix
  1117 00001989 8945CC                  	mov	DWORD PTR [ebp-52],eax
  1118                                  	;tmsMatrix *AdvUsecCorr=tmcNewMatrix();
  1119 0000198C FF15[28104000]          	call ___tmcNewMatrix
  1120 00001992 8945C8                  	mov	DWORD PTR [ebp-56],eax
  1121                                  	;tmsMatrix *str=tmcNewMatrix();
  1122 00001995 FF15[28104000]          	call ___tmcNewMatrix
  1123 0000199B 8945C4                  	mov	DWORD PTR [ebp-60],eax
  1124                                  
  1125                                  	;tmcCopyMat(x,x__input__tmc);
  1126 0000199E 8B4518                  	mov	eax, DWORD PTR [ebp+24]
  1127 000019A1 50                      	push	eax
  1128 000019A2 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  1129 000019A5 50                      	push	eax
  1130 000019A6 FF15[88104000]          	call _tmcCopyMat
  1131 000019AC 81C408000000            	add	esp,8
  1132                                  
  1133                                  	;TRY
  1134                                  	;
  1135                                  	;//statement here,line 4
  1136                                  
  1137                                  	;tmcScalar(reg[1],1.000000000000000e+000);
  1138 000019B2 680000F03F              	push	0x3ff00000
  1139 000019B7 6800000000              	push	0x0
  1140 000019BC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1141 000019BF 8B4804                  	mov	ecx, DWORD PTR [eax+4]
  1142 000019C2 51                      	push	ecx
  1143 000019C3 FF15[44114000]          	call _tmcScalar
  1144 000019C9 81C40C000000            	add	esp,12
  1145                                  
  1146                                  	;tmcScalar(reg[2],1.000000000000000e+000);
  1147 000019CF 680000F03F              	push	0x3ff00000
  1148 000019D4 6800000000              	push	0x0
  1149 000019D9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1150 000019DC 8B4808                  	mov	ecx, DWORD PTR [eax+8]
  1151 000019DF 51                      	push	ecx
  1152 000019E0 FF15[44114000]          	call _tmcScalar
  1153 000019E6 81C40C000000            	add	esp,12
  1154                                  
  1155                                  	;tmcScalar(reg[3],2.000000000000000e+002);
  1156 000019EC 6800006940              	push	0x40690000
  1157 000019F1 6800000000              	push	0x0
  1158 000019F6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1159 000019F9 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  1160 000019FC 51                      	push	ecx
  1161 000019FD FF15[44114000]          	call _tmcScalar
  1162 00001A03 81C40C000000            	add	esp,12
  1163                                  
  1164                                  	;tmcScalar(reg[4],1.000000000000000e+000);
  1165 00001A09 680000F03F              	push	0x3ff00000
  1166 00001A0E 6800000000              	push	0x0
  1167 00001A13 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1168 00001A16 8B4810                  	mov	ecx, DWORD PTR [eax+16]
  1169 00001A19 51                      	push	ecx
  1170 00001A1A FF15[44114000]          	call _tmcScalar
  1171 00001A20 81C40C000000            	add	esp,12
  1172                                  
  1173                                  	;tmcScalar(reg[5],1.000000000000000e+000);
  1174 00001A26 680000F03F              	push	0x3ff00000
  1175 00001A2B 6800000000              	push	0x0
  1176 00001A30 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1177 00001A33 8B4814                  	mov	ecx, DWORD PTR [eax+20]
  1178 00001A36 51                      	push	ecx
  1179 00001A37 FF15[44114000]          	call _tmcScalar
  1180 00001A3D 81C40C000000            	add	esp,12
  1181                                  
  1182                                  	;tmcScalar(reg[6],1.000000000000000e+000);
  1183 00001A43 680000F03F              	push	0x3ff00000
  1184 00001A48 6800000000              	push	0x0
  1185 00001A4D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1186 00001A50 8B4818                  	mov	ecx, DWORD PTR [eax+24]
  1187 00001A53 51                      	push	ecx
  1188 00001A54 FF15[44114000]          	call _tmcScalar
  1189 00001A5A 81C40C000000            	add	esp,12
  1190                                  
  1191                                  	;tmcScalar(reg[7],1.000000000000000e+000);
  1192 00001A60 680000F03F              	push	0x3ff00000
  1193 00001A65 6800000000              	push	0x0
  1194 00001A6A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1195 00001A6D 8B481C                  	mov	ecx, DWORD PTR [eax+28]
  1196 00001A70 51                      	push	ecx
  1197 00001A71 FF15[44114000]          	call _tmcScalar
  1198 00001A77 81C40C000000            	add	esp,12
  1199                                  
  1200                                  	;tmcScalar(reg[8],1.000000000000000e+000);
  1201 00001A7D 680000F03F              	push	0x3ff00000
  1202 00001A82 6800000000              	push	0x0
  1203 00001A87 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1204 00001A8A 8B4820                  	mov	ecx, DWORD PTR [eax+32]
  1205 00001A8D 51                      	push	ecx
  1206 00001A8E FF15[44114000]          	call _tmcScalar
  1207 00001A94 81C40C000000            	add	esp,12
  1208                                  
  1209                                  	;tmcScalar(reg[9],1.000000000000000e+000);
  1210 00001A9A 680000F03F              	push	0x3ff00000
  1211 00001A9F 6800000000              	push	0x0
  1212 00001AA4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1213 00001AA7 8B4824                  	mov	ecx, DWORD PTR [eax+36]
  1214 00001AAA 51                      	push	ecx
  1215 00001AAB FF15[44114000]          	call _tmcScalar
  1216 00001AB1 81C40C000000            	add	esp,12
  1217                                  
  1218                                  	;tmcScalar(reg[10],1.000000000000000e+000);
  1219 00001AB7 680000F03F              	push	0x3ff00000
  1220 00001ABC 6800000000              	push	0x0
  1221 00001AC1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1222 00001AC4 8B4828                  	mov	ecx, DWORD PTR [eax+40]
  1223 00001AC7 51                      	push	ecx
  1224 00001AC8 FF15[44114000]          	call _tmcScalar
  1225 00001ACE 81C40C000000            	add	esp,12
  1226                                  
  1227                                  	;tmcScalar(reg[11],1.000000000000000e+000);
  1228 00001AD4 680000F03F              	push	0x3ff00000
  1229 00001AD9 6800000000              	push	0x0
  1230 00001ADE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1231 00001AE1 8B482C                  	mov	ecx, DWORD PTR [eax+44]
  1232 00001AE4 51                      	push	ecx
  1233 00001AE5 FF15[44114000]          	call _tmcScalar
  1234 00001AEB 81C40C000000            	add	esp,12
  1235                                  
  1236                                  	;tmcScalar(reg[12],1.000000000000000e+001);
  1237 00001AF1 6800002440              	push	0x40240000
  1238 00001AF6 6800000000              	push	0x0
  1239 00001AFB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1240 00001AFE 8B4830                  	mov	ecx, DWORD PTR [eax+48]
  1241 00001B01 51                      	push	ecx
  1242 00001B02 FF15[44114000]          	call _tmcScalar
  1243 00001B08 81C40C000000            	add	esp,12
  1244                                  
  1245                                  	;tmcScalar(reg[13],1.000000000000000e+000);
  1246 00001B0E 680000F03F              	push	0x3ff00000
  1247 00001B13 6800000000              	push	0x0
  1248 00001B18 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1249 00001B1B 8B4834                  	mov	ecx, DWORD PTR [eax+52]
  1250 00001B1E 51                      	push	ecx
  1251 00001B1F FF15[44114000]          	call _tmcScalar
  1252 00001B25 81C40C000000            	add	esp,12
  1253                                  
  1254                                  	;tmcScalar(reg[14],1.000000000000000e+000);
  1255 00001B2B 680000F03F              	push	0x3ff00000
  1256 00001B30 6800000000              	push	0x0
  1257 00001B35 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1258 00001B38 8B4838                  	mov	ecx, DWORD PTR [eax+56]
  1259 00001B3B 51                      	push	ecx
  1260 00001B3C FF15[44114000]          	call _tmcScalar
  1261 00001B42 81C40C000000            	add	esp,12
  1262                                  
  1263                                  	;tmcScalar(reg[15],1.000000000000000e+000);
  1264 00001B48 680000F03F              	push	0x3ff00000
  1265 00001B4D 6800000000              	push	0x0
  1266 00001B52 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1267 00001B55 8B483C                  	mov	ecx, DWORD PTR [eax+60]
  1268 00001B58 51                      	push	ecx
  1269 00001B59 FF15[44114000]          	call _tmcScalar
  1270 00001B5F 81C40C000000            	add	esp,12
  1271                                  
  1272                                  	;tmcScalar(reg[16],1.000000000000000e+000);
  1273 00001B65 680000F03F              	push	0x3ff00000
  1274 00001B6A 6800000000              	push	0x0
  1275 00001B6F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1276 00001B72 8B4840                  	mov	ecx, DWORD PTR [eax+64]
  1277 00001B75 51                      	push	ecx
  1278 00001B76 FF15[44114000]          	call _tmcScalar
  1279 00001B7C 81C40C000000            	add	esp,12
  1280                                  
  1281                                  	;tmcScalar(reg[17],1.000000000000000e+000);
  1282 00001B82 680000F03F              	push	0x3ff00000
  1283 00001B87 6800000000              	push	0x0
  1284 00001B8C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1285 00001B8F 8B4844                  	mov	ecx, DWORD PTR [eax+68]
  1286 00001B92 51                      	push	ecx
  1287 00001B93 FF15[44114000]          	call _tmcScalar
  1288 00001B99 81C40C000000            	add	esp,12
  1289                                  
  1290                                  	;tmcScalar(reg[18],1.000000000000000e+000);
  1291 00001B9F 680000F03F              	push	0x3ff00000
  1292 00001BA4 6800000000              	push	0x0
  1293 00001BA9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1294 00001BAC 8B4848                  	mov	ecx, DWORD PTR [eax+72]
  1295 00001BAF 51                      	push	ecx
  1296 00001BB0 FF15[44114000]          	call _tmcScalar
  1297 00001BB6 81C40C000000            	add	esp,12
  1298                                  
  1299                                  	;tmcScalar(reg[19],1.000000000000000e+000);
  1300 00001BBC 680000F03F              	push	0x3ff00000
  1301 00001BC1 6800000000              	push	0x0
  1302 00001BC6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1303 00001BC9 8B484C                  	mov	ecx, DWORD PTR [eax+76]
  1304 00001BCC 51                      	push	ecx
  1305 00001BCD FF15[44114000]          	call _tmcScalar
  1306 00001BD3 81C40C000000            	add	esp,12
  1307                                  
  1308                                  	;tmcScalar(reg[20],1.000000000000000e+000);
  1309 00001BD9 680000F03F              	push	0x3ff00000
  1310 00001BDE 6800000000              	push	0x0
  1311 00001BE3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1312 00001BE6 8B4850                  	mov	ecx, DWORD PTR [eax+80]
  1313 00001BE9 51                      	push	ecx
  1314 00001BEA FF15[44114000]          	call _tmcScalar
  1315 00001BF0 81C40C000000            	add	esp,12
  1316                                  
  1317                                  	;tmcScalar(reg[21],1.000000000000000e+000);
  1318 00001BF6 680000F03F              	push	0x3ff00000
  1319 00001BFB 6800000000              	push	0x0
  1320 00001C00 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1321 00001C03 8B4854                  	mov	ecx, DWORD PTR [eax+84]
  1322 00001C06 51                      	push	ecx
  1323 00001C07 FF15[44114000]          	call _tmcScalar
  1324 00001C0D 81C40C000000            	add	esp,12
  1325                                  
  1326                                  	;tmcScalar(reg[22],1.000000000000000e+000);
  1327 00001C13 680000F03F              	push	0x3ff00000
  1328 00001C18 6800000000              	push	0x0
  1329 00001C1D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1330 00001C20 8B4858                  	mov	ecx, DWORD PTR [eax+88]
  1331 00001C23 51                      	push	ecx
  1332 00001C24 FF15[44114000]          	call _tmcScalar
  1333 00001C2A 81C40C000000            	add	esp,12
  1334                                  
  1335                                  	;tmcScalar(reg[23],1.000000000000000e+000);
  1336 00001C30 680000F03F              	push	0x3ff00000
  1337 00001C35 6800000000              	push	0x0
  1338 00001C3A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1339 00001C3D 8B485C                  	mov	ecx, DWORD PTR [eax+92]
  1340 00001C40 51                      	push	ecx
  1341 00001C41 FF15[44114000]          	call _tmcScalar
  1342 00001C47 81C40C000000            	add	esp,12
  1343                                  
  1344                                  	;tmcScalar(reg[24],1.000000000000000e+000);
  1345 00001C4D 680000F03F              	push	0x3ff00000
  1346 00001C52 6800000000              	push	0x0
  1347 00001C57 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1348 00001C5A 8B4860                  	mov	ecx, DWORD PTR [eax+96]
  1349 00001C5D 51                      	push	ecx
  1350 00001C5E FF15[44114000]          	call _tmcScalar
  1351 00001C64 81C40C000000            	add	esp,12
  1352                                  
  1353                                  	;tmcScalar(reg[25],1.000000000000000e+000);
  1354 00001C6A 680000F03F              	push	0x3ff00000
  1355 00001C6F 6800000000              	push	0x0
  1356 00001C74 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1357 00001C77 8B4864                  	mov	ecx, DWORD PTR [eax+100]
  1358 00001C7A 51                      	push	ecx
  1359 00001C7B FF15[44114000]          	call _tmcScalar
  1360 00001C81 81C40C000000            	add	esp,12
  1361                                  
  1362                                  	;tmcScalar(reg[26],1.000000000000000e+000);
  1363 00001C87 680000F03F              	push	0x3ff00000
  1364 00001C8C 6800000000              	push	0x0
  1365 00001C91 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1366 00001C94 8B4868                  	mov	ecx, DWORD PTR [eax+104]
  1367 00001C97 51                      	push	ecx
  1368 00001C98 FF15[44114000]          	call _tmcScalar
  1369 00001C9E 81C40C000000            	add	esp,12
  1370                                  
  1371                                  ;tmcCollectColumns(reg[27],26,reg[1],reg[2],reg[3],reg[4],reg[5],reg[6],reg[7],reg[8]
  1372                                  ;,reg[9],reg[10],reg[11],reg[12],reg[13],reg[14],reg[15],reg[16]
  1373                                  ;,reg[17],reg[18],reg[19],reg[20],reg[21],reg[22],reg[23],reg[24]
  1374                                  ;,reg[25],reg[26]);
  1375 00001CA4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1376 00001CA7 8B4868                  	mov	ecx, DWORD PTR [eax+104]
  1377 00001CAA 51                      	push	ecx
  1378 00001CAB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1379 00001CAE 8B4864                  	mov	ecx, DWORD PTR [eax+100]
  1380 00001CB1 51                      	push	ecx
  1381 00001CB2 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1382 00001CB5 8B4860                  	mov	ecx, DWORD PTR [eax+96]
  1383 00001CB8 51                      	push	ecx
  1384 00001CB9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1385 00001CBC 8B485C                  	mov	ecx, DWORD PTR [eax+92]
  1386 00001CBF 51                      	push	ecx
  1387 00001CC0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1388 00001CC3 8B4858                  	mov	ecx, DWORD PTR [eax+88]
  1389 00001CC6 51                      	push	ecx
  1390 00001CC7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1391 00001CCA 8B4854                  	mov	ecx, DWORD PTR [eax+84]
  1392 00001CCD 51                      	push	ecx
  1393 00001CCE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1394 00001CD1 8B4850                  	mov	ecx, DWORD PTR [eax+80]
  1395 00001CD4 51                      	push	ecx
  1396 00001CD5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1397 00001CD8 8B484C                  	mov	ecx, DWORD PTR [eax+76]
  1398 00001CDB 51                      	push	ecx
  1399 00001CDC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1400 00001CDF 8B4848                  	mov	ecx, DWORD PTR [eax+72]
  1401 00001CE2 51                      	push	ecx
  1402 00001CE3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1403 00001CE6 8B4844                  	mov	ecx, DWORD PTR [eax+68]
  1404 00001CE9 51                      	push	ecx
  1405 00001CEA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1406 00001CED 8B4840                  	mov	ecx, DWORD PTR [eax+64]
  1407 00001CF0 51                      	push	ecx
  1408 00001CF1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1409 00001CF4 8B483C                  	mov	ecx, DWORD PTR [eax+60]
  1410 00001CF7 51                      	push	ecx
  1411 00001CF8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1412 00001CFB 8B4838                  	mov	ecx, DWORD PTR [eax+56]
  1413 00001CFE 51                      	push	ecx
  1414 00001CFF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1415 00001D02 8B4834                  	mov	ecx, DWORD PTR [eax+52]
  1416 00001D05 51                      	push	ecx
  1417 00001D06 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1418 00001D09 8B4830                  	mov	ecx, DWORD PTR [eax+48]
  1419 00001D0C 51                      	push	ecx
  1420 00001D0D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1421 00001D10 8B482C                  	mov	ecx, DWORD PTR [eax+44]
  1422 00001D13 51                      	push	ecx
  1423 00001D14 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1424 00001D17 8B4828                  	mov	ecx, DWORD PTR [eax+40]
  1425 00001D1A 51                      	push	ecx
  1426 00001D1B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1427 00001D1E 8B4824                  	mov	ecx, DWORD PTR [eax+36]
  1428 00001D21 51                      	push	ecx
  1429 00001D22 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1430 00001D25 8B4820                  	mov	ecx, DWORD PTR [eax+32]
  1431 00001D28 51                      	push	ecx
  1432 00001D29 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1433 00001D2C 8B481C                  	mov	ecx, DWORD PTR [eax+28]
  1434 00001D2F 51                      	push	ecx
  1435 00001D30 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1436 00001D33 8B4818                  	mov	ecx, DWORD PTR [eax+24]
  1437 00001D36 51                      	push	ecx
  1438 00001D37 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1439 00001D3A 8B4814                  	mov	ecx, DWORD PTR [eax+20]
  1440 00001D3D 51                      	push	ecx
  1441 00001D3E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1442 00001D41 8B4810                  	mov	ecx, DWORD PTR [eax+16]
  1443 00001D44 51                      	push	ecx
  1444 00001D45 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1445 00001D48 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  1446 00001D4B 51                      	push	ecx
  1447 00001D4C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1448 00001D4F 8B4808                  	mov	ecx, DWORD PTR [eax+8]
  1449 00001D52 51                      	push	ecx
  1450 00001D53 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1451 00001D56 8B4804                  	mov	ecx, DWORD PTR [eax+4]
  1452 00001D59 51                      	push	ecx
  1453 00001D5A 681A000000              	push	26
  1454 00001D5F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1455 00001D62 8B486C                  	mov	ecx, DWORD PTR [eax+108]
  1456 00001D65 51                      	push	ecx
  1457 00001D66 FF15[7C104000]          	call _tmcCollectColumns
  1458 00001D6C 81C470000000            	add	esp,112
  1459                                  
  1460                                  ;tmcCollectRows(reg[28],1,reg[27]);
  1461 00001D72 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1462 00001D75 8B486C                  	mov	ecx, DWORD PTR [eax+108]
  1463 00001D78 51                      	push	ecx
  1464 00001D79 6801000000              	push	1
  1465 00001D7E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1466 00001D81 8B4870                  	mov	ecx, DWORD PTR [eax+112]
  1467 00001D84 51                      	push	ecx
  1468 00001D85 FF15[80104000]          	call _tmcCollectRows
  1469 00001D8B 81C40C000000            	add	esp,12
  1470                                  
  1471                                  
  1472                                  
  1473                                  	;tmcAssign(p,reg[28]);
  1474 00001D91 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1475 00001D94 8B4870                  	mov	ecx, DWORD PTR [eax+112]
  1476 00001D97 51                      	push	ecx
  1477 00001D98 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  1478 00001D9B 50                      	push	eax
  1479 00001D9C FF15[68104000]          	call _tmcAssign
  1480 00001DA2 81C408000000            	add	esp,8
  1481                                  
  1482                                  	;//statement here,line 4
  1483                                  
  1484                                  	;// % Lines 5--5:
  1485                                  	;//y = roots(p);
  1486                                  
  1487                                  
  1488                                  
  1489                                  	;//CALL function
  1490                                  	;tmcReallocRegister(reg[31]);
  1491                                  	;tmcroots(1,1, reg[31], p);
  1492 00001DA8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1493 00001DAB 8B487C                  	mov	ecx, DWORD PTR [eax+124]
  1494 00001DAE 51                      	push	ecx
  1495 00001DAF FF15[40114000]          	call _tmcReallocRegister
  1496 00001DB5 81C404000000            	add	esp,4
  1497 00001DBB 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  1498 00001DBE 50                      	push	eax
  1499 00001DBF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1500 00001DC2 8B487C                  	mov	ecx, DWORD PTR [eax+124]
  1501 00001DC5 51                      	push	ecx
  1502 00001DC6 6801000000              	push	1
  1503 00001DCB 6801000000              	push	1
  1504 00001DD0 FF15[A8124000]          	call _tmcroots
  1505 00001DD6 81C410000000            	add	esp,16
  1506                                  
  1507                                  
  1508                                  
  1509                                  	;tmcAssign(y,reg[31]);
  1510 00001DDC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1511 00001DDF 8B487C                  	mov	ecx, DWORD PTR [eax+124]
  1512 00001DE2 51                      	push	ecx
  1513 00001DE3 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1514 00001DE6 50                      	push	eax
  1515 00001DE7 FF15[68104000]          	call _tmcAssign
  1516 00001DED 81C408000000            	add	esp,8
  1517                                  
  1518                                  	;//statement here,line 5
  1519                                  
  1520                                  	;// % Lines 6--6:
  1521                                  	;//y_a = angle(y);
  1522                                  
  1523                                  
  1524                                  
  1525                                  	;//CALL function
  1526                                  	;tmcReallocRegister(reg[34]);
  1527                                  	;tmcangle(1,1, reg[34], y);
  1528 00001DF3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1529 00001DF6 8B8888000000            	mov	ecx, DWORD PTR [eax+136]
  1530 00001DFC 51                      	push	ecx
  1531 00001DFD FF15[40114000]          	call _tmcReallocRegister
  1532 00001E03 81C404000000            	add	esp,4
  1533 00001E09 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1534 00001E0C 50                      	push	eax
  1535 00001E0D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1536 00001E10 8B8888000000            	mov	ecx, DWORD PTR [eax+136]
  1537 00001E16 51                      	push	ecx
  1538 00001E17 6801000000              	push	1
  1539 00001E1C 6801000000              	push	1
  1540 00001E21 FF15[64114000]          	call _tmcangle
  1541 00001E27 81C410000000            	add	esp,16
  1542                                  
  1543                                  
  1544                                  
  1545                                  	;tmcAssign(y_a,reg[34]);
  1546 00001E2D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1547 00001E30 8B8888000000            	mov	ecx, DWORD PTR [eax+136]
  1548 00001E36 51                      	push	ecx
  1549 00001E37 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  1550 00001E3A 50                      	push	eax
  1551 00001E3B FF15[68104000]          	call _tmcAssign
  1552 00001E41 81C408000000            	add	esp,8
  1553                                  
  1554                                  	;//statement here,line 6
  1555                                  
  1556                                  	;// % Lines 7--7:
  1557                                  	;//[y_a,I]=sort(y_a);
  1558                                  
  1559                                  
  1560                                  
  1561                                  	;//CALL function
  1562                                  	;tmcReallocRegister(reg[37]);
  1563                                  	;tmcReallocRegister(reg[38]);
  1564                                  	;tmcsort(2,1, reg[37], reg[38], y_a,NULL);
  1565 00001E47 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1566 00001E4A 8B8894000000            	mov	ecx, DWORD PTR [eax+148]
  1567 00001E50 51                      	push	ecx
  1568 00001E51 FF15[40114000]          	call _tmcReallocRegister
  1569 00001E57 81C404000000            	add	esp,4
  1570 00001E5D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1571 00001E60 8B8898000000            	mov	ecx, DWORD PTR [eax+152]
  1572 00001E66 51                      	push	ecx
  1573 00001E67 FF15[40114000]          	call _tmcReallocRegister
  1574 00001E6D 81C404000000            	add	esp,4
  1575 00001E73 6800000000              	push	0
  1576 00001E78 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  1577 00001E7B 50                      	push	eax
  1578 00001E7C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1579 00001E7F 8B8898000000            	mov	ecx, DWORD PTR [eax+152]
  1580 00001E85 51                      	push	ecx
  1581 00001E86 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1582 00001E89 8B8894000000            	mov	ecx, DWORD PTR [eax+148]
  1583 00001E8F 51                      	push	ecx
  1584 00001E90 6801000000              	push	1
  1585 00001E95 6802000000              	push	2
  1586 00001E9A FF15[C4124000]          	call _tmcsort
  1587 00001EA0 81C418000000            	add	esp,24
  1588                                  
  1589                                  
  1590                                  
  1591                                  	;tmcAssign(y_a,reg[37]);
  1592 00001EA6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1593 00001EA9 8B8894000000            	mov	ecx, DWORD PTR [eax+148]
  1594 00001EAF 51                      	push	ecx
  1595 00001EB0 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  1596 00001EB3 50                      	push	eax
  1597 00001EB4 FF15[68104000]          	call _tmcAssign
  1598 00001EBA 81C408000000            	add	esp,8
  1599                                  
  1600                                  
  1601                                  
  1602                                  	;tmcAssign(I,reg[38]);
  1603 00001EC0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1604 00001EC3 8B8898000000            	mov	ecx, DWORD PTR [eax+152]
  1605 00001EC9 51                      	push	ecx
  1606 00001ECA 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  1607 00001ECD 50                      	push	eax
  1608 00001ECE FF15[68104000]          	call _tmcAssign
  1609 00001ED4 81C408000000            	add	esp,8
  1610                                  
  1611                                  	;//statement here,line 7
  1612                                  
  1613                                  	;// % Lines 8--8:
  1614                                  	;//y=y(I);
  1615                                  
  1616                                  
  1617                                  
  1618                                  
  1619                                  
  1620                                  	;tmcGetByIndex(reg[43],y,1,I);
  1621 00001EDA 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  1622 00001EDD 50                      	push	eax
  1623 00001EDE 6801000000              	push	1
  1624 00001EE3 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1625 00001EE6 50                      	push	eax
  1626 00001EE7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1627 00001EEA 8B88AC000000            	mov	ecx, DWORD PTR [eax+172]
  1628 00001EF0 51                      	push	ecx
  1629 00001EF1 FF15[D8104000]          	call _tmcGetByIndex
  1630 00001EF7 81C410000000            	add	esp,16
  1631                                  
  1632                                  
  1633                                  
  1634                                  	;tmcAssign(y,reg[43]);
  1635 00001EFD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1636 00001F00 8B88AC000000            	mov	ecx, DWORD PTR [eax+172]
  1637 00001F06 51                      	push	ecx
  1638 00001F07 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1639 00001F0A 50                      	push	eax
  1640 00001F0B FF15[68104000]          	call _tmcAssign
  1641 00001F11 81C408000000            	add	esp,8
  1642                                  
  1643                                  	;//statement here,line 8
  1644                                  
  1645                                  	;// % Lines 9--10:
  1646                                  	;//
  1647                                  
  1648                                  	;//y =y ;%.* exp(abs(y_a) - abs(y_a(1)));
  1649                                  
  1650                                  
  1651                                  
  1652                                  
  1653                                  
  1654                                  	;tmcAssign(y,y);
  1655 00001F17 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1656 00001F1A 50                      	push	eax
  1657 00001F1B 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1658 00001F1E 50                      	push	eax
  1659 00001F1F FF15[68104000]          	call _tmcAssign
  1660 00001F25 81C408000000            	add	esp,8
  1661                                  
  1662                                  	;//statement here,line 10
  1663                                  
  1664                                  	;// % Lines 11--12:
  1665                                  	;//
  1666                                  
  1667                                  	;//y_r=real(y);
  1668                                  
  1669                                  
  1670                                  
  1671                                  	;//CALL function
  1672                                  	;tmcReallocRegister(reg[48]);
  1673                                  	;tmcreal(1,1, reg[48], y);
  1674 00001F2B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1675 00001F2E 8B88C0000000            	mov	ecx, DWORD PTR [eax+192]
  1676 00001F34 51                      	push	ecx
  1677 00001F35 FF15[40114000]          	call _tmcReallocRegister
  1678 00001F3B 81C404000000            	add	esp,4
  1679 00001F41 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1680 00001F44 50                      	push	eax
  1681 00001F45 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1682 00001F48 8B88C0000000            	mov	ecx, DWORD PTR [eax+192]
  1683 00001F4E 51                      	push	ecx
  1684 00001F4F 6801000000              	push	1
  1685 00001F54 6801000000              	push	1
  1686 00001F59 FF15[9C124000]          	call _tmcreal
  1687 00001F5F 81C410000000            	add	esp,16
  1688                                  
  1689                                  
  1690                                  
  1691                                  	;tmcAssign(y_r,reg[48]);
  1692 00001F65 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1693 00001F68 8B88C0000000            	mov	ecx, DWORD PTR [eax+192]
  1694 00001F6E 51                      	push	ecx
  1695 00001F6F 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  1696 00001F72 50                      	push	eax
  1697 00001F73 FF15[68104000]          	call _tmcAssign
  1698 00001F79 81C408000000            	add	esp,8
  1699                                  
  1700                                  	;//statement here,line 12
  1701                                  
  1702                                  	;// % Lines 13--13:
  1703                                  	;//y_i = imag(y);
  1704                                  
  1705                                  
  1706                                  
  1707                                  	;//CALL function
  1708                                  	;tmcReallocRegister(reg[51]);
  1709                                  	;tmcimag(1,1, reg[51], y);
  1710 00001F7F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1711 00001F82 8B88CC000000            	mov	ecx, DWORD PTR [eax+204]
  1712 00001F88 51                      	push	ecx
  1713 00001F89 FF15[40114000]          	call _tmcReallocRegister
  1714 00001F8F 81C404000000            	add	esp,4
  1715 00001F95 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1716 00001F98 50                      	push	eax
  1717 00001F99 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1718 00001F9C 8B88CC000000            	mov	ecx, DWORD PTR [eax+204]
  1719 00001FA2 51                      	push	ecx
  1720 00001FA3 6801000000              	push	1
  1721 00001FA8 6801000000              	push	1
  1722 00001FAD FF15[1C124000]          	call _tmcimag
  1723 00001FB3 81C410000000            	add	esp,16
  1724                                  
  1725                                  
  1726                                  
  1727                                  	;tmcAssign(y_i,reg[51]);
  1728 00001FB9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1729 00001FBC 8B88CC000000            	mov	ecx, DWORD PTR [eax+204]
  1730 00001FC2 51                      	push	ecx
  1731 00001FC3 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  1732 00001FC6 50                      	push	eax
  1733 00001FC7 FF15[68104000]          	call _tmcAssign
  1734 00001FCD 81C408000000            	add	esp,8
  1735                                  
  1736                                  	;//statement here,line 13
  1737                                  
  1738                                  	;// % Lines 14--14:
  1739                                  	;// figure(500);
  1740                                  
  1741                                  	;tmcScalar(reg[53],5.000000000000000e+002);
  1742 00001FD3 6800407F40              	push	0x407f4000
  1743 00001FD8 6800000000              	push	0x0
  1744 00001FDD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1745 00001FE0 8B88D4000000            	mov	ecx, DWORD PTR [eax+212]
  1746 00001FE6 51                      	push	ecx
  1747 00001FE7 FF15[44114000]          	call _tmcScalar
  1748 00001FED 81C40C000000            	add	esp,12
  1749                                  
  1750                                  	;//CALL function
  1751                                  	;tmcReallocRegister(reg[54]);
  1752                                  	;tmcfigure(0,1, reg[54], reg[53]);
  1753 00001FF3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1754 00001FF6 8B88D8000000            	mov	ecx, DWORD PTR [eax+216]
  1755 00001FFC 51                      	push	ecx
  1756 00001FFD FF15[40114000]          	call _tmcReallocRegister
  1757 00002003 81C404000000            	add	esp,4
  1758 00002009 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1759 0000200C 8B88D4000000            	mov	ecx, DWORD PTR [eax+212]
  1760 00002012 51                      	push	ecx
  1761 00002013 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1762 00002016 8B88D8000000            	mov	ecx, DWORD PTR [eax+216]
  1763 0000201C 51                      	push	ecx
  1764 0000201D 6801000000              	push	1
  1765 00002022 6800000000              	push	0
  1766 00002027 FF15[94134000]          	call _tmcfigure
  1767 0000202D 81C410000000            	add	esp,16
  1768                                  
  1769                                  	;//statement here,line 14
  1770                                  
  1771                                  	;// % Lines 15--15:
  1772                                  	;// plot(y_r,y_i);
  1773                                  
  1774                                  
  1775                                  
  1776                                  
  1777                                  
  1778                                  	;//CALL function
  1779                                  	;tmcReallocRegister(reg[57]);
  1780                                  	;tmcplot(0,2, reg[57], y_r, y_i);
  1781 00002033 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1782 00002036 8B88E4000000            	mov	ecx, DWORD PTR [eax+228]
  1783 0000203C 51                      	push	ecx
  1784 0000203D FF15[40114000]          	call _tmcReallocRegister
  1785 00002043 81C404000000            	add	esp,4
  1786 00002049 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  1787 0000204C 50                      	push	eax
  1788 0000204D 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  1789 00002050 50                      	push	eax
  1790 00002051 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1791 00002054 8B88E4000000            	mov	ecx, DWORD PTR [eax+228]
  1792 0000205A 51                      	push	ecx
  1793 0000205B 6802000000              	push	2
  1794 00002060 6800000000              	push	0
  1795 00002065 FF15[90124000]          	call _tmcplot
  1796 0000206B 81C414000000            	add	esp,20
  1797                                  
  1798                                  	;//statement here,line 15
  1799                                  
  1800                                  	;// % Lines 16--22:
  1801                                  	;//
  1802                                  
  1803                                  	;//
  1804                                  
  1805                                  	;//%return;
  1806                                  
  1807                                  	;//
  1808                                  
  1809                                  	;//
  1810                                  
  1811                                  	;//
  1812                                  
  1813                                  	;//p = [1,2,3];
  1814                                  
  1815                                  	;tmcScalar(reg[58],1.000000000000000e+000);
  1816 00002071 680000F03F              	push	0x3ff00000
  1817 00002076 6800000000              	push	0x0
  1818 0000207B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1819 0000207E 8B88E8000000            	mov	ecx, DWORD PTR [eax+232]
  1820 00002084 51                      	push	ecx
  1821 00002085 FF15[44114000]          	call _tmcScalar
  1822 0000208B 81C40C000000            	add	esp,12
  1823                                  
  1824                                  	;tmcScalar(reg[59],2.000000000000000e+000);
  1825 00002091 6800000040              	push	0x40000000
  1826 00002096 6800000000              	push	0x0
  1827 0000209B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1828 0000209E 8B88EC000000            	mov	ecx, DWORD PTR [eax+236]
  1829 000020A4 51                      	push	ecx
  1830 000020A5 FF15[44114000]          	call _tmcScalar
  1831 000020AB 81C40C000000            	add	esp,12
  1832                                  
  1833                                  	;tmcScalar(reg[60],3.000000000000000e+000);
  1834 000020B1 6800000840              	push	0x40080000
  1835 000020B6 6800000000              	push	0x0
  1836 000020BB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1837 000020BE 8B88F0000000            	mov	ecx, DWORD PTR [eax+240]
  1838 000020C4 51                      	push	ecx
  1839 000020C5 FF15[44114000]          	call _tmcScalar
  1840 000020CB 81C40C000000            	add	esp,12
  1841                                  
  1842                                  ;tmcCollectColumns(reg[61],3,reg[58],reg[59],reg[60]);
  1843 000020D1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1844 000020D4 8B88F0000000            	mov	ecx, DWORD PTR [eax+240]
  1845 000020DA 51                      	push	ecx
  1846 000020DB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1847 000020DE 8B88EC000000            	mov	ecx, DWORD PTR [eax+236]
  1848 000020E4 51                      	push	ecx
  1849 000020E5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1850 000020E8 8B88E8000000            	mov	ecx, DWORD PTR [eax+232]
  1851 000020EE 51                      	push	ecx
  1852 000020EF 6803000000              	push	3
  1853 000020F4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1854 000020F7 8B88F4000000            	mov	ecx, DWORD PTR [eax+244]
  1855 000020FD 51                      	push	ecx
  1856 000020FE FF15[7C104000]          	call _tmcCollectColumns
  1857 00002104 81C414000000            	add	esp,20
  1858                                  
  1859                                  ;tmcCollectRows(reg[62],1,reg[61]);
  1860 0000210A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1861 0000210D 8B88F4000000            	mov	ecx, DWORD PTR [eax+244]
  1862 00002113 51                      	push	ecx
  1863 00002114 6801000000              	push	1
  1864 00002119 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1865 0000211C 8B88F8000000            	mov	ecx, DWORD PTR [eax+248]
  1866 00002122 51                      	push	ecx
  1867 00002123 FF15[80104000]          	call _tmcCollectRows
  1868 00002129 81C40C000000            	add	esp,12
  1869                                  
  1870                                  
  1871                                  
  1872                                  	;tmcAssign(p,reg[62]);
  1873 0000212F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1874 00002132 8B88F8000000            	mov	ecx, DWORD PTR [eax+248]
  1875 00002138 51                      	push	ecx
  1876 00002139 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  1877 0000213C 50                      	push	eax
  1878 0000213D FF15[68104000]          	call _tmcAssign
  1879 00002143 81C408000000            	add	esp,8
  1880                                  
  1881                                  	;//statement here,line 22
  1882                                  
  1883                                  	;// % Lines 23--23:
  1884                                  	;//y = roots(p);
  1885                                  
  1886                                  
  1887                                  
  1888                                  	;//CALL function
  1889                                  	;tmcReallocRegister(reg[65]);
  1890                                  	;tmcroots(1,1, reg[65], p);
  1891 00002149 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1892 0000214C 8B8804010000            	mov	ecx, DWORD PTR [eax+260]
  1893 00002152 51                      	push	ecx
  1894 00002153 FF15[40114000]          	call _tmcReallocRegister
  1895 00002159 81C404000000            	add	esp,4
  1896 0000215F 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  1897 00002162 50                      	push	eax
  1898 00002163 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1899 00002166 8B8804010000            	mov	ecx, DWORD PTR [eax+260]
  1900 0000216C 51                      	push	ecx
  1901 0000216D 6801000000              	push	1
  1902 00002172 6801000000              	push	1
  1903 00002177 FF15[A8124000]          	call _tmcroots
  1904 0000217D 81C410000000            	add	esp,16
  1905                                  
  1906                                  
  1907                                  
  1908                                  	;tmcAssign(y,reg[65]);
  1909 00002183 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1910 00002186 8B8804010000            	mov	ecx, DWORD PTR [eax+260]
  1911 0000218C 51                      	push	ecx
  1912 0000218D 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1913 00002190 50                      	push	eax
  1914 00002191 FF15[68104000]          	call _tmcAssign
  1915 00002197 81C408000000            	add	esp,8
  1916                                  
  1917                                  	;//statement here,line 23
  1918                                  
  1919                                  	;// % Lines 24--24:
  1920                                  	;//x = polyval(p,y);
  1921                                  
  1922                                  
  1923                                  
  1924                                  
  1925                                  
  1926                                  	;//CALL function
  1927                                  	;tmcReallocRegister(reg[69]);
  1928                                  	;tmcpolyval(1,2, reg[69], p, y);
  1929 0000219D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1930 000021A0 8B8814010000            	mov	ecx, DWORD PTR [eax+276]
  1931 000021A6 51                      	push	ecx
  1932 000021A7 FF15[40114000]          	call _tmcReallocRegister
  1933 000021AD 81C404000000            	add	esp,4
  1934 000021B3 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1935 000021B6 50                      	push	eax
  1936 000021B7 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  1937 000021BA 50                      	push	eax
  1938 000021BB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1939 000021BE 8B8814010000            	mov	ecx, DWORD PTR [eax+276]
  1940 000021C4 51                      	push	ecx
  1941 000021C5 6802000000              	push	2
  1942 000021CA 6801000000              	push	1
  1943 000021CF FF15[94124000]          	call _tmcpolyval
  1944 000021D5 81C414000000            	add	esp,20
  1945                                  
  1946                                  
  1947                                  
  1948                                  	;tmcAssign(x,reg[69]);
  1949 000021DB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1950 000021DE 8B8814010000            	mov	ecx, DWORD PTR [eax+276]
  1951 000021E4 51                      	push	ecx
  1952 000021E5 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  1953 000021E8 50                      	push	eax
  1954 000021E9 FF15[68104000]          	call _tmcAssign
  1955 000021EF 81C408000000            	add	esp,8
  1956                                  
  1957                                  	;//statement here,line 24
  1958                                  
  1959                                  	;// % Lines 25--26:
  1960                                  	;//
  1961                                  
  1962                                  	;//d=CheckVar1(p,y);
  1963                                  
  1964                                  
  1965                                  
  1966                                  
  1967                                  
  1968                                  	;//CALL function
  1969                                  	;tmcReallocRegister(reg[73]);
  1970                                  	;tmcCheckVar1(1,2, reg[73], p, y);
  1971 000021F5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1972 000021F8 8B8824010000            	mov	ecx, DWORD PTR [eax+292]
  1973 000021FE 51                      	push	ecx
  1974 000021FF FF15[40114000]          	call _tmcReallocRegister
  1975 00002205 81C404000000            	add	esp,4
  1976 0000220B 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  1977 0000220E 50                      	push	eax
  1978 0000220F 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  1979 00002212 50                      	push	eax
  1980 00002213 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1981 00002216 8B8824010000            	mov	ecx, DWORD PTR [eax+292]
  1982 0000221C 51                      	push	ecx
  1983 0000221D 6802000000              	push	2
  1984 00002222 6801000000              	push	1
  1985 00002227 E8222D0000              	call _tmcCheckVar1
  1986 0000222C 81C414000000            	add	esp,20
  1987                                  
  1988                                  
  1989                                  
  1990                                  	;tmcAssign(d,reg[73]);
  1991 00002232 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  1992 00002235 8B8824010000            	mov	ecx, DWORD PTR [eax+292]
  1993 0000223B 51                      	push	ecx
  1994 0000223C 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  1995 0000223F 50                      	push	eax
  1996 00002240 FF15[68104000]          	call _tmcAssign
  1997 00002246 81C408000000            	add	esp,8
  1998                                  
  1999                                  	;//statement here,line 26
  2000                                  
  2001                                  	;// % Lines 27--28:
  2002                                  	;//
  2003                                  
  2004                                  	;//disp(y);
  2005                                  
  2006                                  
  2007                                  
  2008                                  	;//CALL function
  2009                                  	;tmcReallocRegister(reg[76]);
  2010                                  	;tmcdisp(0,1, reg[76], y);
  2011 0000224C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2012 0000224F 8B8830010000            	mov	ecx, DWORD PTR [eax+304]
  2013 00002255 51                      	push	ecx
  2014 00002256 FF15[40114000]          	call _tmcReallocRegister
  2015 0000225C 81C404000000            	add	esp,4
  2016 00002262 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  2017 00002265 50                      	push	eax
  2018 00002266 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2019 00002269 8B8830010000            	mov	ecx, DWORD PTR [eax+304]
  2020 0000226F 51                      	push	ecx
  2021 00002270 6801000000              	push	1
  2022 00002275 6800000000              	push	0
  2023 0000227A FF15[B4114000]          	call _tmcdisp
  2024 00002280 81C410000000            	add	esp,16
  2025                                  
  2026                                  	;//statement here,line 28
  2027                                  
  2028                                  	;// % Lines 29--29:
  2029                                  	;//disp(x);
  2030                                  
  2031                                  
  2032                                  
  2033                                  	;//CALL function
  2034                                  	;tmcReallocRegister(reg[78]);
  2035                                  	;tmcdisp(0,1, reg[78], x);
  2036 00002286 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2037 00002289 8B8838010000            	mov	ecx, DWORD PTR [eax+312]
  2038 0000228F 51                      	push	ecx
  2039 00002290 FF15[40114000]          	call _tmcReallocRegister
  2040 00002296 81C404000000            	add	esp,4
  2041 0000229C 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  2042 0000229F 50                      	push	eax
  2043 000022A0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2044 000022A3 8B8838010000            	mov	ecx, DWORD PTR [eax+312]
  2045 000022A9 51                      	push	ecx
  2046 000022AA 6801000000              	push	1
  2047 000022AF 6800000000              	push	0
  2048 000022B4 FF15[B4114000]          	call _tmcdisp
  2049 000022BA 81C410000000            	add	esp,16
  2050                                  
  2051                                  	;//statement here,line 29
  2052                                  
  2053                                  	;// % Lines 30--30:
  2054                                  	;//disp(d-x);
  2055                                  
  2056                                  
  2057                                  
  2058                                  
  2059                                  
  2060                                  	;tmcSub(reg[81],d,x);
  2061 000022C0 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  2062 000022C3 50                      	push	eax
  2063 000022C4 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  2064 000022C7 50                      	push	eax
  2065 000022C8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2066 000022CB 8B8844010000            	mov	ecx, DWORD PTR [eax+324]
  2067 000022D1 51                      	push	ecx
  2068 000022D2 FF15[48114000]          	call _tmcSub
  2069 000022D8 81C40C000000            	add	esp,12
  2070                                  
  2071                                  	;//CALL function
  2072                                  	;tmcReallocRegister(reg[82]);
  2073                                  	;tmcdisp(0,1, reg[82], reg[81]);
  2074 000022DE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2075 000022E1 8B8848010000            	mov	ecx, DWORD PTR [eax+328]
  2076 000022E7 51                      	push	ecx
  2077 000022E8 FF15[40114000]          	call _tmcReallocRegister
  2078 000022EE 81C404000000            	add	esp,4
  2079 000022F4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2080 000022F7 8B8844010000            	mov	ecx, DWORD PTR [eax+324]
  2081 000022FD 51                      	push	ecx
  2082 000022FE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2083 00002301 8B8848010000            	mov	ecx, DWORD PTR [eax+328]
  2084 00002307 51                      	push	ecx
  2085 00002308 6801000000              	push	1
  2086 0000230D 6800000000              	push	0
  2087 00002312 FF15[B4114000]          	call _tmcdisp
  2088 00002318 81C410000000            	add	esp,16
  2089                                  
  2090                                  	;//statement here,line 30
  2091                                  
  2092                                  	;// % Lines 31--32:
  2093                                  	;//
  2094                                  
  2095                                  	;//[tht,AbsOffsetCorr,AdvUsecCorr] =btlCalcCommut;
  2096                                  
  2097                                  	;//CALL function
  2098                                  	;tmcReallocRegister(reg[83]);
  2099                                  	;tmcReallocRegister(reg[84]);
  2100                                  	;tmcReallocRegister(reg[85]);
  2101                                  	;tmcbtlCalcCommut(3,0, reg[83], reg[84], reg[85]);
  2102 0000231E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2103 00002321 8B884C010000            	mov	ecx, DWORD PTR [eax+332]
  2104 00002327 51                      	push	ecx
  2105 00002328 FF15[40114000]          	call _tmcReallocRegister
  2106 0000232E 81C404000000            	add	esp,4
  2107 00002334 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2108 00002337 8B8850010000            	mov	ecx, DWORD PTR [eax+336]
  2109 0000233D 51                      	push	ecx
  2110 0000233E FF15[40114000]          	call _tmcReallocRegister
  2111 00002344 81C404000000            	add	esp,4
  2112 0000234A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2113 0000234D 8B8854010000            	mov	ecx, DWORD PTR [eax+340]
  2114 00002353 51                      	push	ecx
  2115 00002354 FF15[40114000]          	call _tmcReallocRegister
  2116 0000235A 81C404000000            	add	esp,4
  2117 00002360 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2118 00002363 8B8854010000            	mov	ecx, DWORD PTR [eax+340]
  2119 00002369 51                      	push	ecx
  2120 0000236A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2121 0000236D 8B8850010000            	mov	ecx, DWORD PTR [eax+336]
  2122 00002373 51                      	push	ecx
  2123 00002374 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2124 00002377 8B884C010000            	mov	ecx, DWORD PTR [eax+332]
  2125 0000237D 51                      	push	ecx
  2126 0000237E 6800000000              	push	0
  2127 00002383 6803000000              	push	3
  2128 00002388 E810020000              	call _tmcbtlCalcCommut
  2129 0000238D 81C414000000            	add	esp,20
  2130                                  
  2131                                  
  2132                                  
  2133                                  	;tmcAssign(tht,reg[83]);
  2134 00002393 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2135 00002396 8B884C010000            	mov	ecx, DWORD PTR [eax+332]
  2136 0000239C 51                      	push	ecx
  2137 0000239D 8B45D0                  	mov	eax, DWORD PTR [ebp+-48]
  2138 000023A0 50                      	push	eax
  2139 000023A1 FF15[68104000]          	call _tmcAssign
  2140 000023A7 81C408000000            	add	esp,8
  2141                                  
  2142                                  
  2143                                  
  2144                                  	;tmcAssign(AbsOffsetCorr,reg[84]);
  2145 000023AD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2146 000023B0 8B8850010000            	mov	ecx, DWORD PTR [eax+336]
  2147 000023B6 51                      	push	ecx
  2148 000023B7 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  2149 000023BA 50                      	push	eax
  2150 000023BB FF15[68104000]          	call _tmcAssign
  2151 000023C1 81C408000000            	add	esp,8
  2152                                  
  2153                                  
  2154                                  
  2155                                  	;tmcAssign(AdvUsecCorr,reg[85]);
  2156 000023C7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2157 000023CA 8B8854010000            	mov	ecx, DWORD PTR [eax+340]
  2158 000023D0 51                      	push	ecx
  2159 000023D1 8B45C8                  	mov	eax, DWORD PTR [ebp+-56]
  2160 000023D4 50                      	push	eax
  2161 000023D5 FF15[68104000]          	call _tmcAssign
  2162 000023DB 81C408000000            	add	esp,8
  2163                                  
  2164                                  	;//statement here,line 32
  2165                                  
  2166                                  	;// % Lines 33--35:
  2167                                  	;//% disp(AbsOffsetCorr);
  2168                                  
  2169                                  	;//% disp(AdvUsecCorr);
  2170                                  
  2171                                  	;//str=sprintf('correction to AbsOffset=%d, AdvUsec=%d',AbsOffsetCorr,AdvUsecCorr);
  2172                                  
  2173                                  ;tmcCreateString(reg[89],"correction to AbsOffset=%d, AdvUsec=%d");
  2174 000023E1 B8[76254000]            	mov	eax, .LC$1+MY_LOAD_ADDRESS
  2175 000023E6 50                      	push eax
  2176 000023E7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2177 000023EA 8B8864010000            	mov	ecx, DWORD PTR [eax+356]
  2178 000023F0 51                      	push	ecx
  2179 000023F1 FF15[A4104000]          	call _tmcCreateString
  2180 000023F7 81C408000000            	add	esp,8
  2181                                  
  2182                                  
  2183                                  
  2184                                  
  2185                                  
  2186                                  	;//CALL function
  2187                                  	;tmcReallocRegister(reg[92]);
  2188                                  	;tmcsprintf(1,3, reg[92], reg[89], AbsOffsetCorr, AdvUsecCorr);
  2189 000023FD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2190 00002400 8B8870010000            	mov	ecx, DWORD PTR [eax+368]
  2191 00002406 51                      	push	ecx
  2192 00002407 FF15[40114000]          	call _tmcReallocRegister
  2193 0000240D 81C404000000            	add	esp,4
  2194 00002413 8B45C8                  	mov	eax, DWORD PTR [ebp+-56]
  2195 00002416 50                      	push	eax
  2196 00002417 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  2197 0000241A 50                      	push	eax
  2198 0000241B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2199 0000241E 8B8864010000            	mov	ecx, DWORD PTR [eax+356]
  2200 00002424 51                      	push	ecx
  2201 00002425 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2202 00002428 8B8870010000            	mov	ecx, DWORD PTR [eax+368]
  2203 0000242E 51                      	push	ecx
  2204 0000242F 6803000000              	push	3
  2205 00002434 6801000000              	push	1
  2206 00002439 FF15[C8124000]          	call _tmcsprintf
  2207 0000243F 81C418000000            	add	esp,24
  2208                                  
  2209                                  
  2210                                  
  2211                                  	;tmcAssign(str,reg[92]);
  2212 00002445 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2213 00002448 8B8870010000            	mov	ecx, DWORD PTR [eax+368]
  2214 0000244E 51                      	push	ecx
  2215 0000244F 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  2216 00002452 50                      	push	eax
  2217 00002453 FF15[68104000]          	call _tmcAssign
  2218 00002459 81C408000000            	add	esp,8
  2219                                  
  2220                                  	;//statement here,line 35
  2221                                  
  2222                                  	;// % Lines 36--36:
  2223                                  	;//disp(str);
  2224                                  
  2225                                  
  2226                                  
  2227                                  	;//CALL function
  2228                                  	;tmcReallocRegister(reg[95]);
  2229                                  	;tmcdisp(0,1, reg[95], str);
  2230 0000245F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2231 00002462 8B887C010000            	mov	ecx, DWORD PTR [eax+380]
  2232 00002468 51                      	push	ecx
  2233 00002469 FF15[40114000]          	call _tmcReallocRegister
  2234 0000246F 81C404000000            	add	esp,4
  2235 00002475 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  2236 00002478 50                      	push	eax
  2237 00002479 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2238 0000247C 8B887C010000            	mov	ecx, DWORD PTR [eax+380]
  2239 00002482 51                      	push	ecx
  2240 00002483 6801000000              	push	1
  2241 00002488 6800000000              	push	0
  2242 0000248D FF15[B4114000]          	call _tmcdisp
  2243 00002493 81C410000000            	add	esp,16
  2244                                  
  2245                                  	;//statement here,line 36
  2246                                  
  2247                                  	;// % Lines 37--39:
  2248                                  	;//
  2249                                  
  2250                                  	;//
  2251                                  
  2252                                  .label_1: ; //end Function
  2253                                  	;FINALLY
  2254                                  	;tmcFreeLocalVar(str);
  2255 00002499 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  2256 0000249C 50                      	push	eax
  2257 0000249D FF15[C8104000]          	call _tmcFreeLocalVar
  2258 000024A3 81C404000000            	add	esp,4
  2259                                  	;tmcFreeLocalVar(AdvUsecCorr);
  2260 000024A9 8B45C8                  	mov	eax, DWORD PTR [ebp+-56]
  2261 000024AC 50                      	push	eax
  2262 000024AD FF15[C8104000]          	call _tmcFreeLocalVar
  2263 000024B3 81C404000000            	add	esp,4
  2264                                  	;tmcFreeLocalVar(AbsOffsetCorr);
  2265 000024B9 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  2266 000024BC 50                      	push	eax
  2267 000024BD FF15[C8104000]          	call _tmcFreeLocalVar
  2268 000024C3 81C404000000            	add	esp,4
  2269                                  	;tmcFreeLocalVar(tht);
  2270 000024C9 8B45D0                  	mov	eax, DWORD PTR [ebp+-48]
  2271 000024CC 50                      	push	eax
  2272 000024CD FF15[C8104000]          	call _tmcFreeLocalVar
  2273 000024D3 81C404000000            	add	esp,4
  2274                                  	;tmcFreeLocalVar(d);
  2275 000024D9 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  2276 000024DC 50                      	push	eax
  2277 000024DD FF15[C8104000]          	call _tmcFreeLocalVar
  2278 000024E3 81C404000000            	add	esp,4
  2279                                  	;tmcFreeLocalVar(y_i);
  2280 000024E9 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  2281 000024EC 50                      	push	eax
  2282 000024ED FF15[C8104000]          	call _tmcFreeLocalVar
  2283 000024F3 81C404000000            	add	esp,4
  2284                                  	;tmcFreeLocalVar(y_r);
  2285 000024F9 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  2286 000024FC 50                      	push	eax
  2287 000024FD FF15[C8104000]          	call _tmcFreeLocalVar
  2288 00002503 81C404000000            	add	esp,4
  2289                                  	;tmcFreeLocalVar(I);
  2290 00002509 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  2291 0000250C 50                      	push	eax
  2292 0000250D FF15[C8104000]          	call _tmcFreeLocalVar
  2293 00002513 81C404000000            	add	esp,4
  2294                                  	;tmcFreeLocalVar(y_a);
  2295 00002519 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  2296 0000251C 50                      	push	eax
  2297 0000251D FF15[C8104000]          	call _tmcFreeLocalVar
  2298 00002523 81C404000000            	add	esp,4
  2299                                  	;tmcFreeLocalVar(y);
  2300 00002529 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  2301 0000252C 50                      	push	eax
  2302 0000252D FF15[C8104000]          	call _tmcFreeLocalVar
  2303 00002533 81C404000000            	add	esp,4
  2304                                  	;tmcFreeLocalVar(p);
  2305 00002539 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  2306 0000253C 50                      	push	eax
  2307 0000253D FF15[C8104000]          	call _tmcFreeLocalVar
  2308 00002543 81C404000000            	add	esp,4
  2309                                  	;tmcFreeLocalVar(x);
  2310 00002549 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  2311 0000254C 50                      	push	eax
  2312 0000254D FF15[C8104000]          	call _tmcFreeLocalVar
  2313 00002553 81C404000000            	add	esp,4
  2314                                  	;tmcFreeRegFrame(reg);
  2315 00002559 8B45F8                  	mov	eax, DWORD PTR [ebp+-8]
  2316 0000255C 50                      	push	eax
  2317 0000255D FF15[CC104000]          	call _tmcFreeRegFrame
  2318 00002563 81C404000000            	add	esp,4
  2319                                  
  2320                                  	;
  2321                                  	;ENDFINALLY
  2322                                  
  2323                                  
  2324 00002569 5F                      	pop edi
  2325 0000256A 5E                      	pop esi
  2326 0000256B 5B                      	pop ebx
  2327 0000256C 81C400020000            	add esp,512
  2328 00002572 89EC                    	mov esp,ebp
  2329 00002574 5D                      	pop ebp
  2330 00002575 C3                      	ret
  2331                                  	;end	 _tmcTestO
  2332 00002576 636F7272656374696F-     .LC$1:	 DB 'correction to AbsOffset=%d, AdvUsec=%d', 0x0
  2333 0000257F 6E20746F204162734F-
  2334 00002588 66667365743D25642C-
  2335 00002591 20416476557365633D-
  2336 0000259A 256400             
  2337                                  
  2338                                  	;//FUNCTION DEFINITION BEGIN
  2339                                  	;//statement here,line 39
  2340                                  
  2341                                  	;// % Lines 40--40:
  2342                                  	 ;File: .\OutS3\btlCalcCommut.c generated by TMC Converter(C)2009-2013,Israel
  2343                                  	;// % Lines 1--3:
  2344                                  	;//function [tht,AbsOffsetCorr,AdvUsecCorr] =btlCalcCommut
  2345                                  
  2346                                  	;//
  2347                                  
  2348                                  	;//JV_tests   = [750000,1000000,1500000,2000000,3000000];
  2349                                  
  2350                                  
  2351                                  _tmcbtlCalcCommut:
  2352 0000259D 55                      	push ebp
  2353 0000259E 89E5                    	mov ebp,esp
  2354 000025A0 81EC00020000            	sub esp,512
  2355 000025A6 53                      	push ebx
  2356 000025A7 56                      	push esi
  2357 000025A8 57                      	push edi
  2358 000025A9 8DBD00FEFFFF            	lea	edi,DWORD PTR [ebp-512]
  2359                                  	;void tmcbtlCalcCommut(int nargout, int nargin,tmsMatrix *tht,tmsMatrix *AbsOffsetCorr,tmsMatrix *AdvUsecCorr
  2360                                  	;	;) {
  2361                                  	;tmsMatrix **reg=tmcCreateRegFrame(335);
  2362 000025AF 684F010000              	push	335
  2363 000025B4 FF15[A0104000]          	call _tmcCreateRegFrame
  2364 000025BA 81C404000000            	add	esp,4
  2365 000025C0 8945F8                  	mov	DWORD PTR [ebp-8],eax
  2366                                  	;tmsMatrix *JV_tests=tmcNewMatrix();
  2367 000025C3 FF15[28104000]          	call ___tmcNewMatrix
  2368 000025C9 8945F0                  	mov	DWORD PTR [ebp-16],eax
  2369                                  	;tmsMatrix *FileNames=tmcNewMatrix();
  2370 000025CC FF15[28104000]          	call ___tmcNewMatrix
  2371 000025D2 8945EC                  	mov	DWORD PTR [ebp-20],eax
  2372                                  	;tmsMatrix *Thetas_min_a=tmcNewMatrix();
  2373 000025D5 FF15[28104000]          	call ___tmcNewMatrix
  2374 000025DB 8945E8                  	mov	DWORD PTR [ebp-24],eax
  2375                                  	;tmsMatrix *cnt=tmcNewMatrix();
  2376 000025DE FF15[28104000]          	call ___tmcNewMatrix
  2377 000025E4 8945E4                  	mov	DWORD PTR [ebp-28],eax
  2378                                  	;tmsMatrix *www=tmcNewMatrix();
  2379 000025E7 FF15[28104000]          	call ___tmcNewMatrix
  2380 000025ED 8945E0                  	mov	DWORD PTR [ebp-32],eax
  2381                                  	;tmsMatrix *Iq_ave=tmcNewMatrix();
  2382 000025F0 FF15[28104000]          	call ___tmcNewMatrix
  2383 000025F6 8945DC                  	mov	DWORD PTR [ebp-36],eax
  2384                                  	;tmsMatrix *Thetas=tmcNewMatrix();
  2385 000025F9 FF15[28104000]          	call ___tmcNewMatrix
  2386 000025FF 8945D8                  	mov	DWORD PTR [ebp-40],eax
  2387                                  	;tmsMatrix *Y1=tmcNewMatrix();
  2388 00002602 FF15[28104000]          	call ___tmcNewMatrix
  2389 00002608 8945D4                  	mov	DWORD PTR [ebp-44],eax
  2390                                  	;tmsMatrix *Y2=tmcNewMatrix();
  2391 0000260B FF15[28104000]          	call ___tmcNewMatrix
  2392 00002611 8945D0                  	mov	DWORD PTR [ebp-48],eax
  2393                                  	;tmsMatrix *I2=tmcNewMatrix();
  2394 00002614 FF15[28104000]          	call ___tmcNewMatrix
  2395 0000261A 8945CC                  	mov	DWORD PTR [ebp-52],eax
  2396                                  	;tmsMatrix *lena=tmcNewMatrix();
  2397 0000261D FF15[28104000]          	call ___tmcNewMatrix
  2398 00002623 8945C8                  	mov	DWORD PTR [ebp-56],eax
  2399                                  	;tmsMatrix *Ha=tmcNewMatrix();
  2400 00002626 FF15[28104000]          	call ___tmcNewMatrix
  2401 0000262C 8945C4                  	mov	DWORD PTR [ebp-60],eax
  2402                                  	;tmsMatrix *thta=tmcNewMatrix();
  2403 0000262F FF15[28104000]          	call ___tmcNewMatrix
  2404 00002635 8945C0                  	mov	DWORD PTR [ebp-64],eax
  2405                                  	;tmsMatrix *Thetas_simul=tmcNewMatrix();
  2406 00002638 FF15[28104000]          	call ___tmcNewMatrix
  2407 0000263E 8945BC                  	mov	DWORD PTR [ebp-68],eax
  2408                                  	;tmsMatrix *Ha_simul=tmcNewMatrix();
  2409 00002641 FF15[28104000]          	call ___tmcNewMatrix
  2410 00002647 8945B8                  	mov	DWORD PTR [ebp-72],eax
  2411                                  	;tmsMatrix *Iq_simul=tmcNewMatrix();
  2412 0000264A FF15[28104000]          	call ___tmcNewMatrix
  2413 00002650 8945B4                  	mov	DWORD PTR [ebp-76],eax
  2414                                  	;tmsMatrix *Y=tmcNewMatrix();
  2415 00002653 FF15[28104000]          	call ___tmcNewMatrix
  2416 00002659 8945B0                  	mov	DWORD PTR [ebp-80],eax
  2417                                  	;tmsMatrix *I=tmcNewMatrix();
  2418 0000265C FF15[28104000]          	call ___tmcNewMatrix
  2419 00002662 8945AC                  	mov	DWORD PTR [ebp-84],eax
  2420                                  	;tmsMatrix *NumPoles=tmcNewMatrix();
  2421 00002665 FF15[28104000]          	call ___tmcNewMatrix
  2422 0000266B 8945A8                  	mov	DWORD PTR [ebp-88],eax
  2423                                  	;tmsMatrix *BitsPerRev=tmcNewMatrix();
  2424 0000266E FF15[28104000]          	call ___tmcNewMatrix
  2425 00002674 8945A4                  	mov	DWORD PTR [ebp-92],eax
  2426                                  	;tmsMatrix *EangleCorrRes=tmcNewMatrix();
  2427 00002677 FF15[28104000]          	call ___tmcNewMatrix
  2428 0000267D 8945A0                  	mov	DWORD PTR [ebp-96],eax
  2429                                  	;tmsMatrix *Thetas_min=tmcNewMatrix();
  2430 00002680 FF15[28104000]          	call ___tmcNewMatrix
  2431 00002686 89459C                  	mov	DWORD PTR [ebp-100],eax
  2432                                  	;tmsMatrix *len=tmcNewMatrix();
  2433 00002689 FF15[28104000]          	call ___tmcNewMatrix
  2434 0000268F 894598                  	mov	DWORD PTR [ebp-104],eax
  2435                                  	;tmsMatrix *ElecVel=tmcNewMatrix();
  2436 00002692 FF15[28104000]          	call ___tmcNewMatrix
  2437 00002698 894594                  	mov	DWORD PTR [ebp-108],eax
  2438                                  	;tmsMatrix *AngleElecCorr=tmcNewMatrix();
  2439 0000269B FF15[28104000]          	call ___tmcNewMatrix
  2440 000026A1 894590                  	mov	DWORD PTR [ebp-112],eax
  2441                                  	;tmsMatrix *H=tmcNewMatrix();
  2442 000026A4 FF15[28104000]          	call ___tmcNewMatrix
  2443 000026AA 89458C                  	mov	DWORD PTR [ebp-116],eax
  2444                                  	;tmsMatrix *w=tmcNewMatrix();
  2445 000026AD FF15[28104000]          	call ___tmcNewMatrix
  2446 000026B3 894588                  	mov	DWORD PTR [ebp-120],eax
  2447                                  	;tmsMatrix *s=tmcNewMatrix();
  2448 000026B6 FF15[28104000]          	call ___tmcNewMatrix
  2449 000026BC 894584                  	mov	DWORD PTR [ebp-124],eax
  2450                                  	;tmsMatrix *w0=tmcNewMatrix();
  2451 000026BF FF15[28104000]          	call ___tmcNewMatrix
  2452 000026C5 894580                  	mov	DWORD PTR [ebp-128],eax
  2453                                  	;tmsMatrix *w1=tmcNewMatrix();
  2454 000026C8 FF15[28104000]          	call ___tmcNewMatrix
  2455 000026CE 89857CFFFFFF            	mov	DWORD PTR [ebp-132],eax
  2456                                  	;tmsMatrix *d0=tmcNewMatrix();
  2457 000026D4 FF15[28104000]          	call ___tmcNewMatrix
  2458 000026DA 898578FFFFFF            	mov	DWORD PTR [ebp-136],eax
  2459                                  	;tmsMatrix *d1=tmcNewMatrix();
  2460 000026E0 FF15[28104000]          	call ___tmcNewMatrix
  2461 000026E6 898574FFFFFF            	mov	DWORD PTR [ebp-140],eax
  2462                                  	;tmsMatrix *P=tmcNewMatrix();
  2463 000026EC FF15[28104000]          	call ___tmcNewMatrix
  2464 000026F2 898570FFFFFF            	mov	DWORD PTR [ebp-144],eax
  2465                                  	;tmsMatrix *ph=tmcNewMatrix();
  2466 000026F8 FF15[28104000]          	call ___tmcNewMatrix
  2467 000026FE 89856CFFFFFF            	mov	DWORD PTR [ebp-148],eax
  2468                                  	;tmsMatrix *Mag=tmcNewMatrix();
  2469 00002704 FF15[28104000]          	call ___tmcNewMatrix
  2470 0000270A 898568FFFFFF            	mov	DWORD PTR [ebp-152],eax
  2471                                  
  2472                                  	;TRY
  2473                                  	;
  2474                                  	;tmcScalar(reg[1],7.500000000000000e+005);
  2475 00002710 6860E32641              	push	0x4126e360
  2476 00002715 6800000000              	push	0x0
  2477 0000271A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2478 0000271D 8B4804                  	mov	ecx, DWORD PTR [eax+4]
  2479 00002720 51                      	push	ecx
  2480 00002721 FF15[44114000]          	call _tmcScalar
  2481 00002727 81C40C000000            	add	esp,12
  2482                                  
  2483                                  	;tmcScalar(reg[2],1.000000000000000e+006);
  2484 0000272D 6880842E41              	push	0x412e8480
  2485 00002732 6800000000              	push	0x0
  2486 00002737 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2487 0000273A 8B4808                  	mov	ecx, DWORD PTR [eax+8]
  2488 0000273D 51                      	push	ecx
  2489 0000273E FF15[44114000]          	call _tmcScalar
  2490 00002744 81C40C000000            	add	esp,12
  2491                                  
  2492                                  	;tmcScalar(reg[3],1.500000000000000e+006);
  2493 0000274A 6860E33641              	push	0x4136e360
  2494 0000274F 6800000000              	push	0x0
  2495 00002754 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2496 00002757 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  2497 0000275A 51                      	push	ecx
  2498 0000275B FF15[44114000]          	call _tmcScalar
  2499 00002761 81C40C000000            	add	esp,12
  2500                                  
  2501                                  	;tmcScalar(reg[4],2.000000000000000e+006);
  2502 00002767 6880843E41              	push	0x413e8480
  2503 0000276C 6800000000              	push	0x0
  2504 00002771 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2505 00002774 8B4810                  	mov	ecx, DWORD PTR [eax+16]
  2506 00002777 51                      	push	ecx
  2507 00002778 FF15[44114000]          	call _tmcScalar
  2508 0000277E 81C40C000000            	add	esp,12
  2509                                  
  2510                                  	;tmcScalar(reg[5],3.000000000000000e+006);
  2511 00002784 6860E34641              	push	0x4146e360
  2512 00002789 6800000000              	push	0x0
  2513 0000278E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2514 00002791 8B4814                  	mov	ecx, DWORD PTR [eax+20]
  2515 00002794 51                      	push	ecx
  2516 00002795 FF15[44114000]          	call _tmcScalar
  2517 0000279B 81C40C000000            	add	esp,12
  2518                                  
  2519                                  ;tmcCollectColumns(reg[6],5,reg[1],reg[2],reg[3],reg[4],reg[5]);
  2520 000027A1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2521 000027A4 8B4814                  	mov	ecx, DWORD PTR [eax+20]
  2522 000027A7 51                      	push	ecx
  2523 000027A8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2524 000027AB 8B4810                  	mov	ecx, DWORD PTR [eax+16]
  2525 000027AE 51                      	push	ecx
  2526 000027AF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2527 000027B2 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  2528 000027B5 51                      	push	ecx
  2529 000027B6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2530 000027B9 8B4808                  	mov	ecx, DWORD PTR [eax+8]
  2531 000027BC 51                      	push	ecx
  2532 000027BD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2533 000027C0 8B4804                  	mov	ecx, DWORD PTR [eax+4]
  2534 000027C3 51                      	push	ecx
  2535 000027C4 6805000000              	push	5
  2536 000027C9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2537 000027CC 8B4818                  	mov	ecx, DWORD PTR [eax+24]
  2538 000027CF 51                      	push	ecx
  2539 000027D0 FF15[7C104000]          	call _tmcCollectColumns
  2540 000027D6 81C41C000000            	add	esp,28
  2541                                  
  2542                                  ;tmcCollectRows(reg[7],1,reg[6]);
  2543 000027DC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2544 000027DF 8B4818                  	mov	ecx, DWORD PTR [eax+24]
  2545 000027E2 51                      	push	ecx
  2546 000027E3 6801000000              	push	1
  2547 000027E8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2548 000027EB 8B481C                  	mov	ecx, DWORD PTR [eax+28]
  2549 000027EE 51                      	push	ecx
  2550 000027EF FF15[80104000]          	call _tmcCollectRows
  2551 000027F5 81C40C000000            	add	esp,12
  2552                                  
  2553                                  
  2554                                  
  2555                                  	;tmcAssign(JV_tests,reg[7]);
  2556 000027FB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2557 000027FE 8B481C                  	mov	ecx, DWORD PTR [eax+28]
  2558 00002801 51                      	push	ecx
  2559 00002802 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  2560 00002805 50                      	push	eax
  2561 00002806 FF15[68104000]          	call _tmcAssign
  2562 0000280C 81C408000000            	add	esp,8
  2563                                  
  2564                                  	;//statement here,line 3
  2565                                  
  2566                                  	;// % Lines 4--10:
  2567                                  	;//
  2568                                  
  2569                                  	;//FileNames={'BtlMotor1_comm_jv750000_13p6V.mat', ...
  2570                                  
  2571                                  	;//'BtlMotor1_comm_jv1000000_13p6V.mat',  ...                        
  2572                                  
  2573                                  	;//'BtlMotor1_comm_jv1500000_13p6V.mat' ,  ...                                          
  2574                                  
  2575                                  	;//'BtlMotor1_comm_jv2000000_13p6V.mat' ,  ...                 
  2576                                  
  2577                                  	;//'BtlMotor1_comm_jv3000000_6p9V.mat'  ,  ...                   
  2578                                  
  2579                                  	;//};
  2580                                  
  2581                                  ;tmcCreateString(reg[9],"BtlMotor1_comm_jv750000_13p6V.mat");
  2582 00002812 B8[944E4000]            	mov	eax, .LC$1+MY_LOAD_ADDRESS
  2583 00002817 50                      	push eax
  2584 00002818 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2585 0000281B 8B4824                  	mov	ecx, DWORD PTR [eax+36]
  2586 0000281E 51                      	push	ecx
  2587 0000281F FF15[A4104000]          	call _tmcCreateString
  2588 00002825 81C408000000            	add	esp,8
  2589                                  
  2590                                  ;tmcCreateString(reg[10],"BtlMotor1_comm_jv1000000_13p6V.mat");
  2591 0000282B B8[B64E4000]            	mov	eax, .LC$2+MY_LOAD_ADDRESS
  2592 00002830 50                      	push eax
  2593 00002831 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2594 00002834 8B4828                  	mov	ecx, DWORD PTR [eax+40]
  2595 00002837 51                      	push	ecx
  2596 00002838 FF15[A4104000]          	call _tmcCreateString
  2597 0000283E 81C408000000            	add	esp,8
  2598                                  
  2599                                  ;tmcCreateString(reg[11],"BtlMotor1_comm_jv1500000_13p6V.mat");
  2600 00002844 B8[D94E4000]            	mov	eax, .LC$3+MY_LOAD_ADDRESS
  2601 00002849 50                      	push eax
  2602 0000284A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2603 0000284D 8B482C                  	mov	ecx, DWORD PTR [eax+44]
  2604 00002850 51                      	push	ecx
  2605 00002851 FF15[A4104000]          	call _tmcCreateString
  2606 00002857 81C408000000            	add	esp,8
  2607                                  
  2608                                  ;tmcCreateString(reg[12],"BtlMotor1_comm_jv2000000_13p6V.mat");
  2609 0000285D B8[FC4E4000]            	mov	eax, .LC$4+MY_LOAD_ADDRESS
  2610 00002862 50                      	push eax
  2611 00002863 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2612 00002866 8B4830                  	mov	ecx, DWORD PTR [eax+48]
  2613 00002869 51                      	push	ecx
  2614 0000286A FF15[A4104000]          	call _tmcCreateString
  2615 00002870 81C408000000            	add	esp,8
  2616                                  
  2617                                  ;tmcCreateString(reg[13],"BtlMotor1_comm_jv3000000_6p9V.mat");
  2618 00002876 B8[1F4F4000]            	mov	eax, .LC$5+MY_LOAD_ADDRESS
  2619 0000287B 50                      	push eax
  2620 0000287C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2621 0000287F 8B4834                  	mov	ecx, DWORD PTR [eax+52]
  2622 00002882 51                      	push	ecx
  2623 00002883 FF15[A4104000]          	call _tmcCreateString
  2624 00002889 81C408000000            	add	esp,8
  2625                                  
  2626                                  ;tmcCollectCellColumns(reg[14],5,reg[9],reg[10],reg[11],reg[12],reg[13]);
  2627 0000288F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2628 00002892 8B4834                  	mov	ecx, DWORD PTR [eax+52]
  2629 00002895 51                      	push	ecx
  2630 00002896 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2631 00002899 8B4830                  	mov	ecx, DWORD PTR [eax+48]
  2632 0000289C 51                      	push	ecx
  2633 0000289D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2634 000028A0 8B482C                  	mov	ecx, DWORD PTR [eax+44]
  2635 000028A3 51                      	push	ecx
  2636 000028A4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2637 000028A7 8B4828                  	mov	ecx, DWORD PTR [eax+40]
  2638 000028AA 51                      	push	ecx
  2639 000028AB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2640 000028AE 8B4824                  	mov	ecx, DWORD PTR [eax+36]
  2641 000028B1 51                      	push	ecx
  2642 000028B2 6805000000              	push	5
  2643 000028B7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2644 000028BA 8B4838                  	mov	ecx, DWORD PTR [eax+56]
  2645 000028BD 51                      	push	ecx
  2646 000028BE FF15[74104000]          	call _tmcCollectCellColumns
  2647 000028C4 81C41C000000            	add	esp,28
  2648                                  
  2649                                  ;tmcCollectCellRows(reg[15],1,reg[14]);
  2650 000028CA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2651 000028CD 8B4838                  	mov	ecx, DWORD PTR [eax+56]
  2652 000028D0 51                      	push	ecx
  2653 000028D1 6801000000              	push	1
  2654 000028D6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2655 000028D9 8B483C                  	mov	ecx, DWORD PTR [eax+60]
  2656 000028DC 51                      	push	ecx
  2657 000028DD FF15[78104000]          	call _tmcCollectCellRows
  2658 000028E3 81C40C000000            	add	esp,12
  2659                                  
  2660                                  
  2661                                  
  2662                                  	;tmcAssign(FileNames,reg[15]);
  2663 000028E9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2664 000028EC 8B483C                  	mov	ecx, DWORD PTR [eax+60]
  2665 000028EF 51                      	push	ecx
  2666 000028F0 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  2667 000028F3 50                      	push	eax
  2668 000028F4 FF15[68104000]          	call _tmcAssign
  2669 000028FA 81C408000000            	add	esp,8
  2670                                  
  2671                                  	;//statement here,line 10
  2672                                  
  2673                                  	;// % Lines 11--11:
  2674                                  	;//Thetas_min_a=[];
  2675                                  
  2676                                  	;tmcCreateMatrixEmpty(reg[17]);
  2677 00002900 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2678 00002903 8B4844                  	mov	ecx, DWORD PTR [eax+68]
  2679 00002906 51                      	push	ecx
  2680 00002907 FF15[9C104000]          	call _tmcCreateMatrixEmpty
  2681 0000290D 81C404000000            	add	esp,4
  2682                                  
  2683                                  
  2684                                  
  2685                                  	;tmcAssign(Thetas_min_a,reg[17]);
  2686 00002913 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2687 00002916 8B4844                  	mov	ecx, DWORD PTR [eax+68]
  2688 00002919 51                      	push	ecx
  2689 0000291A 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  2690 0000291D 50                      	push	eax
  2691 0000291E FF15[68104000]          	call _tmcAssign
  2692 00002924 81C408000000            	add	esp,8
  2693                                  
  2694                                  	;//statement here,line 11
  2695                                  
  2696                                  	;// % Lines 12--13:
  2697                                  	;//for cnt=1:length(JV_tests)
  2698                                  
  2699                                  	;//        www= load(FileNames{cnt});
  2700                                  
  2701                                  	;tmcScalar(reg[19],1.000000000000000e+000);
  2702 0000292A 680000F03F              	push	0x3ff00000
  2703 0000292F 6800000000              	push	0x0
  2704 00002934 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2705 00002937 8B484C                  	mov	ecx, DWORD PTR [eax+76]
  2706 0000293A 51                      	push	ecx
  2707 0000293B FF15[44114000]          	call _tmcScalar
  2708 00002941 81C40C000000            	add	esp,12
  2709                                  
  2710                                  
  2711                                  
  2712                                  	;//CALL function
  2713                                  	;tmcReallocRegister(reg[21]);
  2714                                  	;tmclength(1,1, reg[21], JV_tests);
  2715 00002947 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2716 0000294A 8B4854                  	mov	ecx, DWORD PTR [eax+84]
  2717 0000294D 51                      	push	ecx
  2718 0000294E FF15[40114000]          	call _tmcReallocRegister
  2719 00002954 81C404000000            	add	esp,4
  2720 0000295A 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  2721 0000295D 50                      	push	eax
  2722 0000295E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2723 00002961 8B4854                  	mov	ecx, DWORD PTR [eax+84]
  2724 00002964 51                      	push	ecx
  2725 00002965 6801000000              	push	1
  2726 0000296A 6801000000              	push	1
  2727 0000296F FF15[58124000]          	call _tmclength
  2728 00002975 81C410000000            	add	esp,16
  2729                                  
  2730                                  ;	tmcCreateColonBaseLimit(reg[22],reg[19],reg[21]);
  2731 0000297B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2732 0000297E 8B4854                  	mov	ecx, DWORD PTR [eax+84]
  2733 00002981 51                      	push	ecx
  2734 00002982 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2735 00002985 8B484C                  	mov	ecx, DWORD PTR [eax+76]
  2736 00002988 51                      	push	ecx
  2737 00002989 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2738 0000298C 8B4858                  	mov	ecx, DWORD PTR [eax+88]
  2739 0000298F 51                      	push	ecx
  2740 00002990 FF15[94104000]          	call _tmcCreateColonBaseLimit
  2741 00002996 81C40C000000            	add	esp,12
  2742                                  
  2743                                  	;tmcForIterInit(reg[23],reg[22],cnt);
  2744 0000299C 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  2745 0000299F 50                      	push	eax
  2746 000029A0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2747 000029A3 8B4858                  	mov	ecx, DWORD PTR [eax+88]
  2748 000029A6 51                      	push	ecx
  2749 000029A7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2750 000029AA 8B485C                  	mov	ecx, DWORD PTR [eax+92]
  2751 000029AD 51                      	push	ecx
  2752 000029AE FF15[BC104000]          	call _tmcForIterInit
  2753 000029B4 81C40C000000            	add	esp,12
  2754                                  
  2755                                  .label_4: ; //FOR begin
  2756                                  ;	if(tmcForIterNext(reg[23],reg[22])) goto label_3; // exit for
  2757 000029BA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2758 000029BD 8B4858                  	mov	ecx, DWORD PTR [eax+88]
  2759 000029C0 51                      	push	ecx
  2760 000029C1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2761 000029C4 8B485C                  	mov	ecx, DWORD PTR [eax+92]
  2762 000029C7 51                      	push	ecx
  2763 000029C8 FF15[C0104000]          	call _tmcForIterNext
  2764 000029CE 81C408000000            	add	esp,8
  2765 000029D4 0FBFD0                  	movsx	 edx,ax
  2766 000029D7 85D2                    	test	edx, edx
  2767 000029D9 0F85060B0000            	jne .label_3
  2768                                  
  2769                                  
  2770                                  
  2771                                  
  2772                                  
  2773                                  	;tmcGetByIndexCell(reg[26],FileNames,1,cnt);
  2774 000029DF 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  2775 000029E2 50                      	push	eax
  2776 000029E3 6801000000              	push	1
  2777 000029E8 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  2778 000029EB 50                      	push	eax
  2779 000029EC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2780 000029EF 8B4868                  	mov	ecx, DWORD PTR [eax+104]
  2781 000029F2 51                      	push	ecx
  2782 000029F3 FF15[DC104000]          	call _tmcGetByIndexCell
  2783 000029F9 81C410000000            	add	esp,16
  2784                                  
  2785                                  	;//CALL function
  2786                                  	;tmcReallocRegister(reg[27]);
  2787                                  	;tmcload(1,1, reg[27], reg[26]);
  2788 000029FF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2789 00002A02 8B486C                  	mov	ecx, DWORD PTR [eax+108]
  2790 00002A05 51                      	push	ecx
  2791 00002A06 FF15[40114000]          	call _tmcReallocRegister
  2792 00002A0C 81C404000000            	add	esp,4
  2793 00002A12 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2794 00002A15 8B4868                  	mov	ecx, DWORD PTR [eax+104]
  2795 00002A18 51                      	push	ecx
  2796 00002A19 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2797 00002A1C 8B486C                  	mov	ecx, DWORD PTR [eax+108]
  2798 00002A1F 51                      	push	ecx
  2799 00002A20 6801000000              	push	1
  2800 00002A25 6801000000              	push	1
  2801 00002A2A FF15[60124000]          	call _tmcload
  2802 00002A30 81C410000000            	add	esp,16
  2803                                  
  2804                                  
  2805                                  
  2806                                  	;tmcAssign(www,reg[27]);
  2807 00002A36 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2808 00002A39 8B486C                  	mov	ecx, DWORD PTR [eax+108]
  2809 00002A3C 51                      	push	ecx
  2810 00002A3D 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  2811 00002A40 50                      	push	eax
  2812 00002A41 FF15[68104000]          	call _tmcAssign
  2813 00002A47 81C408000000            	add	esp,8
  2814                                  
  2815                                  	;//statement here,line 13
  2816                                  
  2817                                  	;// % Lines 14--14:
  2818                                  	;//        Iq_ave =   www.Iq_ave;
  2819                                  
  2820                                  
  2821                                  
  2822                                  	;tmcGetByFieldHcode(reg[31],www,0xcf590000);/* Iq_ave */
  2823 00002A4D 68000059CF              	push	-816250880
  2824 00002A52 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  2825 00002A55 50                      	push	eax
  2826 00002A56 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2827 00002A59 8B487C                  	mov	ecx, DWORD PTR [eax+124]
  2828 00002A5C 51                      	push	ecx
  2829 00002A5D FF15[D4104000]          	call _tmcGetByFieldHcode
  2830 00002A63 81C40C000000            	add	esp,12
  2831                                  
  2832                                  
  2833                                  
  2834                                  	;tmcAssign(Iq_ave,reg[31]);
  2835 00002A69 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2836 00002A6C 8B487C                  	mov	ecx, DWORD PTR [eax+124]
  2837 00002A6F 51                      	push	ecx
  2838 00002A70 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  2839 00002A73 50                      	push	eax
  2840 00002A74 FF15[68104000]          	call _tmcAssign
  2841 00002A7A 81C408000000            	add	esp,8
  2842                                  
  2843                                  	;//statement here,line 14
  2844                                  
  2845                                  	;// % Lines 15--15:
  2846                                  	;//        Thetas = www.Thetas;
  2847                                  
  2848                                  
  2849                                  
  2850                                  	;tmcGetByFieldHcode(reg[35],www,0x49b50000);/* Thetas */
  2851 00002A80 680000B549              	push	1236598784
  2852 00002A85 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  2853 00002A88 50                      	push	eax
  2854 00002A89 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2855 00002A8C 8B888C000000            	mov	ecx, DWORD PTR [eax+140]
  2856 00002A92 51                      	push	ecx
  2857 00002A93 FF15[D4104000]          	call _tmcGetByFieldHcode
  2858 00002A99 81C40C000000            	add	esp,12
  2859                                  
  2860                                  
  2861                                  
  2862                                  	;tmcAssign(Thetas,reg[35]);
  2863 00002A9F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2864 00002AA2 8B888C000000            	mov	ecx, DWORD PTR [eax+140]
  2865 00002AA8 51                      	push	ecx
  2866 00002AA9 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  2867 00002AAC 50                      	push	eax
  2868 00002AAD FF15[68104000]          	call _tmcAssign
  2869 00002AB3 81C408000000            	add	esp,8
  2870                                  
  2871                                  	;//statement here,line 15
  2872                                  
  2873                                  	;// % Lines 16--17:
  2874                                  	;//        
  2875                                  
  2876                                  	;//        Y1=min(Iq_ave);
  2877                                  
  2878                                  
  2879                                  
  2880                                  	;//CALL function
  2881                                  	;tmcReallocRegister(reg[38]);
  2882                                  	;tmcReallocRegister(reg[39]);
  2883                                  	;tmcmin(1,1, reg[38], reg[39], Iq_ave,NULL,NULL);
  2884 00002AB9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2885 00002ABC 8B8898000000            	mov	ecx, DWORD PTR [eax+152]
  2886 00002AC2 51                      	push	ecx
  2887 00002AC3 FF15[40114000]          	call _tmcReallocRegister
  2888 00002AC9 81C404000000            	add	esp,4
  2889 00002ACF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2890 00002AD2 8B889C000000            	mov	ecx, DWORD PTR [eax+156]
  2891 00002AD8 51                      	push	ecx
  2892 00002AD9 FF15[40114000]          	call _tmcReallocRegister
  2893 00002ADF 81C404000000            	add	esp,4
  2894 00002AE5 6800000000              	push	0
  2895 00002AEA 6800000000              	push	0
  2896 00002AEF 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  2897 00002AF2 50                      	push	eax
  2898 00002AF3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2899 00002AF6 8B889C000000            	mov	ecx, DWORD PTR [eax+156]
  2900 00002AFC 51                      	push	ecx
  2901 00002AFD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2902 00002B00 8B8898000000            	mov	ecx, DWORD PTR [eax+152]
  2903 00002B06 51                      	push	ecx
  2904 00002B07 6801000000              	push	1
  2905 00002B0C 6801000000              	push	1
  2906 00002B11 FF15[78124000]          	call _tmcmin
  2907 00002B17 81C41C000000            	add	esp,28
  2908                                  
  2909                                  
  2910                                  
  2911                                  	;tmcAssign(Y1,reg[38]);
  2912 00002B1D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2913 00002B20 8B8898000000            	mov	ecx, DWORD PTR [eax+152]
  2914 00002B26 51                      	push	ecx
  2915 00002B27 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  2916 00002B2A 50                      	push	eax
  2917 00002B2B FF15[68104000]          	call _tmcAssign
  2918 00002B31 81C408000000            	add	esp,8
  2919                                  
  2920                                  	;//statement here,line 17
  2921                                  
  2922                                  	;// % Lines 18--18:
  2923                                  	;//        Y2=max(Iq_ave);
  2924                                  
  2925                                  
  2926                                  
  2927                                  	;//CALL function
  2928                                  	;tmcReallocRegister(reg[42]);
  2929                                  	;tmcReallocRegister(reg[43]);
  2930                                  	;tmcmax(1,1, reg[42], reg[43], Iq_ave,NULL,NULL);
  2931 00002B37 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2932 00002B3A 8B88A8000000            	mov	ecx, DWORD PTR [eax+168]
  2933 00002B40 51                      	push	ecx
  2934 00002B41 FF15[40114000]          	call _tmcReallocRegister
  2935 00002B47 81C404000000            	add	esp,4
  2936 00002B4D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2937 00002B50 8B88AC000000            	mov	ecx, DWORD PTR [eax+172]
  2938 00002B56 51                      	push	ecx
  2939 00002B57 FF15[40114000]          	call _tmcReallocRegister
  2940 00002B5D 81C404000000            	add	esp,4
  2941 00002B63 6800000000              	push	0
  2942 00002B68 6800000000              	push	0
  2943 00002B6D 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  2944 00002B70 50                      	push	eax
  2945 00002B71 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2946 00002B74 8B88AC000000            	mov	ecx, DWORD PTR [eax+172]
  2947 00002B7A 51                      	push	ecx
  2948 00002B7B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2949 00002B7E 8B88A8000000            	mov	ecx, DWORD PTR [eax+168]
  2950 00002B84 51                      	push	ecx
  2951 00002B85 6801000000              	push	1
  2952 00002B8A 6801000000              	push	1
  2953 00002B8F FF15[74124000]          	call _tmcmax
  2954 00002B95 81C41C000000            	add	esp,28
  2955                                  
  2956                                  
  2957                                  
  2958                                  	;tmcAssign(Y2,reg[42]);
  2959 00002B9B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2960 00002B9E 8B88A8000000            	mov	ecx, DWORD PTR [eax+168]
  2961 00002BA4 51                      	push	ecx
  2962 00002BA5 8B45D0                  	mov	eax, DWORD PTR [ebp+-48]
  2963 00002BA8 50                      	push	eax
  2964 00002BA9 FF15[68104000]          	call _tmcAssign
  2965 00002BAF 81C408000000            	add	esp,8
  2966                                  
  2967                                  	;//statement here,line 18
  2968                                  
  2969                                  	;// % Lines 19--19:
  2970                                  	;//        [I2] =find( Iq_ave < (Y1 + 0.5*( Y2-Y1  )   )  );
  2971                                  
  2972                                  
  2973                                  
  2974                                  
  2975                                  
  2976                                  	;tmcScalar(reg[47],5.000000000000000e-001);
  2977 00002BB5 680000E03F              	push	0x3fe00000
  2978 00002BBA 6800000000              	push	0x0
  2979 00002BBF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2980 00002BC2 8B88BC000000            	mov	ecx, DWORD PTR [eax+188]
  2981 00002BC8 51                      	push	ecx
  2982 00002BC9 FF15[44114000]          	call _tmcScalar
  2983 00002BCF 81C40C000000            	add	esp,12
  2984                                  
  2985                                  
  2986                                  
  2987                                  
  2988                                  
  2989                                  	;tmcSub(reg[50],Y2,Y1);
  2990 00002BD5 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  2991 00002BD8 50                      	push	eax
  2992 00002BD9 8B45D0                  	mov	eax, DWORD PTR [ebp+-48]
  2993 00002BDC 50                      	push	eax
  2994 00002BDD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  2995 00002BE0 8B88C8000000            	mov	ecx, DWORD PTR [eax+200]
  2996 00002BE6 51                      	push	ecx
  2997 00002BE7 FF15[48114000]          	call _tmcSub
  2998 00002BED 81C40C000000            	add	esp,12
  2999                                  
  3000                                  	;tmcMul(reg[51],reg[47],reg[50]);
  3001 00002BF3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3002 00002BF6 8B88C8000000            	mov	ecx, DWORD PTR [eax+200]
  3003 00002BFC 51                      	push	ecx
  3004 00002BFD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3005 00002C00 8B88BC000000            	mov	ecx, DWORD PTR [eax+188]
  3006 00002C06 51                      	push	ecx
  3007 00002C07 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3008 00002C0A 8B88CC000000            	mov	ecx, DWORD PTR [eax+204]
  3009 00002C10 51                      	push	ecx
  3010 00002C11 FF15[18114000]          	call _tmcMul
  3011 00002C17 81C40C000000            	add	esp,12
  3012                                  
  3013                                  	;tmcAdd(reg[52],Y1,reg[51]);
  3014 00002C1D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3015 00002C20 8B88CC000000            	mov	ecx, DWORD PTR [eax+204]
  3016 00002C26 51                      	push	ecx
  3017 00002C27 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  3018 00002C2A 50                      	push	eax
  3019 00002C2B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3020 00002C2E 8B88D0000000            	mov	ecx, DWORD PTR [eax+208]
  3021 00002C34 51                      	push	ecx
  3022 00002C35 FF15[5C104000]          	call _tmcAdd
  3023 00002C3B 81C40C000000            	add	esp,12
  3024                                  
  3025                                  	;tmcLt(reg[53],Iq_ave,reg[52]);
  3026 00002C41 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3027 00002C44 8B88D0000000            	mov	ecx, DWORD PTR [eax+208]
  3028 00002C4A 51                      	push	ecx
  3029 00002C4B 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  3030 00002C4E 50                      	push	eax
  3031 00002C4F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3032 00002C52 8B88D4000000            	mov	ecx, DWORD PTR [eax+212]
  3033 00002C58 51                      	push	ecx
  3034 00002C59 FF15[14114000]          	call _tmcLt
  3035 00002C5F 81C40C000000            	add	esp,12
  3036                                  
  3037                                  	;//CALL function
  3038                                  	;tmcReallocRegister(reg[54]);
  3039                                  	;tmcReallocRegister(reg[55]);
  3040                                  	;tmcReallocRegister(reg[56]);
  3041                                  	;tmcfind(1,1, reg[54], reg[55], reg[56], reg[53],NULL,NULL);
  3042 00002C65 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3043 00002C68 8B88D8000000            	mov	ecx, DWORD PTR [eax+216]
  3044 00002C6E 51                      	push	ecx
  3045 00002C6F FF15[40114000]          	call _tmcReallocRegister
  3046 00002C75 81C404000000            	add	esp,4
  3047 00002C7B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3048 00002C7E 8B88DC000000            	mov	ecx, DWORD PTR [eax+220]
  3049 00002C84 51                      	push	ecx
  3050 00002C85 FF15[40114000]          	call _tmcReallocRegister
  3051 00002C8B 81C404000000            	add	esp,4
  3052 00002C91 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3053 00002C94 8B88E0000000            	mov	ecx, DWORD PTR [eax+224]
  3054 00002C9A 51                      	push	ecx
  3055 00002C9B FF15[40114000]          	call _tmcReallocRegister
  3056 00002CA1 81C404000000            	add	esp,4
  3057 00002CA7 6800000000              	push	0
  3058 00002CAC 6800000000              	push	0
  3059 00002CB1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3060 00002CB4 8B88D4000000            	mov	ecx, DWORD PTR [eax+212]
  3061 00002CBA 51                      	push	ecx
  3062 00002CBB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3063 00002CBE 8B88E0000000            	mov	ecx, DWORD PTR [eax+224]
  3064 00002CC4 51                      	push	ecx
  3065 00002CC5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3066 00002CC8 8B88DC000000            	mov	ecx, DWORD PTR [eax+220]
  3067 00002CCE 51                      	push	ecx
  3068 00002CCF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3069 00002CD2 8B88D8000000            	mov	ecx, DWORD PTR [eax+216]
  3070 00002CD8 51                      	push	ecx
  3071 00002CD9 6801000000              	push	1
  3072 00002CDE 6801000000              	push	1
  3073 00002CE3 FF15[E8114000]          	call _tmcfind
  3074 00002CE9 81C420000000            	add	esp,32
  3075                                  
  3076                                  
  3077                                  
  3078                                  	;tmcAssign(I2,reg[54]);
  3079 00002CEF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3080 00002CF2 8B88D8000000            	mov	ecx, DWORD PTR [eax+216]
  3081 00002CF8 51                      	push	ecx
  3082 00002CF9 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  3083 00002CFC 50                      	push	eax
  3084 00002CFD FF15[68104000]          	call _tmcAssign
  3085 00002D03 81C408000000            	add	esp,8
  3086                                  
  3087                                  	;//statement here,line 19
  3088                                  
  3089                                  	;// % Lines 20--20:
  3090                                  	;//        Iq_ave=Iq_ave(I2);
  3091                                  
  3092                                  
  3093                                  
  3094                                  
  3095                                  
  3096                                  	;tmcGetByIndex(reg[60],Iq_ave,1,I2);
  3097 00002D09 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  3098 00002D0C 50                      	push	eax
  3099 00002D0D 6801000000              	push	1
  3100 00002D12 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  3101 00002D15 50                      	push	eax
  3102 00002D16 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3103 00002D19 8B88F0000000            	mov	ecx, DWORD PTR [eax+240]
  3104 00002D1F 51                      	push	ecx
  3105 00002D20 FF15[D8104000]          	call _tmcGetByIndex
  3106 00002D26 81C410000000            	add	esp,16
  3107                                  
  3108                                  
  3109                                  
  3110                                  	;tmcAssign(Iq_ave,reg[60]);
  3111 00002D2C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3112 00002D2F 8B88F0000000            	mov	ecx, DWORD PTR [eax+240]
  3113 00002D35 51                      	push	ecx
  3114 00002D36 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  3115 00002D39 50                      	push	eax
  3116 00002D3A FF15[68104000]          	call _tmcAssign
  3117 00002D40 81C408000000            	add	esp,8
  3118                                  
  3119                                  	;//statement here,line 20
  3120                                  
  3121                                  	;// % Lines 21--21:
  3122                                  	;//        Thetas=Thetas(I2);
  3123                                  
  3124                                  
  3125                                  
  3126                                  
  3127                                  
  3128                                  	;tmcGetByIndex(reg[64],Thetas,1,I2);
  3129 00002D46 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  3130 00002D49 50                      	push	eax
  3131 00002D4A 6801000000              	push	1
  3132 00002D4F 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3133 00002D52 50                      	push	eax
  3134 00002D53 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3135 00002D56 8B8800010000            	mov	ecx, DWORD PTR [eax+256]
  3136 00002D5C 51                      	push	ecx
  3137 00002D5D FF15[D8104000]          	call _tmcGetByIndex
  3138 00002D63 81C410000000            	add	esp,16
  3139                                  
  3140                                  
  3141                                  
  3142                                  	;tmcAssign(Thetas,reg[64]);
  3143 00002D69 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3144 00002D6C 8B8800010000            	mov	ecx, DWORD PTR [eax+256]
  3145 00002D72 51                      	push	ecx
  3146 00002D73 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3147 00002D76 50                      	push	eax
  3148 00002D77 FF15[68104000]          	call _tmcAssign
  3149 00002D7D 81C408000000            	add	esp,8
  3150                                  
  3151                                  	;//statement here,line 21
  3152                                  
  3153                                  	;// % Lines 22--24:
  3154                                  	;//
  3155                                  
  3156                                  	;//        
  3157                                  
  3158                                  	;//        lena = length(Iq_ave);
  3159                                  
  3160                                  
  3161                                  
  3162                                  	;//CALL function
  3163                                  	;tmcReallocRegister(reg[67]);
  3164                                  	;tmclength(1,1, reg[67], Iq_ave);
  3165 00002D83 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3166 00002D86 8B880C010000            	mov	ecx, DWORD PTR [eax+268]
  3167 00002D8C 51                      	push	ecx
  3168 00002D8D FF15[40114000]          	call _tmcReallocRegister
  3169 00002D93 81C404000000            	add	esp,4
  3170 00002D99 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  3171 00002D9C 50                      	push	eax
  3172 00002D9D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3173 00002DA0 8B880C010000            	mov	ecx, DWORD PTR [eax+268]
  3174 00002DA6 51                      	push	ecx
  3175 00002DA7 6801000000              	push	1
  3176 00002DAC 6801000000              	push	1
  3177 00002DB1 FF15[58124000]          	call _tmclength
  3178 00002DB7 81C410000000            	add	esp,16
  3179                                  
  3180                                  
  3181                                  
  3182                                  	;tmcAssign(lena,reg[67]);
  3183 00002DBD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3184 00002DC0 8B880C010000            	mov	ecx, DWORD PTR [eax+268]
  3185 00002DC6 51                      	push	ecx
  3186 00002DC7 8B45C8                  	mov	eax, DWORD PTR [ebp+-56]
  3187 00002DCA 50                      	push	eax
  3188 00002DCB FF15[68104000]          	call _tmcAssign
  3189 00002DD1 81C408000000            	add	esp,8
  3190                                  
  3191                                  	;//statement here,line 24
  3192                                  
  3193                                  	;// % Lines 25--26:
  3194                                  	;//        
  3195                                  
  3196                                  	;//        Ha = [Thetas(:).^2, Thetas(:), ones(lena,1)];
  3197                                  
  3198                                  
  3199                                  
  3200                                  	;tmcCreateMagicColon(reg[70]);
  3201 00002DD7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3202 00002DDA 8B8818010000            	mov	ecx, DWORD PTR [eax+280]
  3203 00002DE0 51                      	push	ecx
  3204 00002DE1 FF15[98104000]          	call _tmcCreateMagicColon
  3205 00002DE7 81C404000000            	add	esp,4
  3206                                  
  3207                                  	;tmcGetByIndex(reg[71],Thetas,1,reg[70]);
  3208 00002DED 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3209 00002DF0 8B8818010000            	mov	ecx, DWORD PTR [eax+280]
  3210 00002DF6 51                      	push	ecx
  3211 00002DF7 6801000000              	push	1
  3212 00002DFC 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3213 00002DFF 50                      	push	eax
  3214 00002E00 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3215 00002E03 8B881C010000            	mov	ecx, DWORD PTR [eax+284]
  3216 00002E09 51                      	push	ecx
  3217 00002E0A FF15[D8104000]          	call _tmcGetByIndex
  3218 00002E10 81C410000000            	add	esp,16
  3219                                  
  3220                                  	;tmcScalar(reg[72],2.000000000000000e+000);
  3221 00002E16 6800000040              	push	0x40000000
  3222 00002E1B 6800000000              	push	0x0
  3223 00002E20 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3224 00002E23 8B8820010000            	mov	ecx, DWORD PTR [eax+288]
  3225 00002E29 51                      	push	ecx
  3226 00002E2A FF15[44114000]          	call _tmcScalar
  3227 00002E30 81C40C000000            	add	esp,12
  3228                                  
  3229                                  	;tmcPowerScalar(reg[73],reg[71],reg[72]);
  3230 00002E36 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3231 00002E39 8B8820010000            	mov	ecx, DWORD PTR [eax+288]
  3232 00002E3F 51                      	push	ecx
  3233 00002E40 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3234 00002E43 8B881C010000            	mov	ecx, DWORD PTR [eax+284]
  3235 00002E49 51                      	push	ecx
  3236 00002E4A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3237 00002E4D 8B8824010000            	mov	ecx, DWORD PTR [eax+292]
  3238 00002E53 51                      	push	ecx
  3239 00002E54 FF15[3C114000]          	call _tmcPowerScalar
  3240 00002E5A 81C40C000000            	add	esp,12
  3241                                  
  3242                                  
  3243                                  
  3244                                  	;tmcCreateMagicColon(reg[75]);
  3245 00002E60 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3246 00002E63 8B882C010000            	mov	ecx, DWORD PTR [eax+300]
  3247 00002E69 51                      	push	ecx
  3248 00002E6A FF15[98104000]          	call _tmcCreateMagicColon
  3249 00002E70 81C404000000            	add	esp,4
  3250                                  
  3251                                  	;tmcGetByIndex(reg[76],Thetas,1,reg[75]);
  3252 00002E76 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3253 00002E79 8B882C010000            	mov	ecx, DWORD PTR [eax+300]
  3254 00002E7F 51                      	push	ecx
  3255 00002E80 6801000000              	push	1
  3256 00002E85 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3257 00002E88 50                      	push	eax
  3258 00002E89 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3259 00002E8C 8B8830010000            	mov	ecx, DWORD PTR [eax+304]
  3260 00002E92 51                      	push	ecx
  3261 00002E93 FF15[D8104000]          	call _tmcGetByIndex
  3262 00002E99 81C410000000            	add	esp,16
  3263                                  
  3264                                  
  3265                                  
  3266                                  	;tmcScalar(reg[78],1.000000000000000e+000);
  3267 00002E9F 680000F03F              	push	0x3ff00000
  3268 00002EA4 6800000000              	push	0x0
  3269 00002EA9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3270 00002EAC 8B8838010000            	mov	ecx, DWORD PTR [eax+312]
  3271 00002EB2 51                      	push	ecx
  3272 00002EB3 FF15[44114000]          	call _tmcScalar
  3273 00002EB9 81C40C000000            	add	esp,12
  3274                                  
  3275                                  	;//CALL function
  3276                                  	;tmcReallocRegister(reg[79]);
  3277                                  	;tmcones(1,2, reg[79], lena, reg[78]);
  3278 00002EBF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3279 00002EC2 8B883C010000            	mov	ecx, DWORD PTR [eax+316]
  3280 00002EC8 51                      	push	ecx
  3281 00002EC9 FF15[40114000]          	call _tmcReallocRegister
  3282 00002ECF 81C404000000            	add	esp,4
  3283 00002ED5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3284 00002ED8 8B8838010000            	mov	ecx, DWORD PTR [eax+312]
  3285 00002EDE 51                      	push	ecx
  3286 00002EDF 8B45C8                  	mov	eax, DWORD PTR [ebp+-56]
  3287 00002EE2 50                      	push	eax
  3288 00002EE3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3289 00002EE6 8B883C010000            	mov	ecx, DWORD PTR [eax+316]
  3290 00002EEC 51                      	push	ecx
  3291 00002EED 6802000000              	push	2
  3292 00002EF2 6801000000              	push	1
  3293 00002EF7 FF15[88124000]          	call _tmcones
  3294 00002EFD 81C414000000            	add	esp,20
  3295                                  
  3296                                  ;tmcCollectColumns(reg[80],3,reg[73],reg[76],reg[79]);
  3297 00002F03 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3298 00002F06 8B883C010000            	mov	ecx, DWORD PTR [eax+316]
  3299 00002F0C 51                      	push	ecx
  3300 00002F0D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3301 00002F10 8B8830010000            	mov	ecx, DWORD PTR [eax+304]
  3302 00002F16 51                      	push	ecx
  3303 00002F17 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3304 00002F1A 8B8824010000            	mov	ecx, DWORD PTR [eax+292]
  3305 00002F20 51                      	push	ecx
  3306 00002F21 6803000000              	push	3
  3307 00002F26 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3308 00002F29 8B8840010000            	mov	ecx, DWORD PTR [eax+320]
  3309 00002F2F 51                      	push	ecx
  3310 00002F30 FF15[7C104000]          	call _tmcCollectColumns
  3311 00002F36 81C414000000            	add	esp,20
  3312                                  
  3313                                  ;tmcCollectRows(reg[81],1,reg[80]);
  3314 00002F3C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3315 00002F3F 8B8840010000            	mov	ecx, DWORD PTR [eax+320]
  3316 00002F45 51                      	push	ecx
  3317 00002F46 6801000000              	push	1
  3318 00002F4B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3319 00002F4E 8B8844010000            	mov	ecx, DWORD PTR [eax+324]
  3320 00002F54 51                      	push	ecx
  3321 00002F55 FF15[80104000]          	call _tmcCollectRows
  3322 00002F5B 81C40C000000            	add	esp,12
  3323                                  
  3324                                  
  3325                                  
  3326                                  	;tmcAssign(Ha,reg[81]);
  3327 00002F61 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3328 00002F64 8B8844010000            	mov	ecx, DWORD PTR [eax+324]
  3329 00002F6A 51                      	push	ecx
  3330 00002F6B 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  3331 00002F6E 50                      	push	eax
  3332 00002F6F FF15[68104000]          	call _tmcAssign
  3333 00002F75 81C408000000            	add	esp,8
  3334                                  
  3335                                  	;//statement here,line 26
  3336                                  
  3337                                  	;// % Lines 27--27:
  3338                                  	;//        thta = (Ha'*Ha)\(Ha'*Iq_ave(:)); % Iq_ave = Thetas^2*thta(1) + Thetas*thta(2)+thta(3)
  3339                                  
  3340                                  
  3341                                  
  3342                                  	;tmcTranspose(reg[84],Ha);
  3343 00002F7B 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  3344 00002F7E 50                      	push	eax
  3345 00002F7F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3346 00002F82 8B8850010000            	mov	ecx, DWORD PTR [eax+336]
  3347 00002F88 51                      	push	ecx
  3348 00002F89 FF15[50114000]          	call _tmcTranspose
  3349 00002F8F 81C408000000            	add	esp,8
  3350                                  
  3351                                  
  3352                                  
  3353                                  	;tmcMul(reg[86],reg[84],Ha);
  3354 00002F95 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  3355 00002F98 50                      	push	eax
  3356 00002F99 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3357 00002F9C 8B8850010000            	mov	ecx, DWORD PTR [eax+336]
  3358 00002FA2 51                      	push	ecx
  3359 00002FA3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3360 00002FA6 8B8858010000            	mov	ecx, DWORD PTR [eax+344]
  3361 00002FAC 51                      	push	ecx
  3362 00002FAD FF15[18114000]          	call _tmcMul
  3363 00002FB3 81C40C000000            	add	esp,12
  3364                                  
  3365                                  
  3366                                  
  3367                                  	;tmcTranspose(reg[88],Ha);
  3368 00002FB9 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  3369 00002FBC 50                      	push	eax
  3370 00002FBD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3371 00002FC0 8B8860010000            	mov	ecx, DWORD PTR [eax+352]
  3372 00002FC6 51                      	push	ecx
  3373 00002FC7 FF15[50114000]          	call _tmcTranspose
  3374 00002FCD 81C408000000            	add	esp,8
  3375                                  
  3376                                  
  3377                                  
  3378                                  	;tmcCreateMagicColon(reg[90]);
  3379 00002FD3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3380 00002FD6 8B8868010000            	mov	ecx, DWORD PTR [eax+360]
  3381 00002FDC 51                      	push	ecx
  3382 00002FDD FF15[98104000]          	call _tmcCreateMagicColon
  3383 00002FE3 81C404000000            	add	esp,4
  3384                                  
  3385                                  	;tmcGetByIndex(reg[91],Iq_ave,1,reg[90]);
  3386 00002FE9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3387 00002FEC 8B8868010000            	mov	ecx, DWORD PTR [eax+360]
  3388 00002FF2 51                      	push	ecx
  3389 00002FF3 6801000000              	push	1
  3390 00002FF8 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  3391 00002FFB 50                      	push	eax
  3392 00002FFC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3393 00002FFF 8B886C010000            	mov	ecx, DWORD PTR [eax+364]
  3394 00003005 51                      	push	ecx
  3395 00003006 FF15[D8104000]          	call _tmcGetByIndex
  3396 0000300C 81C410000000            	add	esp,16
  3397                                  
  3398                                  	;tmcMul(reg[92],reg[88],reg[91]);
  3399 00003012 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3400 00003015 8B886C010000            	mov	ecx, DWORD PTR [eax+364]
  3401 0000301B 51                      	push	ecx
  3402 0000301C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3403 0000301F 8B8860010000            	mov	ecx, DWORD PTR [eax+352]
  3404 00003025 51                      	push	ecx
  3405 00003026 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3406 00003029 8B8870010000            	mov	ecx, DWORD PTR [eax+368]
  3407 0000302F 51                      	push	ecx
  3408 00003030 FF15[18114000]          	call _tmcMul
  3409 00003036 81C40C000000            	add	esp,12
  3410                                  
  3411                                  	;tmcLeftDiv(reg[93],reg[86],reg[92]);
  3412 0000303C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3413 0000303F 8B8870010000            	mov	ecx, DWORD PTR [eax+368]
  3414 00003045 51                      	push	ecx
  3415 00003046 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3416 00003049 8B8858010000            	mov	ecx, DWORD PTR [eax+344]
  3417 0000304F 51                      	push	ecx
  3418 00003050 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3419 00003053 8B8874010000            	mov	ecx, DWORD PTR [eax+372]
  3420 00003059 51                      	push	ecx
  3421 0000305A FF15[10114000]          	call _tmcLeftDiv
  3422 00003060 81C40C000000            	add	esp,12
  3423                                  
  3424                                  
  3425                                  
  3426                                  	;tmcAssign(thta,reg[93]);
  3427 00003066 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3428 00003069 8B8874010000            	mov	ecx, DWORD PTR [eax+372]
  3429 0000306F 51                      	push	ecx
  3430 00003070 8B45C0                  	mov	eax, DWORD PTR [ebp+-64]
  3431 00003073 50                      	push	eax
  3432 00003074 FF15[68104000]          	call _tmcAssign
  3433 0000307A 81C408000000            	add	esp,8
  3434                                  
  3435                                  	;//statement here,line 27
  3436                                  
  3437                                  	;// % Lines 28--29:
  3438                                  	;//    
  3439                                  
  3440                                  	;//    Thetas_simul = [Thetas(1):1:Thetas(end)];  
  3441                                  
  3442                                  
  3443                                  
  3444                                  	;tmcScalar(reg[96],1.000000000000000e+000);
  3445 00003080 680000F03F              	push	0x3ff00000
  3446 00003085 6800000000              	push	0x0
  3447 0000308A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3448 0000308D 8B8880010000            	mov	ecx, DWORD PTR [eax+384]
  3449 00003093 51                      	push	ecx
  3450 00003094 FF15[44114000]          	call _tmcScalar
  3451 0000309A 81C40C000000            	add	esp,12
  3452                                  
  3453                                  	;tmcGetByIndex(reg[97],Thetas,1,reg[96]);
  3454 000030A0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3455 000030A3 8B8880010000            	mov	ecx, DWORD PTR [eax+384]
  3456 000030A9 51                      	push	ecx
  3457 000030AA 6801000000              	push	1
  3458 000030AF 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3459 000030B2 50                      	push	eax
  3460 000030B3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3461 000030B6 8B8884010000            	mov	ecx, DWORD PTR [eax+388]
  3462 000030BC 51                      	push	ecx
  3463 000030BD FF15[D8104000]          	call _tmcGetByIndex
  3464 000030C3 81C410000000            	add	esp,16
  3465                                  
  3466                                  
  3467                                  
  3468                                  	;tmcGetEnd(reg[99],Thetas,1,1);
  3469 000030C9 6801000000              	push	1
  3470 000030CE 6801000000              	push	1
  3471 000030D3 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3472 000030D6 50                      	push	eax
  3473 000030D7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3474 000030DA 8B888C010000            	mov	ecx, DWORD PTR [eax+396]
  3475 000030E0 51                      	push	ecx
  3476 000030E1 FF15[E0104000]          	call _tmcGetEnd
  3477 000030E7 81C410000000            	add	esp,16
  3478                                  
  3479                                  	;tmcGetByIndex(reg[100],Thetas,1,reg[99]);
  3480 000030ED 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3481 000030F0 8B888C010000            	mov	ecx, DWORD PTR [eax+396]
  3482 000030F6 51                      	push	ecx
  3483 000030F7 6801000000              	push	1
  3484 000030FC 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  3485 000030FF 50                      	push	eax
  3486 00003100 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3487 00003103 8B8890010000            	mov	ecx, DWORD PTR [eax+400]
  3488 00003109 51                      	push	ecx
  3489 0000310A FF15[D8104000]          	call _tmcGetByIndex
  3490 00003110 81C410000000            	add	esp,16
  3491                                  
  3492                                  	;tmcScalar(reg[101],1.000000000000000e+000);
  3493 00003116 680000F03F              	push	0x3ff00000
  3494 0000311B 6800000000              	push	0x0
  3495 00003120 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3496 00003123 8B8894010000            	mov	ecx, DWORD PTR [eax+404]
  3497 00003129 51                      	push	ecx
  3498 0000312A FF15[44114000]          	call _tmcScalar
  3499 00003130 81C40C000000            	add	esp,12
  3500                                  
  3501                                  ;	tmcCreateColonBaseIncLimit(reg[102],reg[97],reg[101],reg[100]);
  3502 00003136 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3503 00003139 8B8890010000            	mov	ecx, DWORD PTR [eax+400]
  3504 0000313F 51                      	push	ecx
  3505 00003140 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3506 00003143 8B8894010000            	mov	ecx, DWORD PTR [eax+404]
  3507 00003149 51                      	push	ecx
  3508 0000314A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3509 0000314D 8B8884010000            	mov	ecx, DWORD PTR [eax+388]
  3510 00003153 51                      	push	ecx
  3511 00003154 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3512 00003157 8B8898010000            	mov	ecx, DWORD PTR [eax+408]
  3513 0000315D 51                      	push	ecx
  3514 0000315E FF15[90104000]          	call _tmcCreateColonBaseIncLimit
  3515 00003164 81C410000000            	add	esp,16
  3516                                  
  3517                                  ;tmcCollectColumns(reg[103],1,reg[102]);
  3518 0000316A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3519 0000316D 8B8898010000            	mov	ecx, DWORD PTR [eax+408]
  3520 00003173 51                      	push	ecx
  3521 00003174 6801000000              	push	1
  3522 00003179 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3523 0000317C 8B889C010000            	mov	ecx, DWORD PTR [eax+412]
  3524 00003182 51                      	push	ecx
  3525 00003183 FF15[7C104000]          	call _tmcCollectColumns
  3526 00003189 81C40C000000            	add	esp,12
  3527                                  
  3528                                  ;tmcCollectRows(reg[104],1,reg[103]);
  3529 0000318F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3530 00003192 8B889C010000            	mov	ecx, DWORD PTR [eax+412]
  3531 00003198 51                      	push	ecx
  3532 00003199 6801000000              	push	1
  3533 0000319E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3534 000031A1 8B88A0010000            	mov	ecx, DWORD PTR [eax+416]
  3535 000031A7 51                      	push	ecx
  3536 000031A8 FF15[80104000]          	call _tmcCollectRows
  3537 000031AE 81C40C000000            	add	esp,12
  3538                                  
  3539                                  
  3540                                  
  3541                                  	;tmcAssign(Thetas_simul,reg[104]);
  3542 000031B4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3543 000031B7 8B88A0010000            	mov	ecx, DWORD PTR [eax+416]
  3544 000031BD 51                      	push	ecx
  3545 000031BE 8B45BC                  	mov	eax, DWORD PTR [ebp+-68]
  3546 000031C1 50                      	push	eax
  3547 000031C2 FF15[68104000]          	call _tmcAssign
  3548 000031C8 81C408000000            	add	esp,8
  3549                                  
  3550                                  	;//statement here,line 29
  3551                                  
  3552                                  	;// % Lines 30--30:
  3553                                  	;//    Ha_simul = [Thetas_simul(:).^2, Thetas_simul(:), ones(length(Thetas_simul),1)];
  3554                                  
  3555                                  
  3556                                  
  3557                                  	;tmcCreateMagicColon(reg[107]);
  3558 000031CE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3559 000031D1 8B88AC010000            	mov	ecx, DWORD PTR [eax+428]
  3560 000031D7 51                      	push	ecx
  3561 000031D8 FF15[98104000]          	call _tmcCreateMagicColon
  3562 000031DE 81C404000000            	add	esp,4
  3563                                  
  3564                                  	;tmcGetByIndex(reg[108],Thetas_simul,1,reg[107]);
  3565 000031E4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3566 000031E7 8B88AC010000            	mov	ecx, DWORD PTR [eax+428]
  3567 000031ED 51                      	push	ecx
  3568 000031EE 6801000000              	push	1
  3569 000031F3 8B45BC                  	mov	eax, DWORD PTR [ebp+-68]
  3570 000031F6 50                      	push	eax
  3571 000031F7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3572 000031FA 8B88B0010000            	mov	ecx, DWORD PTR [eax+432]
  3573 00003200 51                      	push	ecx
  3574 00003201 FF15[D8104000]          	call _tmcGetByIndex
  3575 00003207 81C410000000            	add	esp,16
  3576                                  
  3577                                  	;tmcScalar(reg[109],2.000000000000000e+000);
  3578 0000320D 6800000040              	push	0x40000000
  3579 00003212 6800000000              	push	0x0
  3580 00003217 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3581 0000321A 8B88B4010000            	mov	ecx, DWORD PTR [eax+436]
  3582 00003220 51                      	push	ecx
  3583 00003221 FF15[44114000]          	call _tmcScalar
  3584 00003227 81C40C000000            	add	esp,12
  3585                                  
  3586                                  	;tmcPowerScalar(reg[110],reg[108],reg[109]);
  3587 0000322D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3588 00003230 8B88B4010000            	mov	ecx, DWORD PTR [eax+436]
  3589 00003236 51                      	push	ecx
  3590 00003237 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3591 0000323A 8B88B0010000            	mov	ecx, DWORD PTR [eax+432]
  3592 00003240 51                      	push	ecx
  3593 00003241 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3594 00003244 8B88B8010000            	mov	ecx, DWORD PTR [eax+440]
  3595 0000324A 51                      	push	ecx
  3596 0000324B FF15[3C114000]          	call _tmcPowerScalar
  3597 00003251 81C40C000000            	add	esp,12
  3598                                  
  3599                                  
  3600                                  
  3601                                  	;tmcCreateMagicColon(reg[112]);
  3602 00003257 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3603 0000325A 8B88C0010000            	mov	ecx, DWORD PTR [eax+448]
  3604 00003260 51                      	push	ecx
  3605 00003261 FF15[98104000]          	call _tmcCreateMagicColon
  3606 00003267 81C404000000            	add	esp,4
  3607                                  
  3608                                  	;tmcGetByIndex(reg[113],Thetas_simul,1,reg[112]);
  3609 0000326D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3610 00003270 8B88C0010000            	mov	ecx, DWORD PTR [eax+448]
  3611 00003276 51                      	push	ecx
  3612 00003277 6801000000              	push	1
  3613 0000327C 8B45BC                  	mov	eax, DWORD PTR [ebp+-68]
  3614 0000327F 50                      	push	eax
  3615 00003280 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3616 00003283 8B88C4010000            	mov	ecx, DWORD PTR [eax+452]
  3617 00003289 51                      	push	ecx
  3618 0000328A FF15[D8104000]          	call _tmcGetByIndex
  3619 00003290 81C410000000            	add	esp,16
  3620                                  
  3621                                  
  3622                                  
  3623                                  	;//CALL function
  3624                                  	;tmcReallocRegister(reg[115]);
  3625                                  	;tmclength(1,1, reg[115], Thetas_simul);
  3626 00003296 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3627 00003299 8B88CC010000            	mov	ecx, DWORD PTR [eax+460]
  3628 0000329F 51                      	push	ecx
  3629 000032A0 FF15[40114000]          	call _tmcReallocRegister
  3630 000032A6 81C404000000            	add	esp,4
  3631 000032AC 8B45BC                  	mov	eax, DWORD PTR [ebp+-68]
  3632 000032AF 50                      	push	eax
  3633 000032B0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3634 000032B3 8B88CC010000            	mov	ecx, DWORD PTR [eax+460]
  3635 000032B9 51                      	push	ecx
  3636 000032BA 6801000000              	push	1
  3637 000032BF 6801000000              	push	1
  3638 000032C4 FF15[58124000]          	call _tmclength
  3639 000032CA 81C410000000            	add	esp,16
  3640                                  
  3641                                  	;tmcScalar(reg[116],1.000000000000000e+000);
  3642 000032D0 680000F03F              	push	0x3ff00000
  3643 000032D5 6800000000              	push	0x0
  3644 000032DA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3645 000032DD 8B88D0010000            	mov	ecx, DWORD PTR [eax+464]
  3646 000032E3 51                      	push	ecx
  3647 000032E4 FF15[44114000]          	call _tmcScalar
  3648 000032EA 81C40C000000            	add	esp,12
  3649                                  
  3650                                  	;//CALL function
  3651                                  	;tmcReallocRegister(reg[117]);
  3652                                  	;tmcones(1,2, reg[117], reg[115], reg[116]);
  3653 000032F0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3654 000032F3 8B88D4010000            	mov	ecx, DWORD PTR [eax+468]
  3655 000032F9 51                      	push	ecx
  3656 000032FA FF15[40114000]          	call _tmcReallocRegister
  3657 00003300 81C404000000            	add	esp,4
  3658 00003306 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3659 00003309 8B88D0010000            	mov	ecx, DWORD PTR [eax+464]
  3660 0000330F 51                      	push	ecx
  3661 00003310 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3662 00003313 8B88CC010000            	mov	ecx, DWORD PTR [eax+460]
  3663 00003319 51                      	push	ecx
  3664 0000331A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3665 0000331D 8B88D4010000            	mov	ecx, DWORD PTR [eax+468]
  3666 00003323 51                      	push	ecx
  3667 00003324 6802000000              	push	2
  3668 00003329 6801000000              	push	1
  3669 0000332E FF15[88124000]          	call _tmcones
  3670 00003334 81C414000000            	add	esp,20
  3671                                  
  3672                                  ;tmcCollectColumns(reg[118],3,reg[110],reg[113],reg[117]);
  3673 0000333A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3674 0000333D 8B88D4010000            	mov	ecx, DWORD PTR [eax+468]
  3675 00003343 51                      	push	ecx
  3676 00003344 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3677 00003347 8B88C4010000            	mov	ecx, DWORD PTR [eax+452]
  3678 0000334D 51                      	push	ecx
  3679 0000334E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3680 00003351 8B88B8010000            	mov	ecx, DWORD PTR [eax+440]
  3681 00003357 51                      	push	ecx
  3682 00003358 6803000000              	push	3
  3683 0000335D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3684 00003360 8B88D8010000            	mov	ecx, DWORD PTR [eax+472]
  3685 00003366 51                      	push	ecx
  3686 00003367 FF15[7C104000]          	call _tmcCollectColumns
  3687 0000336D 81C414000000            	add	esp,20
  3688                                  
  3689                                  ;tmcCollectRows(reg[119],1,reg[118]);
  3690 00003373 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3691 00003376 8B88D8010000            	mov	ecx, DWORD PTR [eax+472]
  3692 0000337C 51                      	push	ecx
  3693 0000337D 6801000000              	push	1
  3694 00003382 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3695 00003385 8B88DC010000            	mov	ecx, DWORD PTR [eax+476]
  3696 0000338B 51                      	push	ecx
  3697 0000338C FF15[80104000]          	call _tmcCollectRows
  3698 00003392 81C40C000000            	add	esp,12
  3699                                  
  3700                                  
  3701                                  
  3702                                  	;tmcAssign(Ha_simul,reg[119]);
  3703 00003398 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3704 0000339B 8B88DC010000            	mov	ecx, DWORD PTR [eax+476]
  3705 000033A1 51                      	push	ecx
  3706 000033A2 8B45B8                  	mov	eax, DWORD PTR [ebp+-72]
  3707 000033A5 50                      	push	eax
  3708 000033A6 FF15[68104000]          	call _tmcAssign
  3709 000033AC 81C408000000            	add	esp,8
  3710                                  
  3711                                  	;//statement here,line 30
  3712                                  
  3713                                  	;// % Lines 31--32:
  3714                                  	;//
  3715                                  
  3716                                  	;//    Iq_simul=Ha_simul*thta;
  3717                                  
  3718                                  
  3719                                  
  3720                                  
  3721                                  
  3722                                  	;tmcMul(reg[123],Ha_simul,thta);
  3723 000033B2 8B45C0                  	mov	eax, DWORD PTR [ebp+-64]
  3724 000033B5 50                      	push	eax
  3725 000033B6 8B45B8                  	mov	eax, DWORD PTR [ebp+-72]
  3726 000033B9 50                      	push	eax
  3727 000033BA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3728 000033BD 8B88EC010000            	mov	ecx, DWORD PTR [eax+492]
  3729 000033C3 51                      	push	ecx
  3730 000033C4 FF15[18114000]          	call _tmcMul
  3731 000033CA 81C40C000000            	add	esp,12
  3732                                  
  3733                                  
  3734                                  
  3735                                  	;tmcAssign(Iq_simul,reg[123]);
  3736 000033D0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3737 000033D3 8B88EC010000            	mov	ecx, DWORD PTR [eax+492]
  3738 000033D9 51                      	push	ecx
  3739 000033DA 8B45B4                  	mov	eax, DWORD PTR [ebp+-76]
  3740 000033DD 50                      	push	eax
  3741 000033DE FF15[68104000]          	call _tmcAssign
  3742 000033E4 81C408000000            	add	esp,8
  3743                                  
  3744                                  	;//statement here,line 32
  3745                                  
  3746                                  	;// % Lines 33--35:
  3747                                  	;//%     figure(1000);
  3748                                  
  3749                                  	;//%      plot(Thetas,Iq_ave,'r.-',Thetas_simul,Iq_simul,'b');grid on;
  3750                                  
  3751                                  	;//     [Y,I]=min(Iq_simul);
  3752                                  
  3753                                  
  3754                                  
  3755                                  	;//CALL function
  3756                                  	;tmcReallocRegister(reg[126]);
  3757                                  	;tmcReallocRegister(reg[127]);
  3758                                  	;tmcmin(2,1, reg[126], reg[127], Iq_simul,NULL,NULL);
  3759 000033EA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3760 000033ED 8B88F8010000            	mov	ecx, DWORD PTR [eax+504]
  3761 000033F3 51                      	push	ecx
  3762 000033F4 FF15[40114000]          	call _tmcReallocRegister
  3763 000033FA 81C404000000            	add	esp,4
  3764 00003400 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3765 00003403 8B88FC010000            	mov	ecx, DWORD PTR [eax+508]
  3766 00003409 51                      	push	ecx
  3767 0000340A FF15[40114000]          	call _tmcReallocRegister
  3768 00003410 81C404000000            	add	esp,4
  3769 00003416 6800000000              	push	0
  3770 0000341B 6800000000              	push	0
  3771 00003420 8B45B4                  	mov	eax, DWORD PTR [ebp+-76]
  3772 00003423 50                      	push	eax
  3773 00003424 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3774 00003427 8B88FC010000            	mov	ecx, DWORD PTR [eax+508]
  3775 0000342D 51                      	push	ecx
  3776 0000342E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3777 00003431 8B88F8010000            	mov	ecx, DWORD PTR [eax+504]
  3778 00003437 51                      	push	ecx
  3779 00003438 6801000000              	push	1
  3780 0000343D 6802000000              	push	2
  3781 00003442 FF15[78124000]          	call _tmcmin
  3782 00003448 81C41C000000            	add	esp,28
  3783                                  
  3784                                  
  3785                                  
  3786                                  	;tmcAssign(Y,reg[126]);
  3787 0000344E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3788 00003451 8B88F8010000            	mov	ecx, DWORD PTR [eax+504]
  3789 00003457 51                      	push	ecx
  3790 00003458 8B45B0                  	mov	eax, DWORD PTR [ebp+-80]
  3791 0000345B 50                      	push	eax
  3792 0000345C FF15[68104000]          	call _tmcAssign
  3793 00003462 81C408000000            	add	esp,8
  3794                                  
  3795                                  
  3796                                  
  3797                                  	;tmcAssign(I,reg[127]);
  3798 00003468 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3799 0000346B 8B88FC010000            	mov	ecx, DWORD PTR [eax+508]
  3800 00003471 51                      	push	ecx
  3801 00003472 8B45AC                  	mov	eax, DWORD PTR [ebp+-84]
  3802 00003475 50                      	push	eax
  3803 00003476 FF15[68104000]          	call _tmcAssign
  3804 0000347C 81C408000000            	add	esp,8
  3805                                  
  3806                                  	;//statement here,line 35
  3807                                  
  3808                                  	;// % Lines 36--36:
  3809                                  	;//     Thetas_min_a(cnt)=Thetas_simul(I);
  3810                                  
  3811                                  
  3812                                  
  3813                                  
  3814                                  
  3815                                  	;tmcGetByIndex(reg[132],Thetas_simul,1,I);
  3816 00003482 8B45AC                  	mov	eax, DWORD PTR [ebp+-84]
  3817 00003485 50                      	push	eax
  3818 00003486 6801000000              	push	1
  3819 0000348B 8B45BC                  	mov	eax, DWORD PTR [ebp+-68]
  3820 0000348E 50                      	push	eax
  3821 0000348F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3822 00003492 8B8810020000            	mov	ecx, DWORD PTR [eax+528]
  3823 00003498 51                      	push	ecx
  3824 00003499 FF15[D8104000]          	call _tmcGetByIndex
  3825 0000349F 81C410000000            	add	esp,16
  3826                                  
  3827                                  
  3828                                  
  3829                                  
  3830                                  
  3831                                  	;tmcGetRefByIndex(pRefHelper,Thetas_min_a,1,cnt);
  3832 000034A5 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  3833 000034A8 50                      	push	eax
  3834 000034A9 6801000000              	push	1
  3835 000034AE 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  3836 000034B1 50                      	push	eax
  3837 000034B2 B8[59184000]            	mov	eax, _pRefHelper+MY_LOAD_ADDRESS
  3838 000034B7 50                      	push	eax
  3839 000034B8 FF15[E8104000]          	call _tmcGetRefByIndex
  3840 000034BE 81C410000000            	add	esp,16
  3841                                  
  3842                                  	;tmcAssign(pRefHelper,reg[132]);
  3843 000034C4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3844 000034C7 8B8810020000            	mov	ecx, DWORD PTR [eax+528]
  3845 000034CD 51                      	push	ecx
  3846 000034CE B8[59184000]            	mov	eax, _pRefHelper+MY_LOAD_ADDRESS
  3847 000034D3 50                      	push	eax
  3848 000034D4 FF15[68104000]          	call _tmcAssign
  3849 000034DA 81C408000000            	add	esp,8
  3850                                  
  3851                                  	;//statement here,line 36
  3852                                  
  3853                                  	;// % Lines 37--37:
  3854                                  	;//end
  3855                                  
  3856                                  .label_2: ; //FOR end
  3857                                  ;	goto label_4; //branch to FOR begin
  3858 000034E0 E9D5F4FFFF              	jmp .label_4
  3859                                  
  3860                                  .label_3: ; //FOR exit
  3861                                  	;//statement here,line 37
  3862                                  
  3863                                  	;// % Lines 38--40:
  3864                                  	;//
  3865                                  
  3866                                  	;//
  3867                                  
  3868                                  	;//NumPoles=3;
  3869                                  
  3870                                  	;tmcScalar(reg[135],3.000000000000000e+000);
  3871 000034E5 6800000840              	push	0x40080000
  3872 000034EA 6800000000              	push	0x0
  3873 000034EF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3874 000034F2 8B881C020000            	mov	ecx, DWORD PTR [eax+540]
  3875 000034F8 51                      	push	ecx
  3876 000034F9 FF15[44114000]          	call _tmcScalar
  3877 000034FF 81C40C000000            	add	esp,12
  3878                                  
  3879                                  
  3880                                  
  3881                                  	;tmcAssign(NumPoles,reg[135]);
  3882 00003505 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3883 00003508 8B881C020000            	mov	ecx, DWORD PTR [eax+540]
  3884 0000350E 51                      	push	ecx
  3885 0000350F 8B45A8                  	mov	eax, DWORD PTR [ebp+-88]
  3886 00003512 50                      	push	eax
  3887 00003513 FF15[68104000]          	call _tmcAssign
  3888 00003519 81C408000000            	add	esp,8
  3889                                  
  3890                                  	;//statement here,line 40
  3891                                  
  3892                                  	;// % Lines 41--41:
  3893                                  	;//BitsPerRev = 2^16;
  3894                                  
  3895                                  	;tmcScalar(reg[137],2.000000000000000e+000);
  3896 0000351F 6800000040              	push	0x40000000
  3897 00003524 6800000000              	push	0x0
  3898 00003529 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3899 0000352C 8B8824020000            	mov	ecx, DWORD PTR [eax+548]
  3900 00003532 51                      	push	ecx
  3901 00003533 FF15[44114000]          	call _tmcScalar
  3902 00003539 81C40C000000            	add	esp,12
  3903                                  
  3904                                  	;tmcScalar(reg[138],1.600000000000000e+001);
  3905 0000353F 6800003040              	push	0x40300000
  3906 00003544 6800000000              	push	0x0
  3907 00003549 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3908 0000354C 8B8828020000            	mov	ecx, DWORD PTR [eax+552]
  3909 00003552 51                      	push	ecx
  3910 00003553 FF15[44114000]          	call _tmcScalar
  3911 00003559 81C40C000000            	add	esp,12
  3912                                  
  3913                                  	;tmcPower(reg[139],reg[137],reg[138]);
  3914 0000355F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3915 00003562 8B8828020000            	mov	ecx, DWORD PTR [eax+552]
  3916 00003568 51                      	push	ecx
  3917 00003569 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3918 0000356C 8B8824020000            	mov	ecx, DWORD PTR [eax+548]
  3919 00003572 51                      	push	ecx
  3920 00003573 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3921 00003576 8B882C020000            	mov	ecx, DWORD PTR [eax+556]
  3922 0000357C 51                      	push	ecx
  3923 0000357D FF15[38114000]          	call _tmcPower
  3924 00003583 81C40C000000            	add	esp,12
  3925                                  
  3926                                  
  3927                                  
  3928                                  	;tmcAssign(BitsPerRev,reg[139]);
  3929 00003589 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3930 0000358C 8B882C020000            	mov	ecx, DWORD PTR [eax+556]
  3931 00003592 51                      	push	ecx
  3932 00003593 8B45A4                  	mov	eax, DWORD PTR [ebp+-92]
  3933 00003596 50                      	push	eax
  3934 00003597 FF15[68104000]          	call _tmcAssign
  3935 0000359D 81C408000000            	add	esp,8
  3936                                  
  3937                                  	;//statement here,line 41
  3938                                  
  3939                                  	;// % Lines 42--43:
  3940                                  	;//
  3941                                  
  3942                                  	;//EangleCorrRes = 2^16;
  3943                                  
  3944                                  	;tmcScalar(reg[141],2.000000000000000e+000);
  3945 000035A3 6800000040              	push	0x40000000
  3946 000035A8 6800000000              	push	0x0
  3947 000035AD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3948 000035B0 8B8834020000            	mov	ecx, DWORD PTR [eax+564]
  3949 000035B6 51                      	push	ecx
  3950 000035B7 FF15[44114000]          	call _tmcScalar
  3951 000035BD 81C40C000000            	add	esp,12
  3952                                  
  3953                                  	;tmcScalar(reg[142],1.600000000000000e+001);
  3954 000035C3 6800003040              	push	0x40300000
  3955 000035C8 6800000000              	push	0x0
  3956 000035CD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3957 000035D0 8B8838020000            	mov	ecx, DWORD PTR [eax+568]
  3958 000035D6 51                      	push	ecx
  3959 000035D7 FF15[44114000]          	call _tmcScalar
  3960 000035DD 81C40C000000            	add	esp,12
  3961                                  
  3962                                  	;tmcPower(reg[143],reg[141],reg[142]);
  3963 000035E3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3964 000035E6 8B8838020000            	mov	ecx, DWORD PTR [eax+568]
  3965 000035EC 51                      	push	ecx
  3966 000035ED 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3967 000035F0 8B8834020000            	mov	ecx, DWORD PTR [eax+564]
  3968 000035F6 51                      	push	ecx
  3969 000035F7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3970 000035FA 8B883C020000            	mov	ecx, DWORD PTR [eax+572]
  3971 00003600 51                      	push	ecx
  3972 00003601 FF15[38114000]          	call _tmcPower
  3973 00003607 81C40C000000            	add	esp,12
  3974                                  
  3975                                  
  3976                                  
  3977                                  	;tmcAssign(EangleCorrRes,reg[143]);
  3978 0000360D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3979 00003610 8B883C020000            	mov	ecx, DWORD PTR [eax+572]
  3980 00003616 51                      	push	ecx
  3981 00003617 8B45A0                  	mov	eax, DWORD PTR [ebp+-96]
  3982 0000361A 50                      	push	eax
  3983 0000361B FF15[68104000]          	call _tmcAssign
  3984 00003621 81C408000000            	add	esp,8
  3985                                  
  3986                                  	;//statement here,line 43
  3987                                  
  3988                                  	;// % Lines 44--45:
  3989                                  	;//
  3990                                  
  3991                                  	;// Thetas_min = [3200,3600,4800,5400,6700];
  3992                                  
  3993                                  	;tmcScalar(reg[145],3.200000000000000e+003);
  3994 00003627 680000A940              	push	0x40a90000
  3995 0000362C 6800000000              	push	0x0
  3996 00003631 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  3997 00003634 8B8844020000            	mov	ecx, DWORD PTR [eax+580]
  3998 0000363A 51                      	push	ecx
  3999 0000363B FF15[44114000]          	call _tmcScalar
  4000 00003641 81C40C000000            	add	esp,12
  4001                                  
  4002                                  	;tmcScalar(reg[146],3.600000000000000e+003);
  4003 00003647 680020AC40              	push	0x40ac2000
  4004 0000364C 6800000000              	push	0x0
  4005 00003651 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4006 00003654 8B8848020000            	mov	ecx, DWORD PTR [eax+584]
  4007 0000365A 51                      	push	ecx
  4008 0000365B FF15[44114000]          	call _tmcScalar
  4009 00003661 81C40C000000            	add	esp,12
  4010                                  
  4011                                  	;tmcScalar(reg[147],4.800000000000000e+003);
  4012 00003667 6800C0B240              	push	0x40b2c000
  4013 0000366C 6800000000              	push	0x0
  4014 00003671 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4015 00003674 8B884C020000            	mov	ecx, DWORD PTR [eax+588]
  4016 0000367A 51                      	push	ecx
  4017 0000367B FF15[44114000]          	call _tmcScalar
  4018 00003681 81C40C000000            	add	esp,12
  4019                                  
  4020                                  	;tmcScalar(reg[148],5.400000000000000e+003);
  4021 00003687 680018B540              	push	0x40b51800
  4022 0000368C 6800000000              	push	0x0
  4023 00003691 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4024 00003694 8B8850020000            	mov	ecx, DWORD PTR [eax+592]
  4025 0000369A 51                      	push	ecx
  4026 0000369B FF15[44114000]          	call _tmcScalar
  4027 000036A1 81C40C000000            	add	esp,12
  4028                                  
  4029                                  	;tmcScalar(reg[149],6.700000000000000e+003);
  4030 000036A7 68002CBA40              	push	0x40ba2c00
  4031 000036AC 6800000000              	push	0x0
  4032 000036B1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4033 000036B4 8B8854020000            	mov	ecx, DWORD PTR [eax+596]
  4034 000036BA 51                      	push	ecx
  4035 000036BB FF15[44114000]          	call _tmcScalar
  4036 000036C1 81C40C000000            	add	esp,12
  4037                                  
  4038                                  ;tmcCollectColumns(reg[150],5,reg[145],reg[146],reg[147],reg[148],reg[149]);
  4039 000036C7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4040 000036CA 8B8854020000            	mov	ecx, DWORD PTR [eax+596]
  4041 000036D0 51                      	push	ecx
  4042 000036D1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4043 000036D4 8B8850020000            	mov	ecx, DWORD PTR [eax+592]
  4044 000036DA 51                      	push	ecx
  4045 000036DB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4046 000036DE 8B884C020000            	mov	ecx, DWORD PTR [eax+588]
  4047 000036E4 51                      	push	ecx
  4048 000036E5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4049 000036E8 8B8848020000            	mov	ecx, DWORD PTR [eax+584]
  4050 000036EE 51                      	push	ecx
  4051 000036EF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4052 000036F2 8B8844020000            	mov	ecx, DWORD PTR [eax+580]
  4053 000036F8 51                      	push	ecx
  4054 000036F9 6805000000              	push	5
  4055 000036FE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4056 00003701 8B8858020000            	mov	ecx, DWORD PTR [eax+600]
  4057 00003707 51                      	push	ecx
  4058 00003708 FF15[7C104000]          	call _tmcCollectColumns
  4059 0000370E 81C41C000000            	add	esp,28
  4060                                  
  4061                                  ;tmcCollectRows(reg[151],1,reg[150]);
  4062 00003714 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4063 00003717 8B8858020000            	mov	ecx, DWORD PTR [eax+600]
  4064 0000371D 51                      	push	ecx
  4065 0000371E 6801000000              	push	1
  4066 00003723 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4067 00003726 8B885C020000            	mov	ecx, DWORD PTR [eax+604]
  4068 0000372C 51                      	push	ecx
  4069 0000372D FF15[80104000]          	call _tmcCollectRows
  4070 00003733 81C40C000000            	add	esp,12
  4071                                  
  4072                                  
  4073                                  
  4074                                  	;tmcAssign(Thetas_min,reg[151]);
  4075 00003739 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4076 0000373C 8B885C020000            	mov	ecx, DWORD PTR [eax+604]
  4077 00003742 51                      	push	ecx
  4078 00003743 8B459C                  	mov	eax, DWORD PTR [ebp+-100]
  4079 00003746 50                      	push	eax
  4080 00003747 FF15[68104000]          	call _tmcAssign
  4081 0000374D 81C408000000            	add	esp,8
  4082                                  
  4083                                  	;//statement here,line 45
  4084                                  
  4085                                  	;// % Lines 46--46:
  4086                                  	;// Thetas_min = Thetas_min_a;%[3200,3600,4800,5400,6700];
  4087                                  
  4088                                  
  4089                                  
  4090                                  
  4091                                  
  4092                                  	;tmcAssign(Thetas_min,Thetas_min_a);
  4093 00003753 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  4094 00003756 50                      	push	eax
  4095 00003757 8B459C                  	mov	eax, DWORD PTR [ebp+-100]
  4096 0000375A 50                      	push	eax
  4097 0000375B FF15[68104000]          	call _tmcAssign
  4098 00003761 81C408000000            	add	esp,8
  4099                                  
  4100                                  	;//statement here,line 46
  4101                                  
  4102                                  	;// % Lines 47--48:
  4103                                  	;//
  4104                                  
  4105                                  	;//len = length(JV_tests);
  4106                                  
  4107                                  
  4108                                  
  4109                                  	;//CALL function
  4110                                  	;tmcReallocRegister(reg[156]);
  4111                                  	;tmclength(1,1, reg[156], JV_tests);
  4112 00003767 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4113 0000376A 8B8870020000            	mov	ecx, DWORD PTR [eax+624]
  4114 00003770 51                      	push	ecx
  4115 00003771 FF15[40114000]          	call _tmcReallocRegister
  4116 00003777 81C404000000            	add	esp,4
  4117 0000377D 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  4118 00003780 50                      	push	eax
  4119 00003781 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4120 00003784 8B8870020000            	mov	ecx, DWORD PTR [eax+624]
  4121 0000378A 51                      	push	ecx
  4122 0000378B 6801000000              	push	1
  4123 00003790 6801000000              	push	1
  4124 00003795 FF15[58124000]          	call _tmclength
  4125 0000379B 81C410000000            	add	esp,16
  4126                                  
  4127                                  
  4128                                  
  4129                                  	;tmcAssign(len,reg[156]);
  4130 000037A1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4131 000037A4 8B8870020000            	mov	ecx, DWORD PTR [eax+624]
  4132 000037AA 51                      	push	ecx
  4133 000037AB 8B4598                  	mov	eax, DWORD PTR [ebp+-104]
  4134 000037AE 50                      	push	eax
  4135 000037AF FF15[68104000]          	call _tmcAssign
  4136 000037B5 81C408000000            	add	esp,8
  4137                                  
  4138                                  	;//statement here,line 48
  4139                                  
  4140                                  	;// % Lines 49--50:
  4141                                  	;//
  4142                                  
  4143                                  	;//ElecVel       =  JV_tests / BitsPerRev * NumPoles * 360;
  4144                                  
  4145                                  
  4146                                  
  4147                                  
  4148                                  
  4149                                  	;tmcDiv(reg[160],JV_tests,BitsPerRev);
  4150 000037BB 8B45A4                  	mov	eax, DWORD PTR [ebp+-92]
  4151 000037BE 50                      	push	eax
  4152 000037BF 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  4153 000037C2 50                      	push	eax
  4154 000037C3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4155 000037C6 8B8880020000            	mov	ecx, DWORD PTR [eax+640]
  4156 000037CC 51                      	push	ecx
  4157 000037CD FF15[AC104000]          	call _tmcDiv
  4158 000037D3 81C40C000000            	add	esp,12
  4159                                  
  4160                                  
  4161                                  
  4162                                  	;tmcMul(reg[162],reg[160],NumPoles);
  4163 000037D9 8B45A8                  	mov	eax, DWORD PTR [ebp+-88]
  4164 000037DC 50                      	push	eax
  4165 000037DD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4166 000037E0 8B8880020000            	mov	ecx, DWORD PTR [eax+640]
  4167 000037E6 51                      	push	ecx
  4168 000037E7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4169 000037EA 8B8888020000            	mov	ecx, DWORD PTR [eax+648]
  4170 000037F0 51                      	push	ecx
  4171 000037F1 FF15[18114000]          	call _tmcMul
  4172 000037F7 81C40C000000            	add	esp,12
  4173                                  
  4174                                  	;tmcScalar(reg[163],3.600000000000000e+002);
  4175 000037FD 6800807640              	push	0x40768000
  4176 00003802 6800000000              	push	0x0
  4177 00003807 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4178 0000380A 8B888C020000            	mov	ecx, DWORD PTR [eax+652]
  4179 00003810 51                      	push	ecx
  4180 00003811 FF15[44114000]          	call _tmcScalar
  4181 00003817 81C40C000000            	add	esp,12
  4182                                  
  4183                                  	;tmcMul(reg[164],reg[162],reg[163]);
  4184 0000381D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4185 00003820 8B888C020000            	mov	ecx, DWORD PTR [eax+652]
  4186 00003826 51                      	push	ecx
  4187 00003827 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4188 0000382A 8B8888020000            	mov	ecx, DWORD PTR [eax+648]
  4189 00003830 51                      	push	ecx
  4190 00003831 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4191 00003834 8B8890020000            	mov	ecx, DWORD PTR [eax+656]
  4192 0000383A 51                      	push	ecx
  4193 0000383B FF15[18114000]          	call _tmcMul
  4194 00003841 81C40C000000            	add	esp,12
  4195                                  
  4196                                  
  4197                                  
  4198                                  	;tmcAssign(ElecVel,reg[164]);
  4199 00003847 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4200 0000384A 8B8890020000            	mov	ecx, DWORD PTR [eax+656]
  4201 00003850 51                      	push	ecx
  4202 00003851 8B4594                  	mov	eax, DWORD PTR [ebp+-108]
  4203 00003854 50                      	push	eax
  4204 00003855 FF15[68104000]          	call _tmcAssign
  4205 0000385B 81C408000000            	add	esp,8
  4206                                  
  4207                                  	;//statement here,line 50
  4208                                  
  4209                                  	;// % Lines 51--51:
  4210                                  	;//AngleElecCorr =  Thetas_min / EangleCorrRes * 360;
  4211                                  
  4212                                  
  4213                                  
  4214                                  
  4215                                  
  4216                                  	;tmcDiv(reg[168],Thetas_min,EangleCorrRes);
  4217 00003861 8B45A0                  	mov	eax, DWORD PTR [ebp+-96]
  4218 00003864 50                      	push	eax
  4219 00003865 8B459C                  	mov	eax, DWORD PTR [ebp+-100]
  4220 00003868 50                      	push	eax
  4221 00003869 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4222 0000386C 8B88A0020000            	mov	ecx, DWORD PTR [eax+672]
  4223 00003872 51                      	push	ecx
  4224 00003873 FF15[AC104000]          	call _tmcDiv
  4225 00003879 81C40C000000            	add	esp,12
  4226                                  
  4227                                  	;tmcScalar(reg[169],3.600000000000000e+002);
  4228 0000387F 6800807640              	push	0x40768000
  4229 00003884 6800000000              	push	0x0
  4230 00003889 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4231 0000388C 8B88A4020000            	mov	ecx, DWORD PTR [eax+676]
  4232 00003892 51                      	push	ecx
  4233 00003893 FF15[44114000]          	call _tmcScalar
  4234 00003899 81C40C000000            	add	esp,12
  4235                                  
  4236                                  	;tmcMul(reg[170],reg[168],reg[169]);
  4237 0000389F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4238 000038A2 8B88A4020000            	mov	ecx, DWORD PTR [eax+676]
  4239 000038A8 51                      	push	ecx
  4240 000038A9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4241 000038AC 8B88A0020000            	mov	ecx, DWORD PTR [eax+672]
  4242 000038B2 51                      	push	ecx
  4243 000038B3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4244 000038B6 8B88A8020000            	mov	ecx, DWORD PTR [eax+680]
  4245 000038BC 51                      	push	ecx
  4246 000038BD FF15[18114000]          	call _tmcMul
  4247 000038C3 81C40C000000            	add	esp,12
  4248                                  
  4249                                  
  4250                                  
  4251                                  	;tmcAssign(AngleElecCorr,reg[170]);
  4252 000038C9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4253 000038CC 8B88A8020000            	mov	ecx, DWORD PTR [eax+680]
  4254 000038D2 51                      	push	ecx
  4255 000038D3 8B4590                  	mov	eax, DWORD PTR [ebp+-112]
  4256 000038D6 50                      	push	eax
  4257 000038D7 FF15[68104000]          	call _tmcAssign
  4258 000038DD 81C408000000            	add	esp,8
  4259                                  
  4260                                  	;//statement here,line 51
  4261                                  
  4262                                  	;// % Lines 52--53:
  4263                                  	;//
  4264                                  
  4265                                  	;//H = [ElecVel(:),ones(len,1)];
  4266                                  
  4267                                  
  4268                                  
  4269                                  	;tmcCreateMagicColon(reg[173]);
  4270 000038E3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4271 000038E6 8B88B4020000            	mov	ecx, DWORD PTR [eax+692]
  4272 000038EC 51                      	push	ecx
  4273 000038ED FF15[98104000]          	call _tmcCreateMagicColon
  4274 000038F3 81C404000000            	add	esp,4
  4275                                  
  4276                                  	;tmcGetByIndex(reg[174],ElecVel,1,reg[173]);
  4277 000038F9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4278 000038FC 8B88B4020000            	mov	ecx, DWORD PTR [eax+692]
  4279 00003902 51                      	push	ecx
  4280 00003903 6801000000              	push	1
  4281 00003908 8B4594                  	mov	eax, DWORD PTR [ebp+-108]
  4282 0000390B 50                      	push	eax
  4283 0000390C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4284 0000390F 8B88B8020000            	mov	ecx, DWORD PTR [eax+696]
  4285 00003915 51                      	push	ecx
  4286 00003916 FF15[D8104000]          	call _tmcGetByIndex
  4287 0000391C 81C410000000            	add	esp,16
  4288                                  
  4289                                  
  4290                                  
  4291                                  	;tmcScalar(reg[176],1.000000000000000e+000);
  4292 00003922 680000F03F              	push	0x3ff00000
  4293 00003927 6800000000              	push	0x0
  4294 0000392C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4295 0000392F 8B88C0020000            	mov	ecx, DWORD PTR [eax+704]
  4296 00003935 51                      	push	ecx
  4297 00003936 FF15[44114000]          	call _tmcScalar
  4298 0000393C 81C40C000000            	add	esp,12
  4299                                  
  4300                                  	;//CALL function
  4301                                  	;tmcReallocRegister(reg[177]);
  4302                                  	;tmcones(1,2, reg[177], len, reg[176]);
  4303 00003942 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4304 00003945 8B88C4020000            	mov	ecx, DWORD PTR [eax+708]
  4305 0000394B 51                      	push	ecx
  4306 0000394C FF15[40114000]          	call _tmcReallocRegister
  4307 00003952 81C404000000            	add	esp,4
  4308 00003958 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4309 0000395B 8B88C0020000            	mov	ecx, DWORD PTR [eax+704]
  4310 00003961 51                      	push	ecx
  4311 00003962 8B4598                  	mov	eax, DWORD PTR [ebp+-104]
  4312 00003965 50                      	push	eax
  4313 00003966 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4314 00003969 8B88C4020000            	mov	ecx, DWORD PTR [eax+708]
  4315 0000396F 51                      	push	ecx
  4316 00003970 6802000000              	push	2
  4317 00003975 6801000000              	push	1
  4318 0000397A FF15[88124000]          	call _tmcones
  4319 00003980 81C414000000            	add	esp,20
  4320                                  
  4321                                  ;tmcCollectColumns(reg[178],2,reg[174],reg[177]);
  4322 00003986 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4323 00003989 8B88C4020000            	mov	ecx, DWORD PTR [eax+708]
  4324 0000398F 51                      	push	ecx
  4325 00003990 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4326 00003993 8B88B8020000            	mov	ecx, DWORD PTR [eax+696]
  4327 00003999 51                      	push	ecx
  4328 0000399A 6802000000              	push	2
  4329 0000399F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4330 000039A2 8B88C8020000            	mov	ecx, DWORD PTR [eax+712]
  4331 000039A8 51                      	push	ecx
  4332 000039A9 FF15[7C104000]          	call _tmcCollectColumns
  4333 000039AF 81C410000000            	add	esp,16
  4334                                  
  4335                                  ;tmcCollectRows(reg[179],1,reg[178]);
  4336 000039B5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4337 000039B8 8B88C8020000            	mov	ecx, DWORD PTR [eax+712]
  4338 000039BE 51                      	push	ecx
  4339 000039BF 6801000000              	push	1
  4340 000039C4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4341 000039C7 8B88CC020000            	mov	ecx, DWORD PTR [eax+716]
  4342 000039CD 51                      	push	ecx
  4343 000039CE FF15[80104000]          	call _tmcCollectRows
  4344 000039D4 81C40C000000            	add	esp,12
  4345                                  
  4346                                  
  4347                                  
  4348                                  	;tmcAssign(H,reg[179]);
  4349 000039DA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4350 000039DD 8B88CC020000            	mov	ecx, DWORD PTR [eax+716]
  4351 000039E3 51                      	push	ecx
  4352 000039E4 8B458C                  	mov	eax, DWORD PTR [ebp+-116]
  4353 000039E7 50                      	push	eax
  4354 000039E8 FF15[68104000]          	call _tmcAssign
  4355 000039EE 81C408000000            	add	esp,8
  4356                                  
  4357                                  	;//statement here,line 53
  4358                                  
  4359                                  	;// % Lines 54--54:
  4360                                  	;//tht = inv(H'*H)*(H'*AngleElecCorr(:)); % AngleElecCorr = ElecVel*tht(1) + tht(2)
  4361                                  
  4362                                  
  4363                                  
  4364                                  	;tmcTranspose(reg[182],H);
  4365 000039F4 8B458C                  	mov	eax, DWORD PTR [ebp+-116]
  4366 000039F7 50                      	push	eax
  4367 000039F8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4368 000039FB 8B88D8020000            	mov	ecx, DWORD PTR [eax+728]
  4369 00003A01 51                      	push	ecx
  4370 00003A02 FF15[50114000]          	call _tmcTranspose
  4371 00003A08 81C408000000            	add	esp,8
  4372                                  
  4373                                  
  4374                                  
  4375                                  	;tmcMul(reg[184],reg[182],H);
  4376 00003A0E 8B458C                  	mov	eax, DWORD PTR [ebp+-116]
  4377 00003A11 50                      	push	eax
  4378 00003A12 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4379 00003A15 8B88D8020000            	mov	ecx, DWORD PTR [eax+728]
  4380 00003A1B 51                      	push	ecx
  4381 00003A1C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4382 00003A1F 8B88E0020000            	mov	ecx, DWORD PTR [eax+736]
  4383 00003A25 51                      	push	ecx
  4384 00003A26 FF15[18114000]          	call _tmcMul
  4385 00003A2C 81C40C000000            	add	esp,12
  4386                                  
  4387                                  	;//CALL function
  4388                                  	;tmcReallocRegister(reg[185]);
  4389                                  	;tmcinv(1,1, reg[185], reg[184]);
  4390 00003A32 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4391 00003A35 8B88E4020000            	mov	ecx, DWORD PTR [eax+740]
  4392 00003A3B 51                      	push	ecx
  4393 00003A3C FF15[40114000]          	call _tmcReallocRegister
  4394 00003A42 81C404000000            	add	esp,4
  4395 00003A48 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4396 00003A4B 8B88E0020000            	mov	ecx, DWORD PTR [eax+736]
  4397 00003A51 51                      	push	ecx
  4398 00003A52 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4399 00003A55 8B88E4020000            	mov	ecx, DWORD PTR [eax+740]
  4400 00003A5B 51                      	push	ecx
  4401 00003A5C 6801000000              	push	1
  4402 00003A61 6801000000              	push	1
  4403 00003A66 FF15[28124000]          	call _tmcinv
  4404 00003A6C 81C410000000            	add	esp,16
  4405                                  
  4406                                  
  4407                                  
  4408                                  	;tmcTranspose(reg[187],H);
  4409 00003A72 8B458C                  	mov	eax, DWORD PTR [ebp+-116]
  4410 00003A75 50                      	push	eax
  4411 00003A76 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4412 00003A79 8B88EC020000            	mov	ecx, DWORD PTR [eax+748]
  4413 00003A7F 51                      	push	ecx
  4414 00003A80 FF15[50114000]          	call _tmcTranspose
  4415 00003A86 81C408000000            	add	esp,8
  4416                                  
  4417                                  
  4418                                  
  4419                                  	;tmcCreateMagicColon(reg[189]);
  4420 00003A8C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4421 00003A8F 8B88F4020000            	mov	ecx, DWORD PTR [eax+756]
  4422 00003A95 51                      	push	ecx
  4423 00003A96 FF15[98104000]          	call _tmcCreateMagicColon
  4424 00003A9C 81C404000000            	add	esp,4
  4425                                  
  4426                                  	;tmcGetByIndex(reg[190],AngleElecCorr,1,reg[189]);
  4427 00003AA2 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4428 00003AA5 8B88F4020000            	mov	ecx, DWORD PTR [eax+756]
  4429 00003AAB 51                      	push	ecx
  4430 00003AAC 6801000000              	push	1
  4431 00003AB1 8B4590                  	mov	eax, DWORD PTR [ebp+-112]
  4432 00003AB4 50                      	push	eax
  4433 00003AB5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4434 00003AB8 8B88F8020000            	mov	ecx, DWORD PTR [eax+760]
  4435 00003ABE 51                      	push	ecx
  4436 00003ABF FF15[D8104000]          	call _tmcGetByIndex
  4437 00003AC5 81C410000000            	add	esp,16
  4438                                  
  4439                                  	;tmcMul(reg[191],reg[187],reg[190]);
  4440 00003ACB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4441 00003ACE 8B88F8020000            	mov	ecx, DWORD PTR [eax+760]
  4442 00003AD4 51                      	push	ecx
  4443 00003AD5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4444 00003AD8 8B88EC020000            	mov	ecx, DWORD PTR [eax+748]
  4445 00003ADE 51                      	push	ecx
  4446 00003ADF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4447 00003AE2 8B88FC020000            	mov	ecx, DWORD PTR [eax+764]
  4448 00003AE8 51                      	push	ecx
  4449 00003AE9 FF15[18114000]          	call _tmcMul
  4450 00003AEF 81C40C000000            	add	esp,12
  4451                                  
  4452                                  	;tmcMul(reg[192],reg[185],reg[191]);
  4453 00003AF5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4454 00003AF8 8B88FC020000            	mov	ecx, DWORD PTR [eax+764]
  4455 00003AFE 51                      	push	ecx
  4456 00003AFF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4457 00003B02 8B88E4020000            	mov	ecx, DWORD PTR [eax+740]
  4458 00003B08 51                      	push	ecx
  4459 00003B09 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4460 00003B0C 8B8800030000            	mov	ecx, DWORD PTR [eax+768]
  4461 00003B12 51                      	push	ecx
  4462 00003B13 FF15[18114000]          	call _tmcMul
  4463 00003B19 81C40C000000            	add	esp,12
  4464                                  
  4465                                  
  4466                                  
  4467                                  	;tmcAssign(tht,reg[192]);
  4468 00003B1F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4469 00003B22 8B8800030000            	mov	ecx, DWORD PTR [eax+768]
  4470 00003B28 51                      	push	ecx
  4471 00003B29 8B4510                  	mov	eax, DWORD PTR [ebp+16]
  4472 00003B2C 50                      	push	eax
  4473 00003B2D FF15[68104000]          	call _tmcAssign
  4474 00003B33 81C408000000            	add	esp,8
  4475                                  
  4476                                  	;//statement here,line 54
  4477                                  
  4478                                  	;// % Lines 55--56:
  4479                                  	;//
  4480                                  
  4481                                  	;//figure(50);
  4482                                  
  4483                                  	;tmcScalar(reg[194],5.000000000000000e+001);
  4484 00003B39 6800004940              	push	0x40490000
  4485 00003B3E 6800000000              	push	0x0
  4486 00003B43 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4487 00003B46 8B8808030000            	mov	ecx, DWORD PTR [eax+776]
  4488 00003B4C 51                      	push	ecx
  4489 00003B4D FF15[44114000]          	call _tmcScalar
  4490 00003B53 81C40C000000            	add	esp,12
  4491                                  
  4492                                  	;//CALL function
  4493                                  	;tmcReallocRegister(reg[195]);
  4494                                  	;tmcfigure(0,1, reg[195], reg[194]);
  4495 00003B59 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4496 00003B5C 8B880C030000            	mov	ecx, DWORD PTR [eax+780]
  4497 00003B62 51                      	push	ecx
  4498 00003B63 FF15[40114000]          	call _tmcReallocRegister
  4499 00003B69 81C404000000            	add	esp,4
  4500 00003B6F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4501 00003B72 8B8808030000            	mov	ecx, DWORD PTR [eax+776]
  4502 00003B78 51                      	push	ecx
  4503 00003B79 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4504 00003B7C 8B880C030000            	mov	ecx, DWORD PTR [eax+780]
  4505 00003B82 51                      	push	ecx
  4506 00003B83 6801000000              	push	1
  4507 00003B88 6800000000              	push	0
  4508 00003B8D FF15[94134000]          	call _tmcfigure
  4509 00003B93 81C410000000            	add	esp,16
  4510                                  
  4511                                  	;//statement here,line 56
  4512                                  
  4513                                  	;// % Lines 57--57:
  4514                                  	;//plot(ElecVel,AngleElecCorr,'r.-',[0,ElecVel],[0,ElecVel]*tht(1)+tht(2),'b');grid on;
  4515                                  
  4516                                  
  4517                                  
  4518                                  
  4519                                  
  4520                                  ;tmcCreateString(reg[198],"r.-");
  4521 00003B99 B8[414F4000]            	mov	eax, .LC$6+MY_LOAD_ADDRESS
  4522 00003B9E 50                      	push eax
  4523 00003B9F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4524 00003BA2 8B8818030000            	mov	ecx, DWORD PTR [eax+792]
  4525 00003BA8 51                      	push	ecx
  4526 00003BA9 FF15[A4104000]          	call _tmcCreateString
  4527 00003BAF 81C408000000            	add	esp,8
  4528                                  
  4529                                  	;tmcScalar(reg[199],0.000000000000000e+000);
  4530 00003BB5 6800000000              	push	0x0
  4531 00003BBA 6800000000              	push	0x0
  4532 00003BBF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4533 00003BC2 8B881C030000            	mov	ecx, DWORD PTR [eax+796]
  4534 00003BC8 51                      	push	ecx
  4535 00003BC9 FF15[44114000]          	call _tmcScalar
  4536 00003BCF 81C40C000000            	add	esp,12
  4537                                  
  4538                                  
  4539                                  
  4540                                  ;tmcCollectColumns(reg[201],2,reg[199],ElecVel);
  4541 00003BD5 8B4594                  	mov	eax, DWORD PTR [ebp+-108]
  4542 00003BD8 50                      	push	eax
  4543 00003BD9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4544 00003BDC 8B881C030000            	mov	ecx, DWORD PTR [eax+796]
  4545 00003BE2 51                      	push	ecx
  4546 00003BE3 6802000000              	push	2
  4547 00003BE8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4548 00003BEB 8B8824030000            	mov	ecx, DWORD PTR [eax+804]
  4549 00003BF1 51                      	push	ecx
  4550 00003BF2 FF15[7C104000]          	call _tmcCollectColumns
  4551 00003BF8 81C410000000            	add	esp,16
  4552                                  
  4553                                  ;tmcCollectRows(reg[202],1,reg[201]);
  4554 00003BFE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4555 00003C01 8B8824030000            	mov	ecx, DWORD PTR [eax+804]
  4556 00003C07 51                      	push	ecx
  4557 00003C08 6801000000              	push	1
  4558 00003C0D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4559 00003C10 8B8828030000            	mov	ecx, DWORD PTR [eax+808]
  4560 00003C16 51                      	push	ecx
  4561 00003C17 FF15[80104000]          	call _tmcCollectRows
  4562 00003C1D 81C40C000000            	add	esp,12
  4563                                  
  4564                                  	;tmcScalar(reg[203],0.000000000000000e+000);
  4565 00003C23 6800000000              	push	0x0
  4566 00003C28 6800000000              	push	0x0
  4567 00003C2D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4568 00003C30 8B882C030000            	mov	ecx, DWORD PTR [eax+812]
  4569 00003C36 51                      	push	ecx
  4570 00003C37 FF15[44114000]          	call _tmcScalar
  4571 00003C3D 81C40C000000            	add	esp,12
  4572                                  
  4573                                  
  4574                                  
  4575                                  ;tmcCollectColumns(reg[205],2,reg[203],ElecVel);
  4576 00003C43 8B4594                  	mov	eax, DWORD PTR [ebp+-108]
  4577 00003C46 50                      	push	eax
  4578 00003C47 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4579 00003C4A 8B882C030000            	mov	ecx, DWORD PTR [eax+812]
  4580 00003C50 51                      	push	ecx
  4581 00003C51 6802000000              	push	2
  4582 00003C56 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4583 00003C59 8B8834030000            	mov	ecx, DWORD PTR [eax+820]
  4584 00003C5F 51                      	push	ecx
  4585 00003C60 FF15[7C104000]          	call _tmcCollectColumns
  4586 00003C66 81C410000000            	add	esp,16
  4587                                  
  4588                                  ;tmcCollectRows(reg[206],1,reg[205]);
  4589 00003C6C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4590 00003C6F 8B8834030000            	mov	ecx, DWORD PTR [eax+820]
  4591 00003C75 51                      	push	ecx
  4592 00003C76 6801000000              	push	1
  4593 00003C7B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4594 00003C7E 8B8838030000            	mov	ecx, DWORD PTR [eax+824]
  4595 00003C84 51                      	push	ecx
  4596 00003C85 FF15[80104000]          	call _tmcCollectRows
  4597 00003C8B 81C40C000000            	add	esp,12
  4598                                  
  4599                                  
  4600                                  
  4601                                  	;tmcScalar(reg[208],1.000000000000000e+000);
  4602 00003C91 680000F03F              	push	0x3ff00000
  4603 00003C96 6800000000              	push	0x0
  4604 00003C9B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4605 00003C9E 8B8840030000            	mov	ecx, DWORD PTR [eax+832]
  4606 00003CA4 51                      	push	ecx
  4607 00003CA5 FF15[44114000]          	call _tmcScalar
  4608 00003CAB 81C40C000000            	add	esp,12
  4609                                  
  4610                                  	;tmcGetByIndex(reg[209],tht,1,reg[208]);
  4611 00003CB1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4612 00003CB4 8B8840030000            	mov	ecx, DWORD PTR [eax+832]
  4613 00003CBA 51                      	push	ecx
  4614 00003CBB 6801000000              	push	1
  4615 00003CC0 8B4510                  	mov	eax, DWORD PTR [ebp+16]
  4616 00003CC3 50                      	push	eax
  4617 00003CC4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4618 00003CC7 8B8844030000            	mov	ecx, DWORD PTR [eax+836]
  4619 00003CCD 51                      	push	ecx
  4620 00003CCE FF15[D8104000]          	call _tmcGetByIndex
  4621 00003CD4 81C410000000            	add	esp,16
  4622                                  
  4623                                  	;tmcMul(reg[210],reg[206],reg[209]);
  4624 00003CDA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4625 00003CDD 8B8844030000            	mov	ecx, DWORD PTR [eax+836]
  4626 00003CE3 51                      	push	ecx
  4627 00003CE4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4628 00003CE7 8B8838030000            	mov	ecx, DWORD PTR [eax+824]
  4629 00003CED 51                      	push	ecx
  4630 00003CEE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4631 00003CF1 8B8848030000            	mov	ecx, DWORD PTR [eax+840]
  4632 00003CF7 51                      	push	ecx
  4633 00003CF8 FF15[18114000]          	call _tmcMul
  4634 00003CFE 81C40C000000            	add	esp,12
  4635                                  
  4636                                  
  4637                                  
  4638                                  	;tmcScalar(reg[212],2.000000000000000e+000);
  4639 00003D04 6800000040              	push	0x40000000
  4640 00003D09 6800000000              	push	0x0
  4641 00003D0E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4642 00003D11 8B8850030000            	mov	ecx, DWORD PTR [eax+848]
  4643 00003D17 51                      	push	ecx
  4644 00003D18 FF15[44114000]          	call _tmcScalar
  4645 00003D1E 81C40C000000            	add	esp,12
  4646                                  
  4647                                  	;tmcGetByIndex(reg[213],tht,1,reg[212]);
  4648 00003D24 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4649 00003D27 8B8850030000            	mov	ecx, DWORD PTR [eax+848]
  4650 00003D2D 51                      	push	ecx
  4651 00003D2E 6801000000              	push	1
  4652 00003D33 8B4510                  	mov	eax, DWORD PTR [ebp+16]
  4653 00003D36 50                      	push	eax
  4654 00003D37 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4655 00003D3A 8B8854030000            	mov	ecx, DWORD PTR [eax+852]
  4656 00003D40 51                      	push	ecx
  4657 00003D41 FF15[D8104000]          	call _tmcGetByIndex
  4658 00003D47 81C410000000            	add	esp,16
  4659                                  
  4660                                  	;tmcAdd(reg[214],reg[210],reg[213]);
  4661 00003D4D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4662 00003D50 8B8854030000            	mov	ecx, DWORD PTR [eax+852]
  4663 00003D56 51                      	push	ecx
  4664 00003D57 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4665 00003D5A 8B8848030000            	mov	ecx, DWORD PTR [eax+840]
  4666 00003D60 51                      	push	ecx
  4667 00003D61 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4668 00003D64 8B8858030000            	mov	ecx, DWORD PTR [eax+856]
  4669 00003D6A 51                      	push	ecx
  4670 00003D6B FF15[5C104000]          	call _tmcAdd
  4671 00003D71 81C40C000000            	add	esp,12
  4672                                  
  4673                                  ;tmcCreateString(reg[215],"b");
  4674 00003D77 B8[454F4000]            	mov	eax, .LC$7+MY_LOAD_ADDRESS
  4675 00003D7C 50                      	push eax
  4676 00003D7D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4677 00003D80 8B885C030000            	mov	ecx, DWORD PTR [eax+860]
  4678 00003D86 51                      	push	ecx
  4679 00003D87 FF15[A4104000]          	call _tmcCreateString
  4680 00003D8D 81C408000000            	add	esp,8
  4681                                  
  4682                                  	;//CALL function
  4683                                  	;tmcReallocRegister(reg[216]);
  4684                                  	;tmcplot(0,6, reg[216], ElecVel, AngleElecCorr, reg[198], reg[202], reg[214], reg[215]);
  4685 00003D93 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4686 00003D96 8B8860030000            	mov	ecx, DWORD PTR [eax+864]
  4687 00003D9C 51                      	push	ecx
  4688 00003D9D FF15[40114000]          	call _tmcReallocRegister
  4689 00003DA3 81C404000000            	add	esp,4
  4690 00003DA9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4691 00003DAC 8B885C030000            	mov	ecx, DWORD PTR [eax+860]
  4692 00003DB2 51                      	push	ecx
  4693 00003DB3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4694 00003DB6 8B8858030000            	mov	ecx, DWORD PTR [eax+856]
  4695 00003DBC 51                      	push	ecx
  4696 00003DBD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4697 00003DC0 8B8828030000            	mov	ecx, DWORD PTR [eax+808]
  4698 00003DC6 51                      	push	ecx
  4699 00003DC7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4700 00003DCA 8B8818030000            	mov	ecx, DWORD PTR [eax+792]
  4701 00003DD0 51                      	push	ecx
  4702 00003DD1 8B4590                  	mov	eax, DWORD PTR [ebp+-112]
  4703 00003DD4 50                      	push	eax
  4704 00003DD5 8B4594                  	mov	eax, DWORD PTR [ebp+-108]
  4705 00003DD8 50                      	push	eax
  4706 00003DD9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4707 00003DDC 8B8860030000            	mov	ecx, DWORD PTR [eax+864]
  4708 00003DE2 51                      	push	ecx
  4709 00003DE3 6806000000              	push	6
  4710 00003DE8 6800000000              	push	0
  4711 00003DED FF15[90124000]          	call _tmcplot
  4712 00003DF3 81C424000000            	add	esp,36
  4713                                  
  4714                                  	;//statement here,line 57
  4715                                  
  4716                                  ;tmcCreateString(reg[217],"on");
  4717 00003DF9 B8[474F4000]            	mov	eax, .LC$8+MY_LOAD_ADDRESS
  4718 00003DFE 50                      	push eax
  4719 00003DFF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4720 00003E02 8B8864030000            	mov	ecx, DWORD PTR [eax+868]
  4721 00003E08 51                      	push	ecx
  4722 00003E09 FF15[A4104000]          	call _tmcCreateString
  4723 00003E0F 81C408000000            	add	esp,8
  4724                                  
  4725                                  	;//CALL function
  4726                                  	;tmcReallocRegister(reg[218]);
  4727                                  	;tmcgrid(0,1, reg[218], reg[217]);
  4728 00003E15 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4729 00003E18 8B8868030000            	mov	ecx, DWORD PTR [eax+872]
  4730 00003E1E 51                      	push	ecx
  4731 00003E1F FF15[40114000]          	call _tmcReallocRegister
  4732 00003E25 81C404000000            	add	esp,4
  4733 00003E2B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4734 00003E2E 8B8864030000            	mov	ecx, DWORD PTR [eax+868]
  4735 00003E34 51                      	push	ecx
  4736 00003E35 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4737 00003E38 8B8868030000            	mov	ecx, DWORD PTR [eax+872]
  4738 00003E3E 51                      	push	ecx
  4739 00003E3F 6801000000              	push	1
  4740 00003E44 6800000000              	push	0
  4741 00003E49 FF15[10124000]          	call _tmcgrid
  4742 00003E4F 81C410000000            	add	esp,16
  4743                                  
  4744                                  	;//statement here,line 57
  4745                                  
  4746                                  	;// % Lines 58--59:
  4747                                  	;//
  4748                                  
  4749                                  	;//AbsOffsetCorr = tht(2)/360 / NumPoles * BitsPerRev;
  4750                                  
  4751                                  
  4752                                  
  4753                                  	;tmcScalar(reg[220],2.000000000000000e+000);
  4754 00003E55 6800000040              	push	0x40000000
  4755 00003E5A 6800000000              	push	0x0
  4756 00003E5F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4757 00003E62 8B8870030000            	mov	ecx, DWORD PTR [eax+880]
  4758 00003E68 51                      	push	ecx
  4759 00003E69 FF15[44114000]          	call _tmcScalar
  4760 00003E6F 81C40C000000            	add	esp,12
  4761                                  
  4762                                  	;tmcGetByIndex(reg[221],tht,1,reg[220]);
  4763 00003E75 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4764 00003E78 8B8870030000            	mov	ecx, DWORD PTR [eax+880]
  4765 00003E7E 51                      	push	ecx
  4766 00003E7F 6801000000              	push	1
  4767 00003E84 8B4510                  	mov	eax, DWORD PTR [ebp+16]
  4768 00003E87 50                      	push	eax
  4769 00003E88 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4770 00003E8B 8B8874030000            	mov	ecx, DWORD PTR [eax+884]
  4771 00003E91 51                      	push	ecx
  4772 00003E92 FF15[D8104000]          	call _tmcGetByIndex
  4773 00003E98 81C410000000            	add	esp,16
  4774                                  
  4775                                  	;tmcScalar(reg[222],3.600000000000000e+002);
  4776 00003E9E 6800807640              	push	0x40768000
  4777 00003EA3 6800000000              	push	0x0
  4778 00003EA8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4779 00003EAB 8B8878030000            	mov	ecx, DWORD PTR [eax+888]
  4780 00003EB1 51                      	push	ecx
  4781 00003EB2 FF15[44114000]          	call _tmcScalar
  4782 00003EB8 81C40C000000            	add	esp,12
  4783                                  
  4784                                  	;tmcDiv(reg[223],reg[221],reg[222]);
  4785 00003EBE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4786 00003EC1 8B8878030000            	mov	ecx, DWORD PTR [eax+888]
  4787 00003EC7 51                      	push	ecx
  4788 00003EC8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4789 00003ECB 8B8874030000            	mov	ecx, DWORD PTR [eax+884]
  4790 00003ED1 51                      	push	ecx
  4791 00003ED2 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4792 00003ED5 8B887C030000            	mov	ecx, DWORD PTR [eax+892]
  4793 00003EDB 51                      	push	ecx
  4794 00003EDC FF15[AC104000]          	call _tmcDiv
  4795 00003EE2 81C40C000000            	add	esp,12
  4796                                  
  4797                                  
  4798                                  
  4799                                  	;tmcDiv(reg[225],reg[223],NumPoles);
  4800 00003EE8 8B45A8                  	mov	eax, DWORD PTR [ebp+-88]
  4801 00003EEB 50                      	push	eax
  4802 00003EEC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4803 00003EEF 8B887C030000            	mov	ecx, DWORD PTR [eax+892]
  4804 00003EF5 51                      	push	ecx
  4805 00003EF6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4806 00003EF9 8B8884030000            	mov	ecx, DWORD PTR [eax+900]
  4807 00003EFF 51                      	push	ecx
  4808 00003F00 FF15[AC104000]          	call _tmcDiv
  4809 00003F06 81C40C000000            	add	esp,12
  4810                                  
  4811                                  
  4812                                  
  4813                                  	;tmcMul(reg[227],reg[225],BitsPerRev);
  4814 00003F0C 8B45A4                  	mov	eax, DWORD PTR [ebp+-92]
  4815 00003F0F 50                      	push	eax
  4816 00003F10 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4817 00003F13 8B8884030000            	mov	ecx, DWORD PTR [eax+900]
  4818 00003F19 51                      	push	ecx
  4819 00003F1A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4820 00003F1D 8B888C030000            	mov	ecx, DWORD PTR [eax+908]
  4821 00003F23 51                      	push	ecx
  4822 00003F24 FF15[18114000]          	call _tmcMul
  4823 00003F2A 81C40C000000            	add	esp,12
  4824                                  
  4825                                  
  4826                                  
  4827                                  	;tmcAssign(AbsOffsetCorr,reg[227]);
  4828 00003F30 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4829 00003F33 8B888C030000            	mov	ecx, DWORD PTR [eax+908]
  4830 00003F39 51                      	push	ecx
  4831 00003F3A 8B4514                  	mov	eax, DWORD PTR [ebp+20]
  4832 00003F3D 50                      	push	eax
  4833 00003F3E FF15[68104000]          	call _tmcAssign
  4834 00003F44 81C408000000            	add	esp,8
  4835                                  
  4836                                  	;//statement here,line 59
  4837                                  
  4838                                  	;// % Lines 60--60:
  4839                                  	;//AdvUsecCorr   = tht(1)*1e6;
  4840                                  
  4841                                  
  4842                                  
  4843                                  	;tmcScalar(reg[230],1.000000000000000e+000);
  4844 00003F4A 680000F03F              	push	0x3ff00000
  4845 00003F4F 6800000000              	push	0x0
  4846 00003F54 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4847 00003F57 8B8898030000            	mov	ecx, DWORD PTR [eax+920]
  4848 00003F5D 51                      	push	ecx
  4849 00003F5E FF15[44114000]          	call _tmcScalar
  4850 00003F64 81C40C000000            	add	esp,12
  4851                                  
  4852                                  	;tmcGetByIndex(reg[231],tht,1,reg[230]);
  4853 00003F6A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4854 00003F6D 8B8898030000            	mov	ecx, DWORD PTR [eax+920]
  4855 00003F73 51                      	push	ecx
  4856 00003F74 6801000000              	push	1
  4857 00003F79 8B4510                  	mov	eax, DWORD PTR [ebp+16]
  4858 00003F7C 50                      	push	eax
  4859 00003F7D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4860 00003F80 8B889C030000            	mov	ecx, DWORD PTR [eax+924]
  4861 00003F86 51                      	push	ecx
  4862 00003F87 FF15[D8104000]          	call _tmcGetByIndex
  4863 00003F8D 81C410000000            	add	esp,16
  4864                                  
  4865                                  	;tmcScalar(reg[232],1.000000000000000e+006);
  4866 00003F93 6880842E41              	push	0x412e8480
  4867 00003F98 6800000000              	push	0x0
  4868 00003F9D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4869 00003FA0 8B88A0030000            	mov	ecx, DWORD PTR [eax+928]
  4870 00003FA6 51                      	push	ecx
  4871 00003FA7 FF15[44114000]          	call _tmcScalar
  4872 00003FAD 81C40C000000            	add	esp,12
  4873                                  
  4874                                  	;tmcMul(reg[233],reg[231],reg[232]);
  4875 00003FB3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4876 00003FB6 8B88A0030000            	mov	ecx, DWORD PTR [eax+928]
  4877 00003FBC 51                      	push	ecx
  4878 00003FBD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4879 00003FC0 8B889C030000            	mov	ecx, DWORD PTR [eax+924]
  4880 00003FC6 51                      	push	ecx
  4881 00003FC7 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4882 00003FCA 8B88A4030000            	mov	ecx, DWORD PTR [eax+932]
  4883 00003FD0 51                      	push	ecx
  4884 00003FD1 FF15[18114000]          	call _tmcMul
  4885 00003FD7 81C40C000000            	add	esp,12
  4886                                  
  4887                                  
  4888                                  
  4889                                  	;tmcAssign(AdvUsecCorr,reg[233]);
  4890 00003FDD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4891 00003FE0 8B88A4030000            	mov	ecx, DWORD PTR [eax+932]
  4892 00003FE6 51                      	push	ecx
  4893 00003FE7 8B4518                  	mov	eax, DWORD PTR [ebp+24]
  4894 00003FEA 50                      	push	eax
  4895 00003FEB FF15[68104000]          	call _tmcAssign
  4896 00003FF1 81C408000000            	add	esp,8
  4897                                  
  4898                                  	;//statement here,line 60
  4899                                  
  4900                                  	;// % Lines 61--64:
  4901                                  	;//
  4902                                  
  4903                                  	;//% tht = FitLine(JV_tests,Thetas_min,1);
  4904                                  
  4905                                  	;//
  4906                                  
  4907                                  	;//w = logspace(-1,3,1000);
  4908                                  
  4909                                  	;tmcScalar(reg[235],1.000000000000000e+000);
  4910 00003FF7 680000F03F              	push	0x3ff00000
  4911 00003FFC 6800000000              	push	0x0
  4912 00004001 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4913 00004004 8B88AC030000            	mov	ecx, DWORD PTR [eax+940]
  4914 0000400A 51                      	push	ecx
  4915 0000400B FF15[44114000]          	call _tmcScalar
  4916 00004011 81C40C000000            	add	esp,12
  4917                                  
  4918                                  	;tmcNeg(reg[236],reg[235]);
  4919 00004017 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4920 0000401A 8B88AC030000            	mov	ecx, DWORD PTR [eax+940]
  4921 00004020 51                      	push	ecx
  4922 00004021 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4923 00004024 8B88B0030000            	mov	ecx, DWORD PTR [eax+944]
  4924 0000402A 51                      	push	ecx
  4925 0000402B FF15[24114000]          	call _tmcNeg
  4926 00004031 81C408000000            	add	esp,8
  4927                                  
  4928                                  	;tmcScalar(reg[237],3.000000000000000e+000);
  4929 00004037 6800000840              	push	0x40080000
  4930 0000403C 6800000000              	push	0x0
  4931 00004041 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4932 00004044 8B88B4030000            	mov	ecx, DWORD PTR [eax+948]
  4933 0000404A 51                      	push	ecx
  4934 0000404B FF15[44114000]          	call _tmcScalar
  4935 00004051 81C40C000000            	add	esp,12
  4936                                  
  4937                                  	;tmcScalar(reg[238],1.000000000000000e+003);
  4938 00004057 6800408F40              	push	0x408f4000
  4939 0000405C 6800000000              	push	0x0
  4940 00004061 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4941 00004064 8B88B8030000            	mov	ecx, DWORD PTR [eax+952]
  4942 0000406A 51                      	push	ecx
  4943 0000406B FF15[44114000]          	call _tmcScalar
  4944 00004071 81C40C000000            	add	esp,12
  4945                                  
  4946                                  	;//CALL function
  4947                                  	;tmcReallocRegister(reg[239]);
  4948                                  	;tmclogspace(1,3, reg[239], reg[236], reg[237], reg[238]);
  4949 00004077 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4950 0000407A 8B88BC030000            	mov	ecx, DWORD PTR [eax+956]
  4951 00004080 51                      	push	ecx
  4952 00004081 FF15[40114000]          	call _tmcReallocRegister
  4953 00004087 81C404000000            	add	esp,4
  4954 0000408D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4955 00004090 8B88B8030000            	mov	ecx, DWORD PTR [eax+952]
  4956 00004096 51                      	push	ecx
  4957 00004097 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4958 0000409A 8B88B4030000            	mov	ecx, DWORD PTR [eax+948]
  4959 000040A0 51                      	push	ecx
  4960 000040A1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4961 000040A4 8B88B0030000            	mov	ecx, DWORD PTR [eax+944]
  4962 000040AA 51                      	push	ecx
  4963 000040AB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4964 000040AE 8B88BC030000            	mov	ecx, DWORD PTR [eax+956]
  4965 000040B4 51                      	push	ecx
  4966 000040B5 6803000000              	push	3
  4967 000040BA 6801000000              	push	1
  4968 000040BF FF15[6C124000]          	call _tmclogspace
  4969 000040C5 81C418000000            	add	esp,24
  4970                                  
  4971                                  
  4972                                  
  4973                                  	;tmcAssign(w,reg[239]);
  4974 000040CB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4975 000040CE 8B88BC030000            	mov	ecx, DWORD PTR [eax+956]
  4976 000040D4 51                      	push	ecx
  4977 000040D5 8B4588                  	mov	eax, DWORD PTR [ebp+-120]
  4978 000040D8 50                      	push	eax
  4979 000040D9 FF15[68104000]          	call _tmcAssign
  4980 000040DF 81C408000000            	add	esp,8
  4981                                  
  4982                                  	;//statement here,line 64
  4983                                  
  4984                                  	;// % Lines 65--65:
  4985                                  	;//s = j*w;
  4986                                  
  4987                                  	;//CALL function
  4988                                  	;tmcReallocRegister(reg[241]);
  4989                                  	;tmcj(1,0, reg[241]);
  4990 000040E5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4991 000040E8 8B88C4030000            	mov	ecx, DWORD PTR [eax+964]
  4992 000040EE 51                      	push	ecx
  4993 000040EF FF15[40114000]          	call _tmcReallocRegister
  4994 000040F5 81C404000000            	add	esp,4
  4995 000040FB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  4996 000040FE 8B88C4030000            	mov	ecx, DWORD PTR [eax+964]
  4997 00004104 51                      	push	ecx
  4998 00004105 6800000000              	push	0
  4999 0000410A 6801000000              	push	1
  5000 0000410F FF15[60134000]          	call _tmcj
  5001 00004115 81C40C000000            	add	esp,12
  5002                                  
  5003                                  
  5004                                  
  5005                                  	;tmcMul(reg[243],reg[241],w);
  5006 0000411B 8B4588                  	mov	eax, DWORD PTR [ebp+-120]
  5007 0000411E 50                      	push	eax
  5008 0000411F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5009 00004122 8B88C4030000            	mov	ecx, DWORD PTR [eax+964]
  5010 00004128 51                      	push	ecx
  5011 00004129 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5012 0000412C 8B88CC030000            	mov	ecx, DWORD PTR [eax+972]
  5013 00004132 51                      	push	ecx
  5014 00004133 FF15[18114000]          	call _tmcMul
  5015 00004139 81C40C000000            	add	esp,12
  5016                                  
  5017                                  
  5018                                  
  5019                                  	;tmcAssign(s,reg[243]);
  5020 0000413F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5021 00004142 8B88CC030000            	mov	ecx, DWORD PTR [eax+972]
  5022 00004148 51                      	push	ecx
  5023 00004149 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5024 0000414C 50                      	push	eax
  5025 0000414D FF15[68104000]          	call _tmcAssign
  5026 00004153 81C408000000            	add	esp,8
  5027                                  
  5028                                  	;//statement here,line 65
  5029                                  
  5030                                  	;// % Lines 66--66:
  5031                                  	;//w0=120;w1=250;d0=0.07;d1=0.55;
  5032                                  
  5033                                  	;tmcScalar(reg[245],1.200000000000000e+002);
  5034 00004159 6800005E40              	push	0x405e0000
  5035 0000415E 6800000000              	push	0x0
  5036 00004163 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5037 00004166 8B88D4030000            	mov	ecx, DWORD PTR [eax+980]
  5038 0000416C 51                      	push	ecx
  5039 0000416D FF15[44114000]          	call _tmcScalar
  5040 00004173 81C40C000000            	add	esp,12
  5041                                  
  5042                                  
  5043                                  
  5044                                  	;tmcAssign(w0,reg[245]);
  5045 00004179 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5046 0000417C 8B88D4030000            	mov	ecx, DWORD PTR [eax+980]
  5047 00004182 51                      	push	ecx
  5048 00004183 8B4580                  	mov	eax, DWORD PTR [ebp+-128]
  5049 00004186 50                      	push	eax
  5050 00004187 FF15[68104000]          	call _tmcAssign
  5051 0000418D 81C408000000            	add	esp,8
  5052                                  
  5053                                  	;//statement here,line 66
  5054                                  
  5055                                  	;tmcScalar(reg[247],2.500000000000000e+002);
  5056 00004193 6800406F40              	push	0x406f4000
  5057 00004198 6800000000              	push	0x0
  5058 0000419D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5059 000041A0 8B88DC030000            	mov	ecx, DWORD PTR [eax+988]
  5060 000041A6 51                      	push	ecx
  5061 000041A7 FF15[44114000]          	call _tmcScalar
  5062 000041AD 81C40C000000            	add	esp,12
  5063                                  
  5064                                  
  5065                                  
  5066                                  	;tmcAssign(w1,reg[247]);
  5067 000041B3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5068 000041B6 8B88DC030000            	mov	ecx, DWORD PTR [eax+988]
  5069 000041BC 51                      	push	ecx
  5070 000041BD 8B857CFFFFFF            	mov	eax, DWORD PTR [ebp+-132]
  5071 000041C3 50                      	push	eax
  5072 000041C4 FF15[68104000]          	call _tmcAssign
  5073 000041CA 81C408000000            	add	esp,8
  5074                                  
  5075                                  	;//statement here,line 66
  5076                                  
  5077                                  	;tmcScalar(reg[249],7.000000000000001e-002);
  5078 000041D0 6885EBB13F              	push	0x3fb1eb85
  5079 000041D5 68EC51B81E              	push	0x1eb851ec
  5080 000041DA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5081 000041DD 8B88E4030000            	mov	ecx, DWORD PTR [eax+996]
  5082 000041E3 51                      	push	ecx
  5083 000041E4 FF15[44114000]          	call _tmcScalar
  5084 000041EA 81C40C000000            	add	esp,12
  5085                                  
  5086                                  
  5087                                  
  5088                                  	;tmcAssign(d0,reg[249]);
  5089 000041F0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5090 000041F3 8B88E4030000            	mov	ecx, DWORD PTR [eax+996]
  5091 000041F9 51                      	push	ecx
  5092 000041FA 8B8578FFFFFF            	mov	eax, DWORD PTR [ebp+-136]
  5093 00004200 50                      	push	eax
  5094 00004201 FF15[68104000]          	call _tmcAssign
  5095 00004207 81C408000000            	add	esp,8
  5096                                  
  5097                                  	;//statement here,line 66
  5098                                  
  5099                                  	;tmcScalar(reg[251],5.500000000000000e-001);
  5100 0000420D 689999E13F              	push	0x3fe19999
  5101 00004212 689A999999              	push	0x9999999a
  5102 00004217 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5103 0000421A 8B88EC030000            	mov	ecx, DWORD PTR [eax+1004]
  5104 00004220 51                      	push	ecx
  5105 00004221 FF15[44114000]          	call _tmcScalar
  5106 00004227 81C40C000000            	add	esp,12
  5107                                  
  5108                                  
  5109                                  
  5110                                  	;tmcAssign(d1,reg[251]);
  5111 0000422D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5112 00004230 8B88EC030000            	mov	ecx, DWORD PTR [eax+1004]
  5113 00004236 51                      	push	ecx
  5114 00004237 8B8574FFFFFF            	mov	eax, DWORD PTR [ebp+-140]
  5115 0000423D 50                      	push	eax
  5116 0000423E FF15[68104000]          	call _tmcAssign
  5117 00004244 81C408000000            	add	esp,8
  5118                                  
  5119                                  	;//statement here,line 66
  5120                                  
  5121                                  	;// % Lines 67--67:
  5122                                  	;//P = (s.^2 + 2*d0*w0*s+w0^2)./(s.^2 + 2*d1*w1*s+w1^2)*(w1/w0)^2 ./ (s.^2) ./(s+10000)*10000;
  5123                                  
  5124                                  
  5125                                  
  5126                                  	;tmcScalar(reg[254],2.000000000000000e+000);
  5127 0000424A 6800000040              	push	0x40000000
  5128 0000424F 6800000000              	push	0x0
  5129 00004254 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5130 00004257 8B88F8030000            	mov	ecx, DWORD PTR [eax+1016]
  5131 0000425D 51                      	push	ecx
  5132 0000425E FF15[44114000]          	call _tmcScalar
  5133 00004264 81C40C000000            	add	esp,12
  5134                                  
  5135                                  	;tmcPowerScalar(reg[255],s,reg[254]);
  5136 0000426A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5137 0000426D 8B88F8030000            	mov	ecx, DWORD PTR [eax+1016]
  5138 00004273 51                      	push	ecx
  5139 00004274 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5140 00004277 50                      	push	eax
  5141 00004278 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5142 0000427B 8B88FC030000            	mov	ecx, DWORD PTR [eax+1020]
  5143 00004281 51                      	push	ecx
  5144 00004282 FF15[3C114000]          	call _tmcPowerScalar
  5145 00004288 81C40C000000            	add	esp,12
  5146                                  
  5147                                  	;tmcScalar(reg[256],2.000000000000000e+000);
  5148 0000428E 6800000040              	push	0x40000000
  5149 00004293 6800000000              	push	0x0
  5150 00004298 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5151 0000429B 8B8800040000            	mov	ecx, DWORD PTR [eax+1024]
  5152 000042A1 51                      	push	ecx
  5153 000042A2 FF15[44114000]          	call _tmcScalar
  5154 000042A8 81C40C000000            	add	esp,12
  5155                                  
  5156                                  
  5157                                  
  5158                                  	;tmcMul(reg[258],reg[256],d0);
  5159 000042AE 8B8578FFFFFF            	mov	eax, DWORD PTR [ebp+-136]
  5160 000042B4 50                      	push	eax
  5161 000042B5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5162 000042B8 8B8800040000            	mov	ecx, DWORD PTR [eax+1024]
  5163 000042BE 51                      	push	ecx
  5164 000042BF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5165 000042C2 8B8808040000            	mov	ecx, DWORD PTR [eax+1032]
  5166 000042C8 51                      	push	ecx
  5167 000042C9 FF15[18114000]          	call _tmcMul
  5168 000042CF 81C40C000000            	add	esp,12
  5169                                  
  5170                                  
  5171                                  
  5172                                  	;tmcMul(reg[260],reg[258],w0);
  5173 000042D5 8B4580                  	mov	eax, DWORD PTR [ebp+-128]
  5174 000042D8 50                      	push	eax
  5175 000042D9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5176 000042DC 8B8808040000            	mov	ecx, DWORD PTR [eax+1032]
  5177 000042E2 51                      	push	ecx
  5178 000042E3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5179 000042E6 8B8810040000            	mov	ecx, DWORD PTR [eax+1040]
  5180 000042EC 51                      	push	ecx
  5181 000042ED FF15[18114000]          	call _tmcMul
  5182 000042F3 81C40C000000            	add	esp,12
  5183                                  
  5184                                  
  5185                                  
  5186                                  	;tmcMul(reg[262],reg[260],s);
  5187 000042F9 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5188 000042FC 50                      	push	eax
  5189 000042FD 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5190 00004300 8B8810040000            	mov	ecx, DWORD PTR [eax+1040]
  5191 00004306 51                      	push	ecx
  5192 00004307 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5193 0000430A 8B8818040000            	mov	ecx, DWORD PTR [eax+1048]
  5194 00004310 51                      	push	ecx
  5195 00004311 FF15[18114000]          	call _tmcMul
  5196 00004317 81C40C000000            	add	esp,12
  5197                                  
  5198                                  	;tmcAdd(reg[263],reg[255],reg[262]);
  5199 0000431D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5200 00004320 8B8818040000            	mov	ecx, DWORD PTR [eax+1048]
  5201 00004326 51                      	push	ecx
  5202 00004327 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5203 0000432A 8B88FC030000            	mov	ecx, DWORD PTR [eax+1020]
  5204 00004330 51                      	push	ecx
  5205 00004331 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5206 00004334 8B881C040000            	mov	ecx, DWORD PTR [eax+1052]
  5207 0000433A 51                      	push	ecx
  5208 0000433B FF15[5C104000]          	call _tmcAdd
  5209 00004341 81C40C000000            	add	esp,12
  5210                                  
  5211                                  
  5212                                  
  5213                                  	;tmcScalar(reg[265],2.000000000000000e+000);
  5214 00004347 6800000040              	push	0x40000000
  5215 0000434C 6800000000              	push	0x0
  5216 00004351 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5217 00004354 8B8824040000            	mov	ecx, DWORD PTR [eax+1060]
  5218 0000435A 51                      	push	ecx
  5219 0000435B FF15[44114000]          	call _tmcScalar
  5220 00004361 81C40C000000            	add	esp,12
  5221                                  
  5222                                  	;tmcPower(reg[266],w0,reg[265]);
  5223 00004367 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5224 0000436A 8B8824040000            	mov	ecx, DWORD PTR [eax+1060]
  5225 00004370 51                      	push	ecx
  5226 00004371 8B4580                  	mov	eax, DWORD PTR [ebp+-128]
  5227 00004374 50                      	push	eax
  5228 00004375 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5229 00004378 8B8828040000            	mov	ecx, DWORD PTR [eax+1064]
  5230 0000437E 51                      	push	ecx
  5231 0000437F FF15[38114000]          	call _tmcPower
  5232 00004385 81C40C000000            	add	esp,12
  5233                                  
  5234                                  	;tmcAdd(reg[267],reg[263],reg[266]);
  5235 0000438B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5236 0000438E 8B8828040000            	mov	ecx, DWORD PTR [eax+1064]
  5237 00004394 51                      	push	ecx
  5238 00004395 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5239 00004398 8B881C040000            	mov	ecx, DWORD PTR [eax+1052]
  5240 0000439E 51                      	push	ecx
  5241 0000439F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5242 000043A2 8B882C040000            	mov	ecx, DWORD PTR [eax+1068]
  5243 000043A8 51                      	push	ecx
  5244 000043A9 FF15[5C104000]          	call _tmcAdd
  5245 000043AF 81C40C000000            	add	esp,12
  5246                                  
  5247                                  
  5248                                  
  5249                                  	;tmcScalar(reg[269],2.000000000000000e+000);
  5250 000043B5 6800000040              	push	0x40000000
  5251 000043BA 6800000000              	push	0x0
  5252 000043BF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5253 000043C2 8B8834040000            	mov	ecx, DWORD PTR [eax+1076]
  5254 000043C8 51                      	push	ecx
  5255 000043C9 FF15[44114000]          	call _tmcScalar
  5256 000043CF 81C40C000000            	add	esp,12
  5257                                  
  5258                                  	;tmcPowerScalar(reg[270],s,reg[269]);
  5259 000043D5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5260 000043D8 8B8834040000            	mov	ecx, DWORD PTR [eax+1076]
  5261 000043DE 51                      	push	ecx
  5262 000043DF 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5263 000043E2 50                      	push	eax
  5264 000043E3 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5265 000043E6 8B8838040000            	mov	ecx, DWORD PTR [eax+1080]
  5266 000043EC 51                      	push	ecx
  5267 000043ED FF15[3C114000]          	call _tmcPowerScalar
  5268 000043F3 81C40C000000            	add	esp,12
  5269                                  
  5270                                  	;tmcScalar(reg[271],2.000000000000000e+000);
  5271 000043F9 6800000040              	push	0x40000000
  5272 000043FE 6800000000              	push	0x0
  5273 00004403 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5274 00004406 8B883C040000            	mov	ecx, DWORD PTR [eax+1084]
  5275 0000440C 51                      	push	ecx
  5276 0000440D FF15[44114000]          	call _tmcScalar
  5277 00004413 81C40C000000            	add	esp,12
  5278                                  
  5279                                  
  5280                                  
  5281                                  	;tmcMul(reg[273],reg[271],d1);
  5282 00004419 8B8574FFFFFF            	mov	eax, DWORD PTR [ebp+-140]
  5283 0000441F 50                      	push	eax
  5284 00004420 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5285 00004423 8B883C040000            	mov	ecx, DWORD PTR [eax+1084]
  5286 00004429 51                      	push	ecx
  5287 0000442A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5288 0000442D 8B8844040000            	mov	ecx, DWORD PTR [eax+1092]
  5289 00004433 51                      	push	ecx
  5290 00004434 FF15[18114000]          	call _tmcMul
  5291 0000443A 81C40C000000            	add	esp,12
  5292                                  
  5293                                  
  5294                                  
  5295                                  	;tmcMul(reg[275],reg[273],w1);
  5296 00004440 8B857CFFFFFF            	mov	eax, DWORD PTR [ebp+-132]
  5297 00004446 50                      	push	eax
  5298 00004447 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5299 0000444A 8B8844040000            	mov	ecx, DWORD PTR [eax+1092]
  5300 00004450 51                      	push	ecx
  5301 00004451 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5302 00004454 8B884C040000            	mov	ecx, DWORD PTR [eax+1100]
  5303 0000445A 51                      	push	ecx
  5304 0000445B FF15[18114000]          	call _tmcMul
  5305 00004461 81C40C000000            	add	esp,12
  5306                                  
  5307                                  
  5308                                  
  5309                                  	;tmcMul(reg[277],reg[275],s);
  5310 00004467 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5311 0000446A 50                      	push	eax
  5312 0000446B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5313 0000446E 8B884C040000            	mov	ecx, DWORD PTR [eax+1100]
  5314 00004474 51                      	push	ecx
  5315 00004475 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5316 00004478 8B8854040000            	mov	ecx, DWORD PTR [eax+1108]
  5317 0000447E 51                      	push	ecx
  5318 0000447F FF15[18114000]          	call _tmcMul
  5319 00004485 81C40C000000            	add	esp,12
  5320                                  
  5321                                  	;tmcAdd(reg[278],reg[270],reg[277]);
  5322 0000448B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5323 0000448E 8B8854040000            	mov	ecx, DWORD PTR [eax+1108]
  5324 00004494 51                      	push	ecx
  5325 00004495 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5326 00004498 8B8838040000            	mov	ecx, DWORD PTR [eax+1080]
  5327 0000449E 51                      	push	ecx
  5328 0000449F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5329 000044A2 8B8858040000            	mov	ecx, DWORD PTR [eax+1112]
  5330 000044A8 51                      	push	ecx
  5331 000044A9 FF15[5C104000]          	call _tmcAdd
  5332 000044AF 81C40C000000            	add	esp,12
  5333                                  
  5334                                  
  5335                                  
  5336                                  	;tmcScalar(reg[280],2.000000000000000e+000);
  5337 000044B5 6800000040              	push	0x40000000
  5338 000044BA 6800000000              	push	0x0
  5339 000044BF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5340 000044C2 8B8860040000            	mov	ecx, DWORD PTR [eax+1120]
  5341 000044C8 51                      	push	ecx
  5342 000044C9 FF15[44114000]          	call _tmcScalar
  5343 000044CF 81C40C000000            	add	esp,12
  5344                                  
  5345                                  	;tmcPower(reg[281],w1,reg[280]);
  5346 000044D5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5347 000044D8 8B8860040000            	mov	ecx, DWORD PTR [eax+1120]
  5348 000044DE 51                      	push	ecx
  5349 000044DF 8B857CFFFFFF            	mov	eax, DWORD PTR [ebp+-132]
  5350 000044E5 50                      	push	eax
  5351 000044E6 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5352 000044E9 8B8864040000            	mov	ecx, DWORD PTR [eax+1124]
  5353 000044EF 51                      	push	ecx
  5354 000044F0 FF15[38114000]          	call _tmcPower
  5355 000044F6 81C40C000000            	add	esp,12
  5356                                  
  5357                                  	;tmcAdd(reg[282],reg[278],reg[281]);
  5358 000044FC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5359 000044FF 8B8864040000            	mov	ecx, DWORD PTR [eax+1124]
  5360 00004505 51                      	push	ecx
  5361 00004506 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5362 00004509 8B8858040000            	mov	ecx, DWORD PTR [eax+1112]
  5363 0000450F 51                      	push	ecx
  5364 00004510 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5365 00004513 8B8868040000            	mov	ecx, DWORD PTR [eax+1128]
  5366 00004519 51                      	push	ecx
  5367 0000451A FF15[5C104000]          	call _tmcAdd
  5368 00004520 81C40C000000            	add	esp,12
  5369                                  
  5370                                  	;tmcDivScalar(reg[283],reg[267],reg[282]);
  5371 00004526 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5372 00004529 8B8868040000            	mov	ecx, DWORD PTR [eax+1128]
  5373 0000452F 51                      	push	ecx
  5374 00004530 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5375 00004533 8B882C040000            	mov	ecx, DWORD PTR [eax+1068]
  5376 00004539 51                      	push	ecx
  5377 0000453A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5378 0000453D 8B886C040000            	mov	ecx, DWORD PTR [eax+1132]
  5379 00004543 51                      	push	ecx
  5380 00004544 FF15[B0104000]          	call _tmcDivScalar
  5381 0000454A 81C40C000000            	add	esp,12
  5382                                  
  5383                                  
  5384                                  
  5385                                  
  5386                                  
  5387                                  	;tmcDiv(reg[286],w1,w0);
  5388 00004550 8B4580                  	mov	eax, DWORD PTR [ebp+-128]
  5389 00004553 50                      	push	eax
  5390 00004554 8B857CFFFFFF            	mov	eax, DWORD PTR [ebp+-132]
  5391 0000455A 50                      	push	eax
  5392 0000455B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5393 0000455E 8B8878040000            	mov	ecx, DWORD PTR [eax+1144]
  5394 00004564 51                      	push	ecx
  5395 00004565 FF15[AC104000]          	call _tmcDiv
  5396 0000456B 81C40C000000            	add	esp,12
  5397                                  
  5398                                  	;tmcScalar(reg[287],2.000000000000000e+000);
  5399 00004571 6800000040              	push	0x40000000
  5400 00004576 6800000000              	push	0x0
  5401 0000457B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5402 0000457E 8B887C040000            	mov	ecx, DWORD PTR [eax+1148]
  5403 00004584 51                      	push	ecx
  5404 00004585 FF15[44114000]          	call _tmcScalar
  5405 0000458B 81C40C000000            	add	esp,12
  5406                                  
  5407                                  	;tmcPower(reg[288],reg[286],reg[287]);
  5408 00004591 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5409 00004594 8B887C040000            	mov	ecx, DWORD PTR [eax+1148]
  5410 0000459A 51                      	push	ecx
  5411 0000459B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5412 0000459E 8B8878040000            	mov	ecx, DWORD PTR [eax+1144]
  5413 000045A4 51                      	push	ecx
  5414 000045A5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5415 000045A8 8B8880040000            	mov	ecx, DWORD PTR [eax+1152]
  5416 000045AE 51                      	push	ecx
  5417 000045AF FF15[38114000]          	call _tmcPower
  5418 000045B5 81C40C000000            	add	esp,12
  5419                                  
  5420                                  	;tmcMul(reg[289],reg[283],reg[288]);
  5421 000045BB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5422 000045BE 8B8880040000            	mov	ecx, DWORD PTR [eax+1152]
  5423 000045C4 51                      	push	ecx
  5424 000045C5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5425 000045C8 8B886C040000            	mov	ecx, DWORD PTR [eax+1132]
  5426 000045CE 51                      	push	ecx
  5427 000045CF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5428 000045D2 8B8884040000            	mov	ecx, DWORD PTR [eax+1156]
  5429 000045D8 51                      	push	ecx
  5430 000045D9 FF15[18114000]          	call _tmcMul
  5431 000045DF 81C40C000000            	add	esp,12
  5432                                  
  5433                                  
  5434                                  
  5435                                  	;tmcScalar(reg[291],2.000000000000000e+000);
  5436 000045E5 6800000040              	push	0x40000000
  5437 000045EA 6800000000              	push	0x0
  5438 000045EF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5439 000045F2 8B888C040000            	mov	ecx, DWORD PTR [eax+1164]
  5440 000045F8 51                      	push	ecx
  5441 000045F9 FF15[44114000]          	call _tmcScalar
  5442 000045FF 81C40C000000            	add	esp,12
  5443                                  
  5444                                  	;tmcPowerScalar(reg[292],s,reg[291]);
  5445 00004605 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5446 00004608 8B888C040000            	mov	ecx, DWORD PTR [eax+1164]
  5447 0000460E 51                      	push	ecx
  5448 0000460F 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5449 00004612 50                      	push	eax
  5450 00004613 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5451 00004616 8B8890040000            	mov	ecx, DWORD PTR [eax+1168]
  5452 0000461C 51                      	push	ecx
  5453 0000461D FF15[3C114000]          	call _tmcPowerScalar
  5454 00004623 81C40C000000            	add	esp,12
  5455                                  
  5456                                  	;tmcDivScalar(reg[293],reg[289],reg[292]);
  5457 00004629 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5458 0000462C 8B8890040000            	mov	ecx, DWORD PTR [eax+1168]
  5459 00004632 51                      	push	ecx
  5460 00004633 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5461 00004636 8B8884040000            	mov	ecx, DWORD PTR [eax+1156]
  5462 0000463C 51                      	push	ecx
  5463 0000463D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5464 00004640 8B8894040000            	mov	ecx, DWORD PTR [eax+1172]
  5465 00004646 51                      	push	ecx
  5466 00004647 FF15[B0104000]          	call _tmcDivScalar
  5467 0000464D 81C40C000000            	add	esp,12
  5468                                  
  5469                                  
  5470                                  
  5471                                  	;tmcScalar(reg[295],1.000000000000000e+004);
  5472 00004653 680088C340              	push	0x40c38800
  5473 00004658 6800000000              	push	0x0
  5474 0000465D 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5475 00004660 8B889C040000            	mov	ecx, DWORD PTR [eax+1180]
  5476 00004666 51                      	push	ecx
  5477 00004667 FF15[44114000]          	call _tmcScalar
  5478 0000466D 81C40C000000            	add	esp,12
  5479                                  
  5480                                  	;tmcAdd(reg[296],s,reg[295]);
  5481 00004673 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5482 00004676 8B889C040000            	mov	ecx, DWORD PTR [eax+1180]
  5483 0000467C 51                      	push	ecx
  5484 0000467D 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  5485 00004680 50                      	push	eax
  5486 00004681 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5487 00004684 8B88A0040000            	mov	ecx, DWORD PTR [eax+1184]
  5488 0000468A 51                      	push	ecx
  5489 0000468B FF15[5C104000]          	call _tmcAdd
  5490 00004691 81C40C000000            	add	esp,12
  5491                                  
  5492                                  	;tmcDivScalar(reg[297],reg[293],reg[296]);
  5493 00004697 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5494 0000469A 8B88A0040000            	mov	ecx, DWORD PTR [eax+1184]
  5495 000046A0 51                      	push	ecx
  5496 000046A1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5497 000046A4 8B8894040000            	mov	ecx, DWORD PTR [eax+1172]
  5498 000046AA 51                      	push	ecx
  5499 000046AB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5500 000046AE 8B88A4040000            	mov	ecx, DWORD PTR [eax+1188]
  5501 000046B4 51                      	push	ecx
  5502 000046B5 FF15[B0104000]          	call _tmcDivScalar
  5503 000046BB 81C40C000000            	add	esp,12
  5504                                  
  5505                                  	;tmcScalar(reg[298],1.000000000000000e+004);
  5506 000046C1 680088C340              	push	0x40c38800
  5507 000046C6 6800000000              	push	0x0
  5508 000046CB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5509 000046CE 8B88A8040000            	mov	ecx, DWORD PTR [eax+1192]
  5510 000046D4 51                      	push	ecx
  5511 000046D5 FF15[44114000]          	call _tmcScalar
  5512 000046DB 81C40C000000            	add	esp,12
  5513                                  
  5514                                  	;tmcMul(reg[299],reg[297],reg[298]);
  5515 000046E1 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5516 000046E4 8B88A8040000            	mov	ecx, DWORD PTR [eax+1192]
  5517 000046EA 51                      	push	ecx
  5518 000046EB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5519 000046EE 8B88A4040000            	mov	ecx, DWORD PTR [eax+1188]
  5520 000046F4 51                      	push	ecx
  5521 000046F5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5522 000046F8 8B88AC040000            	mov	ecx, DWORD PTR [eax+1196]
  5523 000046FE 51                      	push	ecx
  5524 000046FF FF15[18114000]          	call _tmcMul
  5525 00004705 81C40C000000            	add	esp,12
  5526                                  
  5527                                  
  5528                                  
  5529                                  	;tmcAssign(P,reg[299]);
  5530 0000470B 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5531 0000470E 8B88AC040000            	mov	ecx, DWORD PTR [eax+1196]
  5532 00004714 51                      	push	ecx
  5533 00004715 8B8570FFFFFF            	mov	eax, DWORD PTR [ebp+-144]
  5534 0000471B 50                      	push	eax
  5535 0000471C FF15[68104000]          	call _tmcAssign
  5536 00004722 81C408000000            	add	esp,8
  5537                                  
  5538                                  	;//statement here,line 67
  5539                                  
  5540                                  	;// % Lines 68--68:
  5541                                  	;//ph=unwrap(angle(P))/pi*180 -360;
  5542                                  
  5543                                  
  5544                                  
  5545                                  	;//CALL function
  5546                                  	;tmcReallocRegister(reg[302]);
  5547                                  	;tmcangle(1,1, reg[302], P);
  5548 00004728 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5549 0000472B 8B88B8040000            	mov	ecx, DWORD PTR [eax+1208]
  5550 00004731 51                      	push	ecx
  5551 00004732 FF15[40114000]          	call _tmcReallocRegister
  5552 00004738 81C404000000            	add	esp,4
  5553 0000473E 8B8570FFFFFF            	mov	eax, DWORD PTR [ebp+-144]
  5554 00004744 50                      	push	eax
  5555 00004745 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5556 00004748 8B88B8040000            	mov	ecx, DWORD PTR [eax+1208]
  5557 0000474E 51                      	push	ecx
  5558 0000474F 6801000000              	push	1
  5559 00004754 6801000000              	push	1
  5560 00004759 FF15[64114000]          	call _tmcangle
  5561 0000475F 81C410000000            	add	esp,16
  5562                                  
  5563                                  	;//CALL function
  5564                                  	;tmcReallocRegister(reg[303]);
  5565                                  	;tmcunwrap(1,1, reg[303], reg[302],NULL);
  5566 00004765 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5567 00004768 8B88BC040000            	mov	ecx, DWORD PTR [eax+1212]
  5568 0000476E 51                      	push	ecx
  5569 0000476F FF15[40114000]          	call _tmcReallocRegister
  5570 00004775 81C404000000            	add	esp,4
  5571 0000477B 6800000000              	push	0
  5572 00004780 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5573 00004783 8B88B8040000            	mov	ecx, DWORD PTR [eax+1208]
  5574 00004789 51                      	push	ecx
  5575 0000478A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5576 0000478D 8B88BC040000            	mov	ecx, DWORD PTR [eax+1212]
  5577 00004793 51                      	push	ecx
  5578 00004794 6801000000              	push	1
  5579 00004799 6801000000              	push	1
  5580 0000479E FF15[08134000]          	call _tmcunwrap
  5581 000047A4 81C414000000            	add	esp,20
  5582                                  
  5583                                  	;//CALL function
  5584                                  	;tmcReallocRegister(reg[304]);
  5585                                  	;tmcpi(1,0, reg[304]);
  5586 000047AA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5587 000047AD 8B88C0040000            	mov	ecx, DWORD PTR [eax+1216]
  5588 000047B3 51                      	push	ecx
  5589 000047B4 FF15[40114000]          	call _tmcReallocRegister
  5590 000047BA 81C404000000            	add	esp,4
  5591 000047C0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5592 000047C3 8B88C0040000            	mov	ecx, DWORD PTR [eax+1216]
  5593 000047C9 51                      	push	ecx
  5594 000047CA 6800000000              	push	0
  5595 000047CF 6801000000              	push	1
  5596 000047D4 FF15[5C134000]          	call _tmcpi
  5597 000047DA 81C40C000000            	add	esp,12
  5598                                  
  5599                                  	;tmcDiv(reg[305],reg[303],reg[304]);
  5600 000047E0 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5601 000047E3 8B88C0040000            	mov	ecx, DWORD PTR [eax+1216]
  5602 000047E9 51                      	push	ecx
  5603 000047EA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5604 000047ED 8B88BC040000            	mov	ecx, DWORD PTR [eax+1212]
  5605 000047F3 51                      	push	ecx
  5606 000047F4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5607 000047F7 8B88C4040000            	mov	ecx, DWORD PTR [eax+1220]
  5608 000047FD 51                      	push	ecx
  5609 000047FE FF15[AC104000]          	call _tmcDiv
  5610 00004804 81C40C000000            	add	esp,12
  5611                                  
  5612                                  	;tmcScalar(reg[306],1.800000000000000e+002);
  5613 0000480A 6800806640              	push	0x40668000
  5614 0000480F 6800000000              	push	0x0
  5615 00004814 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5616 00004817 8B88C8040000            	mov	ecx, DWORD PTR [eax+1224]
  5617 0000481D 51                      	push	ecx
  5618 0000481E FF15[44114000]          	call _tmcScalar
  5619 00004824 81C40C000000            	add	esp,12
  5620                                  
  5621                                  	;tmcMul(reg[307],reg[305],reg[306]);
  5622 0000482A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5623 0000482D 8B88C8040000            	mov	ecx, DWORD PTR [eax+1224]
  5624 00004833 51                      	push	ecx
  5625 00004834 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5626 00004837 8B88C4040000            	mov	ecx, DWORD PTR [eax+1220]
  5627 0000483D 51                      	push	ecx
  5628 0000483E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5629 00004841 8B88CC040000            	mov	ecx, DWORD PTR [eax+1228]
  5630 00004847 51                      	push	ecx
  5631 00004848 FF15[18114000]          	call _tmcMul
  5632 0000484E 81C40C000000            	add	esp,12
  5633                                  
  5634                                  	;tmcScalar(reg[308],3.600000000000000e+002);
  5635 00004854 6800807640              	push	0x40768000
  5636 00004859 6800000000              	push	0x0
  5637 0000485E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5638 00004861 8B88D0040000            	mov	ecx, DWORD PTR [eax+1232]
  5639 00004867 51                      	push	ecx
  5640 00004868 FF15[44114000]          	call _tmcScalar
  5641 0000486E 81C40C000000            	add	esp,12
  5642                                  
  5643                                  	;tmcSub(reg[309],reg[307],reg[308]);
  5644 00004874 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5645 00004877 8B88D0040000            	mov	ecx, DWORD PTR [eax+1232]
  5646 0000487D 51                      	push	ecx
  5647 0000487E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5648 00004881 8B88CC040000            	mov	ecx, DWORD PTR [eax+1228]
  5649 00004887 51                      	push	ecx
  5650 00004888 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5651 0000488B 8B88D4040000            	mov	ecx, DWORD PTR [eax+1236]
  5652 00004891 51                      	push	ecx
  5653 00004892 FF15[48114000]          	call _tmcSub
  5654 00004898 81C40C000000            	add	esp,12
  5655                                  
  5656                                  
  5657                                  
  5658                                  	;tmcAssign(ph,reg[309]);
  5659 0000489E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5660 000048A1 8B88D4040000            	mov	ecx, DWORD PTR [eax+1236]
  5661 000048A7 51                      	push	ecx
  5662 000048A8 8B856CFFFFFF            	mov	eax, DWORD PTR [ebp+-148]
  5663 000048AE 50                      	push	eax
  5664 000048AF FF15[68104000]          	call _tmcAssign
  5665 000048B5 81C408000000            	add	esp,8
  5666                                  
  5667                                  	;//statement here,line 68
  5668                                  
  5669                                  	;// % Lines 69--69:
  5670                                  	;//Mag=20*log10(abs(P));
  5671                                  
  5672                                  	;tmcScalar(reg[311],2.000000000000000e+001);
  5673 000048BB 6800003440              	push	0x40340000
  5674 000048C0 6800000000              	push	0x0
  5675 000048C5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5676 000048C8 8B88DC040000            	mov	ecx, DWORD PTR [eax+1244]
  5677 000048CE 51                      	push	ecx
  5678 000048CF FF15[44114000]          	call _tmcScalar
  5679 000048D5 81C40C000000            	add	esp,12
  5680                                  
  5681                                  
  5682                                  
  5683                                  	;//CALL function
  5684                                  	;tmcReallocRegister(reg[313]);
  5685                                  	;tmcabs(1,1, reg[313], P);
  5686 000048DB 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5687 000048DE 8B88E4040000            	mov	ecx, DWORD PTR [eax+1252]
  5688 000048E4 51                      	push	ecx
  5689 000048E5 FF15[40114000]          	call _tmcReallocRegister
  5690 000048EB 81C404000000            	add	esp,4
  5691 000048F1 8B8570FFFFFF            	mov	eax, DWORD PTR [ebp+-144]
  5692 000048F7 50                      	push	eax
  5693 000048F8 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5694 000048FB 8B88E4040000            	mov	ecx, DWORD PTR [eax+1252]
  5695 00004901 51                      	push	ecx
  5696 00004902 6801000000              	push	1
  5697 00004907 6801000000              	push	1
  5698 0000490C FF15[58114000]          	call _tmcabs
  5699 00004912 81C410000000            	add	esp,16
  5700                                  
  5701                                  	;//CALL function
  5702                                  	;tmcReallocRegister(reg[314]);
  5703                                  	;tmclog10(1,1, reg[314], reg[313]);
  5704 00004918 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5705 0000491B 8B88E8040000            	mov	ecx, DWORD PTR [eax+1256]
  5706 00004921 51                      	push	ecx
  5707 00004922 FF15[40114000]          	call _tmcReallocRegister
  5708 00004928 81C404000000            	add	esp,4
  5709 0000492E 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5710 00004931 8B88E4040000            	mov	ecx, DWORD PTR [eax+1252]
  5711 00004937 51                      	push	ecx
  5712 00004938 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5713 0000493B 8B88E8040000            	mov	ecx, DWORD PTR [eax+1256]
  5714 00004941 51                      	push	ecx
  5715 00004942 6801000000              	push	1
  5716 00004947 6801000000              	push	1
  5717 0000494C FF15[68124000]          	call _tmclog10
  5718 00004952 81C410000000            	add	esp,16
  5719                                  
  5720                                  	;tmcMul(reg[315],reg[311],reg[314]);
  5721 00004958 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5722 0000495B 8B88E8040000            	mov	ecx, DWORD PTR [eax+1256]
  5723 00004961 51                      	push	ecx
  5724 00004962 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5725 00004965 8B88DC040000            	mov	ecx, DWORD PTR [eax+1244]
  5726 0000496B 51                      	push	ecx
  5727 0000496C 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5728 0000496F 8B88EC040000            	mov	ecx, DWORD PTR [eax+1260]
  5729 00004975 51                      	push	ecx
  5730 00004976 FF15[18114000]          	call _tmcMul
  5731 0000497C 81C40C000000            	add	esp,12
  5732                                  
  5733                                  
  5734                                  
  5735                                  	;tmcAssign(Mag,reg[315]);
  5736 00004982 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5737 00004985 8B88EC040000            	mov	ecx, DWORD PTR [eax+1260]
  5738 0000498B 51                      	push	ecx
  5739 0000498C 8B8568FFFFFF            	mov	eax, DWORD PTR [ebp+-152]
  5740 00004992 50                      	push	eax
  5741 00004993 FF15[68104000]          	call _tmcAssign
  5742 00004999 81C408000000            	add	esp,8
  5743                                  
  5744                                  	;//statement here,line 69
  5745                                  
  5746                                  	;// % Lines 70--70:
  5747                                  	;//figure(123);
  5748                                  
  5749                                  	;tmcScalar(reg[317],1.230000000000000e+002);
  5750 0000499F 6800C05E40              	push	0x405ec000
  5751 000049A4 6800000000              	push	0x0
  5752 000049A9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5753 000049AC 8B88F4040000            	mov	ecx, DWORD PTR [eax+1268]
  5754 000049B2 51                      	push	ecx
  5755 000049B3 FF15[44114000]          	call _tmcScalar
  5756 000049B9 81C40C000000            	add	esp,12
  5757                                  
  5758                                  	;//CALL function
  5759                                  	;tmcReallocRegister(reg[318]);
  5760                                  	;tmcfigure(0,1, reg[318], reg[317]);
  5761 000049BF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5762 000049C2 8B88F8040000            	mov	ecx, DWORD PTR [eax+1272]
  5763 000049C8 51                      	push	ecx
  5764 000049C9 FF15[40114000]          	call _tmcReallocRegister
  5765 000049CF 81C404000000            	add	esp,4
  5766 000049D5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5767 000049D8 8B88F4040000            	mov	ecx, DWORD PTR [eax+1268]
  5768 000049DE 51                      	push	ecx
  5769 000049DF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5770 000049E2 8B88F8040000            	mov	ecx, DWORD PTR [eax+1272]
  5771 000049E8 51                      	push	ecx
  5772 000049E9 6801000000              	push	1
  5773 000049EE 6800000000              	push	0
  5774 000049F3 FF15[94134000]          	call _tmcfigure
  5775 000049F9 81C410000000            	add	esp,16
  5776                                  
  5777                                  	;//statement here,line 70
  5778                                  
  5779                                  	;// % Lines 71--71:
  5780                                  	;//subplot(2,1,1);
  5781                                  
  5782                                  	;tmcScalar(reg[319],2.000000000000000e+000);
  5783 000049FF 6800000040              	push	0x40000000
  5784 00004A04 6800000000              	push	0x0
  5785 00004A09 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5786 00004A0C 8B88FC040000            	mov	ecx, DWORD PTR [eax+1276]
  5787 00004A12 51                      	push	ecx
  5788 00004A13 FF15[44114000]          	call _tmcScalar
  5789 00004A19 81C40C000000            	add	esp,12
  5790                                  
  5791                                  	;tmcScalar(reg[320],1.000000000000000e+000);
  5792 00004A1F 680000F03F              	push	0x3ff00000
  5793 00004A24 6800000000              	push	0x0
  5794 00004A29 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5795 00004A2C 8B8800050000            	mov	ecx, DWORD PTR [eax+1280]
  5796 00004A32 51                      	push	ecx
  5797 00004A33 FF15[44114000]          	call _tmcScalar
  5798 00004A39 81C40C000000            	add	esp,12
  5799                                  
  5800                                  	;tmcScalar(reg[321],1.000000000000000e+000);
  5801 00004A3F 680000F03F              	push	0x3ff00000
  5802 00004A44 6800000000              	push	0x0
  5803 00004A49 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5804 00004A4C 8B8804050000            	mov	ecx, DWORD PTR [eax+1284]
  5805 00004A52 51                      	push	ecx
  5806 00004A53 FF15[44114000]          	call _tmcScalar
  5807 00004A59 81C40C000000            	add	esp,12
  5808                                  
  5809                                  	;//CALL function
  5810                                  	;tmcReallocRegister(reg[322]);
  5811                                  	;tmcsubplot(0,3, reg[322], reg[319], reg[320], reg[321]);
  5812 00004A5F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5813 00004A62 8B8808050000            	mov	ecx, DWORD PTR [eax+1288]
  5814 00004A68 51                      	push	ecx
  5815 00004A69 FF15[40114000]          	call _tmcReallocRegister
  5816 00004A6F 81C404000000            	add	esp,4
  5817 00004A75 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5818 00004A78 8B8804050000            	mov	ecx, DWORD PTR [eax+1284]
  5819 00004A7E 51                      	push	ecx
  5820 00004A7F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5821 00004A82 8B8800050000            	mov	ecx, DWORD PTR [eax+1280]
  5822 00004A88 51                      	push	ecx
  5823 00004A89 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5824 00004A8C 8B88FC040000            	mov	ecx, DWORD PTR [eax+1276]
  5825 00004A92 51                      	push	ecx
  5826 00004A93 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5827 00004A96 8B8808050000            	mov	ecx, DWORD PTR [eax+1288]
  5828 00004A9C 51                      	push	ecx
  5829 00004A9D 6803000000              	push	3
  5830 00004AA2 6800000000              	push	0
  5831 00004AA7 FF15[E8124000]          	call _tmcsubplot
  5832 00004AAD 81C418000000            	add	esp,24
  5833                                  
  5834                                  	;//statement here,line 71
  5835                                  
  5836                                  	;// % Lines 72--72:
  5837                                  	;//plot(w,Mag,'b');
  5838                                  
  5839                                  
  5840                                  
  5841                                  
  5842                                  
  5843                                  ;tmcCreateString(reg[325],"b");
  5844 00004AB3 B8[4A4F4000]            	mov	eax, .LC$9+MY_LOAD_ADDRESS
  5845 00004AB8 50                      	push eax
  5846 00004AB9 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5847 00004ABC 8B8814050000            	mov	ecx, DWORD PTR [eax+1300]
  5848 00004AC2 51                      	push	ecx
  5849 00004AC3 FF15[A4104000]          	call _tmcCreateString
  5850 00004AC9 81C408000000            	add	esp,8
  5851                                  
  5852                                  	;//CALL function
  5853                                  	;tmcReallocRegister(reg[326]);
  5854                                  	;tmcplot(0,3, reg[326], w, Mag, reg[325]);
  5855 00004ACF 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5856 00004AD2 8B8818050000            	mov	ecx, DWORD PTR [eax+1304]
  5857 00004AD8 51                      	push	ecx
  5858 00004AD9 FF15[40114000]          	call _tmcReallocRegister
  5859 00004ADF 81C404000000            	add	esp,4
  5860 00004AE5 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5861 00004AE8 8B8814050000            	mov	ecx, DWORD PTR [eax+1300]
  5862 00004AEE 51                      	push	ecx
  5863 00004AEF 8B8568FFFFFF            	mov	eax, DWORD PTR [ebp+-152]
  5864 00004AF5 50                      	push	eax
  5865 00004AF6 8B4588                  	mov	eax, DWORD PTR [ebp+-120]
  5866 00004AF9 50                      	push	eax
  5867 00004AFA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5868 00004AFD 8B8818050000            	mov	ecx, DWORD PTR [eax+1304]
  5869 00004B03 51                      	push	ecx
  5870 00004B04 6803000000              	push	3
  5871 00004B09 6800000000              	push	0
  5872 00004B0E FF15[90124000]          	call _tmcplot
  5873 00004B14 81C418000000            	add	esp,24
  5874                                  
  5875                                  	;//statement here,line 72
  5876                                  
  5877                                  	;// % Lines 73--73:
  5878                                  	;//subplot(2,1,2);
  5879                                  
  5880                                  	;tmcScalar(reg[327],2.000000000000000e+000);
  5881 00004B1A 6800000040              	push	0x40000000
  5882 00004B1F 6800000000              	push	0x0
  5883 00004B24 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5884 00004B27 8B881C050000            	mov	ecx, DWORD PTR [eax+1308]
  5885 00004B2D 51                      	push	ecx
  5886 00004B2E FF15[44114000]          	call _tmcScalar
  5887 00004B34 81C40C000000            	add	esp,12
  5888                                  
  5889                                  	;tmcScalar(reg[328],1.000000000000000e+000);
  5890 00004B3A 680000F03F              	push	0x3ff00000
  5891 00004B3F 6800000000              	push	0x0
  5892 00004B44 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5893 00004B47 8B8820050000            	mov	ecx, DWORD PTR [eax+1312]
  5894 00004B4D 51                      	push	ecx
  5895 00004B4E FF15[44114000]          	call _tmcScalar
  5896 00004B54 81C40C000000            	add	esp,12
  5897                                  
  5898                                  	;tmcScalar(reg[329],2.000000000000000e+000);
  5899 00004B5A 6800000040              	push	0x40000000
  5900 00004B5F 6800000000              	push	0x0
  5901 00004B64 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5902 00004B67 8B8824050000            	mov	ecx, DWORD PTR [eax+1316]
  5903 00004B6D 51                      	push	ecx
  5904 00004B6E FF15[44114000]          	call _tmcScalar
  5905 00004B74 81C40C000000            	add	esp,12
  5906                                  
  5907                                  	;//CALL function
  5908                                  	;tmcReallocRegister(reg[330]);
  5909                                  	;tmcsubplot(0,3, reg[330], reg[327], reg[328], reg[329]);
  5910 00004B7A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5911 00004B7D 8B8828050000            	mov	ecx, DWORD PTR [eax+1320]
  5912 00004B83 51                      	push	ecx
  5913 00004B84 FF15[40114000]          	call _tmcReallocRegister
  5914 00004B8A 81C404000000            	add	esp,4
  5915 00004B90 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5916 00004B93 8B8824050000            	mov	ecx, DWORD PTR [eax+1316]
  5917 00004B99 51                      	push	ecx
  5918 00004B9A 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5919 00004B9D 8B8820050000            	mov	ecx, DWORD PTR [eax+1312]
  5920 00004BA3 51                      	push	ecx
  5921 00004BA4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5922 00004BA7 8B881C050000            	mov	ecx, DWORD PTR [eax+1308]
  5923 00004BAD 51                      	push	ecx
  5924 00004BAE 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5925 00004BB1 8B8828050000            	mov	ecx, DWORD PTR [eax+1320]
  5926 00004BB7 51                      	push	ecx
  5927 00004BB8 6803000000              	push	3
  5928 00004BBD 6800000000              	push	0
  5929 00004BC2 FF15[E8124000]          	call _tmcsubplot
  5930 00004BC8 81C418000000            	add	esp,24
  5931                                  
  5932                                  	;//statement here,line 73
  5933                                  
  5934                                  	;// % Lines 74--74:
  5935                                  	;//plot(w,ph,'b');
  5936                                  
  5937                                  
  5938                                  
  5939                                  
  5940                                  
  5941                                  ;tmcCreateString(reg[333],"b");
  5942 00004BCE B8[4C4F4000]            	mov	eax, .LC$10+MY_LOAD_ADDRESS
  5943 00004BD3 50                      	push eax
  5944 00004BD4 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5945 00004BD7 8B8834050000            	mov	ecx, DWORD PTR [eax+1332]
  5946 00004BDD 51                      	push	ecx
  5947 00004BDE FF15[A4104000]          	call _tmcCreateString
  5948 00004BE4 81C408000000            	add	esp,8
  5949                                  
  5950                                  	;//CALL function
  5951                                  	;tmcReallocRegister(reg[334]);
  5952                                  	;tmcplot(0,3, reg[334], w, ph, reg[333]);
  5953 00004BEA 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5954 00004BED 8B8838050000            	mov	ecx, DWORD PTR [eax+1336]
  5955 00004BF3 51                      	push	ecx
  5956 00004BF4 FF15[40114000]          	call _tmcReallocRegister
  5957 00004BFA 81C404000000            	add	esp,4
  5958 00004C00 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5959 00004C03 8B8834050000            	mov	ecx, DWORD PTR [eax+1332]
  5960 00004C09 51                      	push	ecx
  5961 00004C0A 8B856CFFFFFF            	mov	eax, DWORD PTR [ebp+-148]
  5962 00004C10 50                      	push	eax
  5963 00004C11 8B4588                  	mov	eax, DWORD PTR [ebp+-120]
  5964 00004C14 50                      	push	eax
  5965 00004C15 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  5966 00004C18 8B8838050000            	mov	ecx, DWORD PTR [eax+1336]
  5967 00004C1E 51                      	push	ecx
  5968 00004C1F 6803000000              	push	3
  5969 00004C24 6800000000              	push	0
  5970 00004C29 FF15[90124000]          	call _tmcplot
  5971 00004C2F 81C418000000            	add	esp,24
  5972                                  
  5973                                  	;//statement here,line 74
  5974                                  
  5975                                  	;// % Lines 75--83:
  5976                                  	;//% 
  5977                                  
  5978                                  	;//% figure(124);
  5979                                  
  5980                                  	;//% subplot(2,1,1);
  5981                                  
  5982                                  	;//% plot(log10(w),Mag,'b');
  5983                                  
  5984                                  	;//% subplot(2,1,2);
  5985                                  
  5986                                  	;//% plot(log10(w),ph,'b');
  5987                                  
  5988                                  	;//
  5989                                  
  5990                                  	;//
  5991                                  
  5992                                  .label_1: ; //end Function
  5993                                  	;FINALLY
  5994                                  	;tmcFreeLocalVar(Mag);
  5995 00004C35 8B8568FFFFFF            	mov	eax, DWORD PTR [ebp+-152]
  5996 00004C3B 50                      	push	eax
  5997 00004C3C FF15[C8104000]          	call _tmcFreeLocalVar
  5998 00004C42 81C404000000            	add	esp,4
  5999                                  	;tmcFreeLocalVar(ph);
  6000 00004C48 8B856CFFFFFF            	mov	eax, DWORD PTR [ebp+-148]
  6001 00004C4E 50                      	push	eax
  6002 00004C4F FF15[C8104000]          	call _tmcFreeLocalVar
  6003 00004C55 81C404000000            	add	esp,4
  6004                                  	;tmcFreeLocalVar(P);
  6005 00004C5B 8B8570FFFFFF            	mov	eax, DWORD PTR [ebp+-144]
  6006 00004C61 50                      	push	eax
  6007 00004C62 FF15[C8104000]          	call _tmcFreeLocalVar
  6008 00004C68 81C404000000            	add	esp,4
  6009                                  	;tmcFreeLocalVar(d1);
  6010 00004C6E 8B8574FFFFFF            	mov	eax, DWORD PTR [ebp+-140]
  6011 00004C74 50                      	push	eax
  6012 00004C75 FF15[C8104000]          	call _tmcFreeLocalVar
  6013 00004C7B 81C404000000            	add	esp,4
  6014                                  	;tmcFreeLocalVar(d0);
  6015 00004C81 8B8578FFFFFF            	mov	eax, DWORD PTR [ebp+-136]
  6016 00004C87 50                      	push	eax
  6017 00004C88 FF15[C8104000]          	call _tmcFreeLocalVar
  6018 00004C8E 81C404000000            	add	esp,4
  6019                                  	;tmcFreeLocalVar(w1);
  6020 00004C94 8B857CFFFFFF            	mov	eax, DWORD PTR [ebp+-132]
  6021 00004C9A 50                      	push	eax
  6022 00004C9B FF15[C8104000]          	call _tmcFreeLocalVar
  6023 00004CA1 81C404000000            	add	esp,4
  6024                                  	;tmcFreeLocalVar(w0);
  6025 00004CA7 8B4580                  	mov	eax, DWORD PTR [ebp+-128]
  6026 00004CAA 50                      	push	eax
  6027 00004CAB FF15[C8104000]          	call _tmcFreeLocalVar
  6028 00004CB1 81C404000000            	add	esp,4
  6029                                  	;tmcFreeLocalVar(s);
  6030 00004CB7 8B4584                  	mov	eax, DWORD PTR [ebp+-124]
  6031 00004CBA 50                      	push	eax
  6032 00004CBB FF15[C8104000]          	call _tmcFreeLocalVar
  6033 00004CC1 81C404000000            	add	esp,4
  6034                                  	;tmcFreeLocalVar(w);
  6035 00004CC7 8B4588                  	mov	eax, DWORD PTR [ebp+-120]
  6036 00004CCA 50                      	push	eax
  6037 00004CCB FF15[C8104000]          	call _tmcFreeLocalVar
  6038 00004CD1 81C404000000            	add	esp,4
  6039                                  	;tmcFreeLocalVar(H);
  6040 00004CD7 8B458C                  	mov	eax, DWORD PTR [ebp+-116]
  6041 00004CDA 50                      	push	eax
  6042 00004CDB FF15[C8104000]          	call _tmcFreeLocalVar
  6043 00004CE1 81C404000000            	add	esp,4
  6044                                  	;tmcFreeLocalVar(AngleElecCorr);
  6045 00004CE7 8B4590                  	mov	eax, DWORD PTR [ebp+-112]
  6046 00004CEA 50                      	push	eax
  6047 00004CEB FF15[C8104000]          	call _tmcFreeLocalVar
  6048 00004CF1 81C404000000            	add	esp,4
  6049                                  	;tmcFreeLocalVar(ElecVel);
  6050 00004CF7 8B4594                  	mov	eax, DWORD PTR [ebp+-108]
  6051 00004CFA 50                      	push	eax
  6052 00004CFB FF15[C8104000]          	call _tmcFreeLocalVar
  6053 00004D01 81C404000000            	add	esp,4
  6054                                  	;tmcFreeLocalVar(len);
  6055 00004D07 8B4598                  	mov	eax, DWORD PTR [ebp+-104]
  6056 00004D0A 50                      	push	eax
  6057 00004D0B FF15[C8104000]          	call _tmcFreeLocalVar
  6058 00004D11 81C404000000            	add	esp,4
  6059                                  	;tmcFreeLocalVar(Thetas_min);
  6060 00004D17 8B459C                  	mov	eax, DWORD PTR [ebp+-100]
  6061 00004D1A 50                      	push	eax
  6062 00004D1B FF15[C8104000]          	call _tmcFreeLocalVar
  6063 00004D21 81C404000000            	add	esp,4
  6064                                  	;tmcFreeLocalVar(EangleCorrRes);
  6065 00004D27 8B45A0                  	mov	eax, DWORD PTR [ebp+-96]
  6066 00004D2A 50                      	push	eax
  6067 00004D2B FF15[C8104000]          	call _tmcFreeLocalVar
  6068 00004D31 81C404000000            	add	esp,4
  6069                                  	;tmcFreeLocalVar(BitsPerRev);
  6070 00004D37 8B45A4                  	mov	eax, DWORD PTR [ebp+-92]
  6071 00004D3A 50                      	push	eax
  6072 00004D3B FF15[C8104000]          	call _tmcFreeLocalVar
  6073 00004D41 81C404000000            	add	esp,4
  6074                                  	;tmcFreeLocalVar(NumPoles);
  6075 00004D47 8B45A8                  	mov	eax, DWORD PTR [ebp+-88]
  6076 00004D4A 50                      	push	eax
  6077 00004D4B FF15[C8104000]          	call _tmcFreeLocalVar
  6078 00004D51 81C404000000            	add	esp,4
  6079                                  	;tmcFreeLocalVar(I);
  6080 00004D57 8B45AC                  	mov	eax, DWORD PTR [ebp+-84]
  6081 00004D5A 50                      	push	eax
  6082 00004D5B FF15[C8104000]          	call _tmcFreeLocalVar
  6083 00004D61 81C404000000            	add	esp,4
  6084                                  	;tmcFreeLocalVar(Y);
  6085 00004D67 8B45B0                  	mov	eax, DWORD PTR [ebp+-80]
  6086 00004D6A 50                      	push	eax
  6087 00004D6B FF15[C8104000]          	call _tmcFreeLocalVar
  6088 00004D71 81C404000000            	add	esp,4
  6089                                  	;tmcFreeLocalVar(Iq_simul);
  6090 00004D77 8B45B4                  	mov	eax, DWORD PTR [ebp+-76]
  6091 00004D7A 50                      	push	eax
  6092 00004D7B FF15[C8104000]          	call _tmcFreeLocalVar
  6093 00004D81 81C404000000            	add	esp,4
  6094                                  	;tmcFreeLocalVar(Ha_simul);
  6095 00004D87 8B45B8                  	mov	eax, DWORD PTR [ebp+-72]
  6096 00004D8A 50                      	push	eax
  6097 00004D8B FF15[C8104000]          	call _tmcFreeLocalVar
  6098 00004D91 81C404000000            	add	esp,4
  6099                                  	;tmcFreeLocalVar(Thetas_simul);
  6100 00004D97 8B45BC                  	mov	eax, DWORD PTR [ebp+-68]
  6101 00004D9A 50                      	push	eax
  6102 00004D9B FF15[C8104000]          	call _tmcFreeLocalVar
  6103 00004DA1 81C404000000            	add	esp,4
  6104                                  	;tmcFreeLocalVar(thta);
  6105 00004DA7 8B45C0                  	mov	eax, DWORD PTR [ebp+-64]
  6106 00004DAA 50                      	push	eax
  6107 00004DAB FF15[C8104000]          	call _tmcFreeLocalVar
  6108 00004DB1 81C404000000            	add	esp,4
  6109                                  	;tmcFreeLocalVar(Ha);
  6110 00004DB7 8B45C4                  	mov	eax, DWORD PTR [ebp+-60]
  6111 00004DBA 50                      	push	eax
  6112 00004DBB FF15[C8104000]          	call _tmcFreeLocalVar
  6113 00004DC1 81C404000000            	add	esp,4
  6114                                  	;tmcFreeLocalVar(lena);
  6115 00004DC7 8B45C8                  	mov	eax, DWORD PTR [ebp+-56]
  6116 00004DCA 50                      	push	eax
  6117 00004DCB FF15[C8104000]          	call _tmcFreeLocalVar
  6118 00004DD1 81C404000000            	add	esp,4
  6119                                  	;tmcFreeLocalVar(I2);
  6120 00004DD7 8B45CC                  	mov	eax, DWORD PTR [ebp+-52]
  6121 00004DDA 50                      	push	eax
  6122 00004DDB FF15[C8104000]          	call _tmcFreeLocalVar
  6123 00004DE1 81C404000000            	add	esp,4
  6124                                  	;tmcFreeLocalVar(Y2);
  6125 00004DE7 8B45D0                  	mov	eax, DWORD PTR [ebp+-48]
  6126 00004DEA 50                      	push	eax
  6127 00004DEB FF15[C8104000]          	call _tmcFreeLocalVar
  6128 00004DF1 81C404000000            	add	esp,4
  6129                                  	;tmcFreeLocalVar(Y1);
  6130 00004DF7 8B45D4                  	mov	eax, DWORD PTR [ebp+-44]
  6131 00004DFA 50                      	push	eax
  6132 00004DFB FF15[C8104000]          	call _tmcFreeLocalVar
  6133 00004E01 81C404000000            	add	esp,4
  6134                                  	;tmcFreeLocalVar(Thetas);
  6135 00004E07 8B45D8                  	mov	eax, DWORD PTR [ebp+-40]
  6136 00004E0A 50                      	push	eax
  6137 00004E0B FF15[C8104000]          	call _tmcFreeLocalVar
  6138 00004E11 81C404000000            	add	esp,4
  6139                                  	;tmcFreeLocalVar(Iq_ave);
  6140 00004E17 8B45DC                  	mov	eax, DWORD PTR [ebp+-36]
  6141 00004E1A 50                      	push	eax
  6142 00004E1B FF15[C8104000]          	call _tmcFreeLocalVar
  6143 00004E21 81C404000000            	add	esp,4
  6144                                  	;tmcFreeLocalVar(www);
  6145 00004E27 8B45E0                  	mov	eax, DWORD PTR [ebp+-32]
  6146 00004E2A 50                      	push	eax
  6147 00004E2B FF15[C8104000]          	call _tmcFreeLocalVar
  6148 00004E31 81C404000000            	add	esp,4
  6149                                  	;tmcFreeLocalVar(cnt);
  6150 00004E37 8B45E4                  	mov	eax, DWORD PTR [ebp+-28]
  6151 00004E3A 50                      	push	eax
  6152 00004E3B FF15[C8104000]          	call _tmcFreeLocalVar
  6153 00004E41 81C404000000            	add	esp,4
  6154                                  	;tmcFreeLocalVar(Thetas_min_a);
  6155 00004E47 8B45E8                  	mov	eax, DWORD PTR [ebp+-24]
  6156 00004E4A 50                      	push	eax
  6157 00004E4B FF15[C8104000]          	call _tmcFreeLocalVar
  6158 00004E51 81C404000000            	add	esp,4
  6159                                  	;tmcFreeLocalVar(FileNames);
  6160 00004E57 8B45EC                  	mov	eax, DWORD PTR [ebp+-20]
  6161 00004E5A 50                      	push	eax
  6162 00004E5B FF15[C8104000]          	call _tmcFreeLocalVar
  6163 00004E61 81C404000000            	add	esp,4
  6164                                  	;tmcFreeLocalVar(JV_tests);
  6165 00004E67 8B45F0                  	mov	eax, DWORD PTR [ebp+-16]
  6166 00004E6A 50                      	push	eax
  6167 00004E6B FF15[C8104000]          	call _tmcFreeLocalVar
  6168 00004E71 81C404000000            	add	esp,4
  6169                                  	;tmcFreeRegFrame(reg);
  6170 00004E77 8B45F8                  	mov	eax, DWORD PTR [ebp+-8]
  6171 00004E7A 50                      	push	eax
  6172 00004E7B FF15[CC104000]          	call _tmcFreeRegFrame
  6173 00004E81 81C404000000            	add	esp,4
  6174                                  
  6175                                  	;
  6176                                  	;ENDFINALLY
  6177                                  
  6178                                  
  6179 00004E87 5F                      	pop edi
  6180 00004E88 5E                      	pop esi
  6181 00004E89 5B                      	pop ebx
  6182 00004E8A 81C400020000            	add esp,512
  6183 00004E90 89EC                    	mov esp,ebp
  6184 00004E92 5D                      	pop ebp
  6185 00004E93 C3                      	ret
  6186                                  	;end	 _tmcbtlCalcCommut
  6187 00004E94 42746C4D6F746F7231-     .LC$1:	 DB 'BtlMotor1_comm_jv750000_13p6V.mat', 0x0
  6188 00004E9D 5F636F6D6D5F6A7637-
  6189 00004EA6 35303030305F313370-
  6190 00004EAF 36562E6D617400     
  6191 00004EB6 42746C4D6F746F7231-     .LC$2:	 DB 'BtlMotor1_comm_jv1000000_13p6V.mat', 0x0
  6192 00004EBF 5F636F6D6D5F6A7631-
  6193 00004EC8 3030303030305F3133-
  6194 00004ED1 7036562E6D617400   
  6195 00004ED9 42746C4D6F746F7231-     .LC$3:	 DB 'BtlMotor1_comm_jv1500000_13p6V.mat', 0x0
  6196 00004EE2 5F636F6D6D5F6A7631-
  6197 00004EEB 3530303030305F3133-
  6198 00004EF4 7036562E6D617400   
  6199 00004EFC 42746C4D6F746F7231-     .LC$4:	 DB 'BtlMotor1_comm_jv2000000_13p6V.mat', 0x0
  6200 00004F05 5F636F6D6D5F6A7632-
  6201 00004F0E 3030303030305F3133-
  6202 00004F17 7036562E6D617400   
  6203 00004F1F 42746C4D6F746F7231-     .LC$5:	 DB 'BtlMotor1_comm_jv3000000_6p9V.mat', 0x0
  6204 00004F28 5F636F6D6D5F6A7633-
  6205 00004F31 3030303030305F3670-
  6206 00004F3A 39562E6D617400     
  6207 00004F41 722E2D00                .LC$6:	 DB 'r.-', 0x0
  6208 00004F45 6200                    .LC$7:	 DB 'b', 0x0
  6209 00004F47 6F6E00                  .LC$8:	 DB 'on', 0x0
  6210 00004F4A 6200                    .LC$9:	 DB 'b', 0x0
  6211 00004F4C 6200                    .LC$10:	 DB 'b', 0x0
  6212                                  
  6213                                  	;//FUNCTION DEFINITION BEGIN
  6214                                  	;//statement here,line 83
  6215                                  
  6216                                  	;// % Lines 84--84:
  6217                                  	 ;File: .\OutS3\CheckVar1.c generated by TMC Converter(C)2009-2013,Israel
  6218                                  	;// % Lines 1--3:
  6219                                  	;//function d=CheckVar1(p,r)
  6220                                  
  6221                                  	;//
  6222                                  
  6223                                  	;//d = polyval(p,r);
  6224                                  
  6225                                  
  6226                                  _tmcCheckVar1:
  6227 00004F4E 55                      	push ebp
  6228 00004F4F 89E5                    	mov ebp,esp
  6229 00004F51 81EC00020000            	sub esp,512
  6230 00004F57 53                      	push ebx
  6231 00004F58 56                      	push esi
  6232 00004F59 57                      	push edi
  6233 00004F5A 8DBD00FEFFFF            	lea	edi,DWORD PTR [ebp-512]
  6234                                  	;void tmcCheckVar1(int nargout, int nargin,tmsMatrix *d
  6235                                  	;,tmsMatrix *p,tmsMatrix *r	;) {
  6236                                  	;tmsMatrix **reg=tmcCreateRegFrame(5);
  6237 00004F60 6805000000              	push	5
  6238 00004F65 FF15[A0104000]          	call _tmcCreateRegFrame
  6239 00004F6B 81C404000000            	add	esp,4
  6240 00004F71 8945F8                  	mov	DWORD PTR [ebp-8],eax
  6241                                  
  6242                                  	;TRY
  6243                                  	;
  6244                                  
  6245                                  
  6246                                  
  6247                                  
  6248                                  	;//CALL function
  6249                                  	;tmcReallocRegister(reg[3]);
  6250                                  	;tmcpolyval(1,2, reg[3], p, r);
  6251 00004F74 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  6252 00004F77 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  6253 00004F7A 51                      	push	ecx
  6254 00004F7B FF15[40114000]          	call _tmcReallocRegister
  6255 00004F81 81C404000000            	add	esp,4
  6256 00004F87 8B4518                  	mov	eax, DWORD PTR [ebp+24]
  6257 00004F8A 50                      	push	eax
  6258 00004F8B 8B4514                  	mov	eax, DWORD PTR [ebp+20]
  6259 00004F8E 50                      	push	eax
  6260 00004F8F 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  6261 00004F92 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  6262 00004F95 51                      	push	ecx
  6263 00004F96 6802000000              	push	2
  6264 00004F9B 6801000000              	push	1
  6265 00004FA0 FF15[94124000]          	call _tmcpolyval
  6266 00004FA6 81C414000000            	add	esp,20
  6267                                  
  6268                                  
  6269                                  
  6270                                  	;tmcAssign(d,reg[3]);
  6271 00004FAC 8B45F8                  	mov	eax, DWORD PTR [ebp-8]
  6272 00004FAF 8B480C                  	mov	ecx, DWORD PTR [eax+12]
  6273 00004FB2 51                      	push	ecx
  6274 00004FB3 8B4510                  	mov	eax, DWORD PTR [ebp+16]
  6275 00004FB6 50                      	push	eax
  6276 00004FB7 FF15[68104000]          	call _tmcAssign
  6277 00004FBD 81C408000000            	add	esp,8
  6278                                  
  6279                                  	;//statement here,line 3
  6280                                  
  6281                                  	;// % Lines 4--5:
  6282                                  	;//
  6283                                  
  6284                                  .label_1: ; //end Function
  6285                                  	;FINALLY
  6286                                  	;tmcFreeRegFrame(reg);
  6287 00004FC3 8B45F8                  	mov	eax, DWORD PTR [ebp+-8]
  6288 00004FC6 50                      	push	eax
  6289 00004FC7 FF15[CC104000]          	call _tmcFreeRegFrame
  6290 00004FCD 81C404000000            	add	esp,4
  6291                                  
  6292                                  	;
  6293                                  	;ENDFINALLY
  6294                                  
  6295                                  
  6296 00004FD3 5F                      	pop edi
  6297 00004FD4 5E                      	pop esi
  6298 00004FD5 5B                      	pop ebx
  6299 00004FD6 81C400020000            	add esp,512
  6300 00004FDC 89EC                    	mov esp,ebp
  6301 00004FDE 5D                      	pop ebp
  6302 00004FDF C3                      	ret
  6303                                  	;end	 _tmcCheckVar1
  6304                                  
  6305                                  	;//FUNCTION DEFINITION BEGIN
  6306                                  	;//statement here,line 5
  6307                                  
  6308                                  	;// % Lines 6--6:
  6309                                  	%include "PE_tail.inc"
  6310                              <1> 
  6311                              <1> 
  6312 00004FE0 00<rept>            <1> align filealign, db 0
  6313                              <1> codesize equ $ - code
  6314                              <1> 
  6315                              <1> filesize equ $ - $$
